define({"829":{i:0.000356868739587109,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/start.htm",a:"Start the MCO REST server.  For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_start(mcorest_h rest);\n  Arguments Description This function starts the MCO REST server. No further operations on the server handle and interface handles are allowed until mcorest_stop()is called. This ...",t:"mcorest_start"},"830":{i:0.000278079173422608,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/stop.htm",a:"Stops the MCO REST server in threaded mode after it was started\n with  mcorest_start().  For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_stop(mcorest_h rest);\n  Arguments Description This function stops the MCO REST server in threaded mode after it was started\n with  ...",t:"mcorest_stop"},"831":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/interface_check.htm",a:"Check the interface for incoming network connections. For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_interface_check(mcorest_interface_h intf, \n                      long timeout, \n                      mcorest_conn_h *conn);\n                        Arguments Description This ...",t:"mcorest_interface_check"},"832":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/conn_execute.htm",a:"Executes one or more HTTP requests. For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_conn_execute(mcorest_conn_h conn, \n                     long timeout);\n                        Arguments Description This function executes one or more HTTP requests. This function may be called ...",t:"mcorest_conn_execute"},"833":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/conn_cancel.htm",a:"Close an active connection.  For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_conn_cancel(mcorest_conn_h conn);\n                        Arguments Description This function closes an active connection. The connection must not be cancelled while it is being used by a different ...",t:"mcorest_conn_cancel"},"834":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/interface_close.htm",a:"Shut down the interface. For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_interface_close(mcorest_interface_h intf);\n                        Arguments Description This function shuts down the interface. This function must not be called while the server is running in threaded mode ...",t:"mcorest_interface_close"},"835":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/destroy.htm",a:"  Destroy the MCO REST server instance.  For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_destroy(mcorest_h rest);\n  Arguments Description This function destroys the MCO REST server instance. The server may only be destroyed by the same thread that created it. Return Codes",t:"mcorest_destroy"},"836":{i:0.000229343418148259,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/shutdown.htm",a:"mcorest_shutdown   Shut down the MCO REST server  runtime. For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_shutdown();\n  Arguments Description This function   shuts down the MCO REST server runtime. Return Codes",t:"mcorest_shutdown"},"837":{i:0.000662890156134431,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_handler_fn.htm",a:"Web service request handler routine. For an overview see page  Web Services Prototype  \n  typedef MCO_RET (* mcorest_api_handler_fn)(void *ctx, mcoapi_request_h request, \n            const char *path_suffix);\n  Arguments Description The handler routine in a web service library will be called when ...",t:"mcorest_api_handler_fn"},"838":{i:0.00020688533513975,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_failure.htm",a:"Record details of a handler failure. For an overview see page  Web Services Prototypes  \n    MCOREST_API void mcorest_api_failure(mcohs_request_h req, \n                            const char *file, \n                            int line, \n                            int is_internal);\n  Arguments ...",t:"mcorest_api_failure"},"839":{i:0.00020688533513975,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_failure_clear.htm",a:"Reset the previously set failure details associated with the HTTP request object. For an overview see page  Web Services Prototypes  \n    MCOREST_API void mcorest_api_failure_clear(mcohs_request_h req); \n  Arguments Description This function resets the previously set failure details associated with ...",t:"mcorest_api_failure_clear"},"840":{i:0.00012163265184034,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_stream_with_request.htm",a:"Initialize a stream from an MCO EWS HTTP request. For an overview see page  Web Services Prototype  \n  MCOREST_API void mcorest_api_stream_with_request(mcohs_request_h req, \n                                    mcorest_api_stream_t *s);\n  Arguments Description This function Initializes a stream from ...",t:"mcorest_api_stream_with_request"},"841":{i:0.00020688533513975,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_request_from_stream.htm",a:"Return the  MCO EWS HTTP request  request associated with the stream. For an overview see page  Web Services Prototype  \n    MCOREST_API mcohs_request_h mcorest_api_request_from_stream(mcorest_api_stream_t *s);\n  Arguments Description This function returns the  MCO EWS HTTP request  request ...",t:"mcorest_api_request_from_stream"},"842":{i:0.000347750589867691,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_register_service.htm",a:"Register the URL path and the handler routine with the mcorest core library. For an overview see page  Web Services Prototype  \n  MCO_RET mcorest_api_register_service(mcorest_h rest, \n                        const char *path, \n                        mcorest_api_handler_fn h, \n                       ...",t:"mcorest_api_register_service"},"843":{i:0.00126166630959852,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_status_.htm",a:"Send API status code to the web service caller. For an overview see page  Web Services Prototypes  \n  void mcorest_api_status_ok(mcohs_request_h req);\n   \n  void mcorest_api_status_bad_request(mcohs_request_h req, const char *info);\n   \n  void mcorest_api_status_internal_error(mcohs_request_h req, ...",t:"mcorest_api_status_"},"844":{i:0.00216144974123136,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_json_read_.htm",a:"mcorest_api_json_read_* For an overview see page  Web Services The following table lists the functions used to read JSON data from the web service caller. Please use the links to view detailed descriptions and examples:",t:"mcorest_api_json_read_*"},"845":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_start.htm",a:"Start reading JSON data from a stream. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_start( mcorest_api_stream_t *s, \n                        mcorest_api_json_read_ctx_t *ctx);\n  Arguments Description This function starts reading JSON data from a ...",t:"mcorest_api_json_read_start"},"846":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_finish.htm",a:"Finish reading JSON data from the stream. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET  mcorest_api_json_read_finish( mcorest_api_json_read_ctx_t *ctx );\n  Arguments Description This function finishes reading JSON data from the stream and does sanity checks. No further\n ...",t:"mcorest_api_json_read_finish"},"847":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_next_token.htm",a:"Retrieve the type of the next token in the JSON stream. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_next_token( /*IN*/ mcorest_api_json_read_ctx_t *ctx,\n                            /*IN*/ MCOREST_API_JSON_TKN_TYPE expected_type,\n                    ...",t:"mcorest_api_json_read_next_token"},"848":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_object_begin.htm",a:"Begin reading a JSON object. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_object_begin( mcorest_api_json_read_ctx_t *ctx );\n  Arguments Description This function begins reading a JSON object. Return Codes Example  \n    static void read_object(void ...",t:"mcorest_api_json_read_object_begin"},"849":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_object_end.htm",a:"Finish reading the JSON object. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_object_end( mcorest_api_json_read_ctx_t *ctx );\n  Arguments Description This function finishes reading the JSON object. Return Codes Example  \n    static void ...",t:"mcorest_api_json_read_object_end"},"850":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_array_begin.htm",a:"Begin reading a JSON array. For an overview see page  mcorest_api_json_read_* Prototype      \n    MCO_RET mcorest_api_json_read_array_begin( mcorest_api_json_read_ctx_t *ctx );\n  Arguments Description This function begins reading a JSON array. Return Codes Example  \n    mcorest_api_json_read_ctx_t ...",t:"mcorest_api_json_read_array_begin"},"851":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_array_end.htm",a:"Finish reading the JSON array. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_array_end( mcorest_api_json_read_ctx_t *ctx );\n  Arguments Description This function finishes reading the JSON array. Return Codes Example  \n    mcorest_api_json_read_ctx_t ...",t:"mcorest_api_json_read_array_end"},"852":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_string.htm",a:"Read a quoted string from the input stream. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_string( mcorest_api_json_read_ctx_t *ctx, \n                            int as_key, \n                            int cont,\n                            char ...",t:"mcorest_api_json_read_string"},"853":{i:0.000346856545990628,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_numeric.htm",a:"Read a numeric value as a string from the input stream. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_numeric(mcorest_api_json_read_ctx_t *ctx,\n                            char *buf, \n                            int len);\n  Arguments Description This ...",t:"mcorest_api_json_read_numeric"},"854":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/numeric_is_integer.htm",a:"Return a non-zero value if the input string contains an integer number. For an overview see page  mcorest_api_json_read_* Prototype  \n    int mcorest_api_json_numeric_is_integer( const char *str );\n  Arguments Description This function returns a non-zero value if str contains an integer number. The ...",t:"mcorest_api_json_numeric_is_integer"},"855":{i:0.000268756110595343,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/numeric_as_long.htm",a:"Convert a numeric JSON value to a long. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_numeric_as_long( const char *str, long *val );\n  Arguments Description This function converts a numeric JSON value to a long. If str does not contain an integer,\n it ...",t:"mcorest_api_json_numeric_as_long"},"856":{i:0.000268756110595343,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/numeric_as_i64.htm",a:"Convert a numeric JSON value to a mco_int8 value. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_numeric_as_i64( const char *str, mco_int8 *val );\n  Arguments Description This function converts a numeric JSON value to a 64 bit integer. If str does not ...",t:"mcorest_api_json_numeric_as_i64"},"857":{i:0.000268756110595343,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/numeric_as_double.htm",a:"Convert a numeric JSON value to a double. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_numeric_as_double( const char *str, double *val );\n  Arguments Description This function converts a numeric JSON value to a double. If str does not contain a numeric,\n ...",t:"mcorest_api_json_numeric_as_double"},"858":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_long.htm",a:"Read a numeric JSON value and convert it to a long. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_long( mcorest_api_json_read_ctx_t *ctx, long *val );\n  Arguments Description This function reads a numeric JSON value and converts it to a long. It is a ...",t:"mcorest_api_json_read_long"},"859":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_i64.htm",a:"Read a numeric JSON value and convert it to a 64 bit integer. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_i64( mcorest_api_json_read_ctx_t *ctx, mco_int8 *val );\n  Arguments Description This function reads a numeric JSON value and converts it to a ...",t:"mcorest_api_json_read_i64"},"860":{i:0.000229705892897701,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Read/read_double.htm",a:"Read a numeric JSON value and convert it to a double. For an overview see page  mcorest_api_json_read_* Prototype  \n    MCO_RET mcorest_api_json_read_double( mcorest_api_json_read_ctx_t *ctx, double *val );\n  Arguments Description This function reads a numeric JSON value and converts it to a double. ...",t:"mcorest_api_json_read_double"},"861":{i:0.0022093746428733,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/mcorest_api_json_write_.htm",a:"mcorest_api_json_write_* For an overview see page  Web Services The following table lists the functions used to write JSON data to the web service caller. Please use the links to view detailed descriptions and examples:",t:"mcorest_api_json_write_*"},"862":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_start.htm",a:"Start writing JSON to a request\u0027s response stream. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_start(mcorest_api_stream_t *s, \n                        mcorest_api_json_write_ctx_t *ctx);\n  Arguments Description This function starts writing JSON ...",t:"mcorest_api_json_write_start"},"863":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_finish.htm",a:"Finish writing JSON data to the stream. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_finish( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function finishes writing JSON data to the stream; closes the top-level JSON object ...",t:"mcorest_api_json_write_finish"},"864":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_key.htm",a:"Write a JSON key. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_key( mcorest_api_json_write_ctx_t *ctx, const char *key );\n      Arguments Description This function writes a JSON key. Return Codes Example  \n    static MCO_RET ...",t:"mcorest_api_json_write_key"},"865":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_object_begin.htm",a:"Start a JSON object. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_object_begin( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function starts a JSON object, outputting the opening brace. Return Codes Example  \n    static ...",t:"mcorest_api_json_write_object_begin"},"866":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_object_end.htm",a:"End a JSON object. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_object_end( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function ends a JSON object, outputting the closing brace. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_object_end"},"867":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_array_begin.htm",a:"Start a JSON array. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_array_begin( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function starts a JSON array, outputting the opening bracket. Return Codes Example      \n    static ...",t:"mcorest_api_json_write_array_begin"},"868":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_array_end.htm",a:"End a JSON array. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_array_end( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function ends a JSON array, outputting the closing bracket. Return Codes Example      \n    static ...",t:"mcorest_api_json_write_array_end"},"869":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_bool.htm",a:"Write a boolean value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_bool( mcorest_api_json_write_ctx_t *ctx, int b );\n      Arguments Description This function writes a boolean value. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_bool"},"870":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_long.htm",a:"Write a long value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_long( mcorest_api_json_write_ctx_t *ctx, long l );\n      Arguments Description This function writes a long value. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_long"},"871":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_ulong.htm",a:"Write an unsigned long value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_ulong( mcorest_api_json_write_ctx_t *ctx, unsigned long u );\n      Arguments Description This function writes an unsigned long value. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_ulong"},"872":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_i64.htm",a:"Write a 64 bit integer value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_i64( mcorest_api_json_write_ctx_t *ctx, mco_int8 i8 );\n      Arguments Description This function writes a 64 bit integer value. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_i64"},"873":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_u64.htm",a:"Write an unsigned 64 bit integer value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_u64( mcorest_api_json_write_ctx_t *ctx, mco_uint8 u8 );\n      Arguments Description This function writes an unsigned 64 bit integer value. Return Codes Example  \n ...",t:"mcorest_api_json_write_u64"},"874":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_double.htm",a:"Write a double value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_double( mcorest_api_json_write_ctx_t *ctx, double d );\n      Arguments Description This function writes a double value. Return Codes Example  \n    static void ...",t:"mcorest_api_json_write_double"},"875":{i:0.000270861039097305,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_string_begin.htm",a:"Start writing a string value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_string_begin( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function starts writing a string value by outputting the opening quote. Return Codes ...",t:"mcorest_api_json_write_string_begin"},"876":{i:0.000240960675954079,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_string_part.htm",a:"Write a fragment of a string value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_string_part( mcorest_api_json_write_ctx_t *ctx, \n                                const char *s, \n                                size_t len );\n      Arguments ...",t:"mcorest_api_json_write_string_part"},"877":{i:0.000270861039097305,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_string_end.htm",a:"End the string value. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_string_end( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function ends the string value by outputting the closing quote. Return Codes Example  \n    static ...",t:"mcorest_api_json_write_string_end"},"878":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_string.htm",a:"Write a string. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_string( mcorest_api_json_write_ctx_t *ctx, const char *str );\n      Arguments Description This function writes a string. It escapes double quotes and backslashes. If the string is NULL, ...",t:"mcorest_api_json_write_string"},"879":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_null.htm",a:"Writes a null. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_null( mcorest_api_json_write_ctx_t *ctx );\n      Arguments Description This function writes a null. Return Codes Example  \n    static void print_null(mcorest_api_json_write_ctx_t *jctx )\n ...",t:"mcorest_api_json_write_null"},"880":{i:0.000240960675954079,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_hex_string_part.htm",a:"Write a fragment of a hexadecimal representation of binary data. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_hex_string_part( mcorest_api_json_write_ctx_t *ctx, \n                                const void *b, \n                                ...",t:"mcorest_api_json_write_hex_string_part"},"881":{i:0.000211060312810854,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Web_Services/JSON_Write/write_hex_string.htm",a:"Write binary data converted to hexadecimal string representation. For an overview see page  mcorest_api_json_write_* Prototype  \n    MCO_RET mcorest_api_json_write_hex_string( mcorest_api_json_write_ctx_t *ctx, \n                                const void *data, \n                                ...",t:"mcorest_api_json_write_hex_string"},"882":{i:0.00020576167311603,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Custom_Encryption.htm",a:"To implement a custom encryption algorithm, developers must implement the following APIs. Stubs for these APIs are provided in the \"stub\" library mcocryptstub. The stub library  contains empty API implementations which simply halt processing with the error code MCO_E_UNSUPPORTED. Developers need to ...",t:"Custom Encryption C API"},"883":{i:0.00015078240422774,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Crypt/algorithm.htm",a:"Return the algorithm type supported by the encryption library currently linked. For an overview see page  Encryption C API Prototype  \n    uint1 mco_crypt_algorithm();\n      Arguments Description This function returns the algorithm type supported by the encryption library currently linked. Return ...",t:"mco_crypt_algorithm"},"884":{i:0.000209827967878984,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Crypt/init_ctx.htm",a:"Prepare the encryption context by a cipher key string. For an overview see page  Encryption C API Prototype  \n    void mco_crypt_init_ctx(mco_crypt_ctx_t* crypt_ctx, const char * cipher_key);\n      Arguments Description This function prepares the encryption context by a cipher key string. This ...",t:"mco_crypt_init_ctx"},"885":{i:0.000277860207663138,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Crypt/block.htm",a:"Encrypt or decrypt a block of data using the encryption context. For an overview see page  Encryption C API Prototype  \n    void mco_crypt_block(mco_crypt_ctx_t const* crypt_ctx, uint1* block, uint4 block_size, uint8 block_offs);\n      Arguments Description This function encrypts or decrypts a block ...",t:"mco_crypt_block"},"886":{i:0.00029900523731754,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Crypt/stream.htm",a:"Encrypt or decrypt a block of data using the encryption context. For an overview see page  Encryption C API Prototype  \n    void mco_crypt_stream(mco_crypt_ctx_t const* crypt_ctx, \n                mco_crypt_state_t* state, \n                uint1* buf, \n                uint4 size);\n      Arguments ...",t:"mco_crypt_stream"},"887":{i:0.000209827967878984,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Crypt/init_state.htm",a:"Create an encryption state structure using the encryption context. For an overview see page  Encryption C API Prototype  \n    void mco_crypt_init_state(mco_crypt_ctx_t const* crypt_ctx, mco_crypt_state_t* state);\n      Arguments Description This function creates an encryption state structure using ...",t:"mco_crypt_init_state"},"888":{i:0.000133446392763251,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous.htm",a:"Miscellaneous Functions The following APIs perform specialized functions :",t:"Miscellaneous Functions"},"889":{i:0.00210947637095084,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous/register_collations.htm",a:"Register collation functions with the runtime. Prototype  \n    MCO_RET mco_register_collations(\t/*IN*/ const_char * dbname, \n                       /*IN*/ mco_collation_funcs_h colls);\n  Arguments Description This function registers collation functions with the runtime when a specific collation ...",t:"mco_register_collations"},"890":{i:0.000140537615538164,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous/system_get_current_time.htm",a:"Retrieve the operating system time. Prototype  \n    timer_unit mco_system_get_current_time(void);\n  Arguments Description This function retrieves from the operating system the number of timer ticks (microseconds) since 1 Jan 1970 (Epoch). Return Value Example  \n     \n    int main(int argc, char* ...",t:"mco_system_get_current_time"},"891":{i:0.000341198241654864,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous/ticks2time.htm",a:"Convert datetime between the application\u0027s and database\u0027s resolution. Prototype  \n    mco_int8 mco_ticks2time(mco_int8 ticks, int scale);\n  Arguments Description This function converts the argument ticks to the corresponding value specified by the resolution argument scale. Return Value Example  \n   ...",t:"mco_ticks2time"},"892":{i:0.000341198241654864,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous/time2ticks.htm",a:"Convert datetime between the application\u0027s and database\u0027s resolution. Prototype  \n    mco_int8 mco_time2ticks(mco_int8 time, int scale);\n  Arguments Description This function converts the argument time to the corresponding value specified by the resolution argument scale. Return Value Example  \n    ...",t:"mco_time2ticks"},"893":{i:0.000394010933233219,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Miscellaneous/core_load.htm",a:"This function loads eXtremeDB libraries dynamically. Prototype  \n    MCO_RET mco_core_load(\tmco_bool disk, mco_bool mvcc, mco_bool shmem, \n                const char *sync_library, \n                const char *memory_library, \n                const char *runtime_path); \n  Arguments Description Some ...",t:"mco_core_load"},});