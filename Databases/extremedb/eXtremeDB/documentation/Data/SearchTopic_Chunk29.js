define({"2013":{i:0.00163337971759634,u:"../Content/Programming/Common/Analytics/Window_v_Grid_Agg_Functions.htm",a:"The Window Aggregate functions are similar to the corresponding Grid Aggregate functions except that the interval indicates the next N elements from the input sequence. So for example, given a sequence of 12 elements with interval = 7, whereas the grid_agg_avg function would calculate the average ...",t:"Window versus Grid Aggregate Functions"},"2014":{i:0.000471163690020568,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Database_Classes.htm",a:"The Java Embedded Database Classes For an overview see page  Database Class Please use the links below to view  the individual class definitions:",t:"The Java Embedded Database Classes"},"2015":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/Connection.htm",a:"Connection provides the interface for all threads interacting with a Database object. For an overview see page  C# Classes Class Definition  \n    public class Connection implements java.io.Closeable\n    {\n        /* Constructors */\n        public Connection(Database db) \n        {\n            ...",t:"The C# Connection Class"},"2016":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Comparison_Methods.htm",a:"The comparison Java SequenceIterator methods take an input sequence argument, and produce the boolean result sequence by applying the specified comparison operator on the object\u0027s sequence and the corresponding elements in the input sequence. If the two input sequence arguments are of different ...",t:"Comparison Java SequenceIterator Methods"},"2017":{i:0.00054040072016256,u:"../Content/Programming/Python/Classes/IoT/IoTReplicator/sync.htm",a:"IoTReplicator.sync() Perform synchronization with the server database. For an overview see page  Python IoTReplicator Class Prototype  \n    sync(agent_id, flags)\n  Arguments Description This method performs synchronization with the server database. Returns",t:"IoTReplicator.sync()"},"2018":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Manipulator_Methods.htm",a:"The manipulator Java SequenceIterator methods take a variety of  sequence arguments and produce result sequences  as described in the table below: Example Following is an example code snippet demonstrating sequence manipulator methods:          \n    public static void windowAggregate(Connection ...",t:"Manipulator Java SequenceIterator Methods"},"2019":{i:0.000374445085109967,u:"../Content/Programming/Python/Classes/IoT/IoTCommunicator/listen.htm",a:"IoTCommunicator.listen() Perform the IoTCommunicator listen. For an overview see page  Python IoTCommunicator Class Prototype  \n    listen(address, sock_params)\n  Arguments Description This function initiates the listen operation for an IoTCommunicator object. Returns",t:"IoTCommunicator.listen()"},"2020":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Miscellaneous_Methods.htm",a:"The miscellaneous Java SequenceIterator methods take a variety of input sequence arguments and produce result sequences or scalar types as described in the table below: Example Following is an example code snippet demonstrating the sort method:          \n    public static void sort(Connection con)\n  ...",t:"Miscellaneous Java SequenceIterator Methods"},"2021":{i:0.000335506090590769,u:"../Content/Programming/C/Structures/Backup.htm",a:"The  Incremental Backup feature uses the following structures defined in mco.h:  \n    typedef struct mco_backup_info_t \n    {\n        uint4 magic; \n        uint4 protocol_version; \n        uint4 type; \n        uint4 flags; \n        uint4 backup_no; \n        uint8 timestamp; \n        uint8 size; \n    ...",t:"Incremental Backup"},"2022":{i:0.000136402374979318,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Statistic_Classes/DiskInfo.htm",a:"For an overview see page  Java Statistic Class Class Definition  \n    public static class DiskInfo\n    {\n        public long DataFileSize;\n        public long LogFileSize;\n        public long UsedDatabaseSize;\n         \n        public DiskInfo(long DataFileSize, long LogFileSize, long ...",t:"The Java Embedded Statistic Class DiskInfo"},"2023":{i:0.000187179668720946,u:"../Content/Programming/C/Return Codes/SQL_Return_Codes.htm",a:"eXtremeDB SQL Return Codes The following SQL return codes indicate SQL-specific runtime or error conditions that might be returned by the eXtremeDB runtime while processing  SQL statements :",t:"eXtremeDB XML Error Codes"},"2024":{i:0.000350601307658743,u:"../Content/Users_Guides/xPanel.htm",a:"The xPanel application provides an easy to use graphical interface to launch eXtremeDB tools  and to simplify the configuration of xSQL and Feed Handler configuration files. The dashboard interface provides the following interactive graphical utility modules, and easy access Help to explain how to ...",t:"The xPanel Graphic Dashboard"},"2025":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Logical_Operators.htm",a:"The logical  Java SequenceIterator methods (except the not operator) take a single argument other, and perform the indicated logical operation on the object\u0027s sequence elements as the left operand and the other sequence elements as the right  operand. They return a Boolean result SequenceIterator. ...",t:"Logical Java SequenceIterator Methods"},"2026":{i:0.00012163265184034,u:"../Content/KBTopicTemplate.htm",a:"Article Title Summary: Type a one- or two-sentence summary of the article. Full Description: Provide a more detailed description here. Solution: Provide a solution if one exists here. Step 1 Step 2 Step 3 Attribution:",t:"Article Title"},"2027":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Collapse_Methods.htm",a:"The collapse Java SequenceIterator methods operate on the object\u0027s and the input sequences, left and right, to produce the computed scalar result  of  type double. The method signatures are of the following form (where op is the indicated operation):  \n    public SequenceIterator op(SequenceIterator ...",t:"Collapse Java SequenceIterator Methods"},"2028":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Conditional_Methods.htm",a:"The following conditional SequenceIterator methods   apply the object\u0027s boolean sequence to the input sequence(s). These methods are of the following types: Ternary operation iif() which takes two input sequence arguments then and otherwise, and produces a result sequence of the same type by ...",t:"Conditional Java SequenceIterator Methods"},"2029":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/GridAgg_Methods.htm",a:"The Grid Aggregate Java SequenceIterator methods take an integer interval argument and produce a result sequence containing the calculated aggregate for each interval.  Example Following is an example code snippet demonstrating a grid aggregate method:          \n    public static void ...",t:"Grid Aggregate Java SequenceIterator Methods"},"2030":{i:0.00012163265184034,u:"../Content/Programming/C/Structures/Dict_Class_Storage.htm",a:"UDA Dictionary Class Storage Following is the definition of the mco_dict_class_storage_t structure that is used for calls to  mco_uda_db_open_() as defined in mcouda.h:   The values for the persistence parameter should be set with one of the following values defined in mcouda.h:",t:"UDA Dictionary Class Storage"},"2031":{i:0.000211048157037757,u:"../Content/Programming/Common/Analytics/Hash_Agg_Grouping.htm",a:"Hash Aggregate Grouping C Functions The Hash Aggregate C API functions group aggregates based on hash functions. So, unlike the mco_seq_group_agg_TYPE() APIs, these functions do not require that the grouping sequence be ordered. Also unlike all other sequence functions, this group of functions ...",t:"Hash Aggregate Grouping"},"2032":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/Cursor.htm",a:"The C# Cursor  Class  Cursor provides methods for iterating through instances of a class. For an overview see page  C# Classes Class Definition  \n    public class Cursor\u003cT\u003e implements Iterable\u003cT\u003e, Iterator\u003cT\u003e, java.io.Closeable\n    {\n     \n        public enum Operation \n        {\n            ...",t:"The C# Cursor Class "},"2033":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/SequenceIterator.htm",a:"The Java  SequenceIterator  Class  SequenceIterator is used to iterate  sequence fields. Note that iteration is performed in tile mode; i.e. more than one  sequence items are fetched at each iteration. All these items in the tile can be obtained using method tileItems(). The main iterator method is ...",t:"The Java SequenceIterator Class "},"2034":{i:0.000136402374979318,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Statistic_Classes/IndexStatKDTree.htm",a:"The Java Embedded Statistic Class IndexStatKDTree For an overview see page  Java Statistic Class Class Definition  \n    public static class IndexStatKDTree extends IndexStat\n    {\n        public long LevelsCount;\n    };\n        Definitions:",t:"The Java Embedded Statistic Class IndexStatKDTree"},"2035":{i:0.000148046764257888,u:"../Content/Programming/xSQL/xSQL_Functions/iot_list.htm",a:"Lists the currently connected IoT nodes. For an overview see page  Introduction to eXtremeDB Active Replication Fabric Prototype      \n    xsql_iot_list();\n      Arguments Description This function lists the currently connected IoT nodes. For example, on the server this will be a list of connected ...",t:"xsql_iot_connections"},"2036":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/GroupAgg_Methods.htm",a:"The Group Aggregate Java SequenceIterator methods (except groupAggWavg() and groupAggCount()) take an input groupBy sequence argument and produce a result sequence containing the calculated aggregate for each group. The object\u0027s sequence is split into groups based on the values in the groupBy ...",t:"Group Aggregate Java SequenceIterator Methods"},"2037":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Iterator_Methods.htm",a:"The iterator Java SequenceIterator methods are used to extract and iterate  the object\u0027s sequence elements, determine the  sequence element type, size and position within the iterator\u0027s sequence, determine the sequence  tile  size, and, for  RLE  encoded sequences, determine the repeat count or ...",t:"Iterator Java SequenceIterator Methods"},"2038":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/GroupByResult.htm",a:"The Java  GroupByResult  Class  GroupByResult represents the result of group by aggregation operation For an overview see page  Java Classes Class Definition  \n    public  class GroupByResult implements java.io.Closeable\n    {\n        private SequenceIterator aggIterator;\n        private ...",t:"The Java GroupByResult Class "},"2039":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Binary_Methods.htm",a:"The binary Java SequenceIterator methods  produce a result sequence of the same type by applying the specified operation on the object\u0027s sequence and the corresponding elements in the input sequence. The operation can be one of the following:  Example Following is an example code snippet ...",t:"Binary Java SequenceIterator Methods"},"2040":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/Statistic.htm",a:"The Java  Statistic  Class  The Statistic  class is used to provide runtime database statistics . For an overview see page  Java Classes Class Definition  \n    public  class Statistic\n    {\n        public static class ClassStat {\n            public long ObjectsCount;\n            public int ...",t:"The Java Statistic Class "},"2041":{i:0.000374445085109967,u:"../Content/Programming/Python/Classes/IoT/IoTCommunicator/Constructor.htm",a:"Create an IoTCommunicator instance with a list of optional parameters. For an overview see page  Python IoTCommunicator Class Prototype  \n    IoTCommunicator(comm_params, on_connect, on_recieve, on_ack, on_disconnect, on_destroy)\n  Arguments Description This constructor creates an instance of ...",t:"The Python IoTCommunicator Constructor"},"2042":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/Database.htm",a:"Database provides the wrapper for interfacing with eXtremeDB databases. For an overview see page  C# Classes Class Definition  \n    public class Database implements java.io.Closeable \n    {\n        /* Public enums */\n        public enum TransactionType {…};\n        public enum TransactionPriority ...",t:"The C# Database Class"},"2043":{i:0.000271510864410762,u:"../Content/Programming/C/Core_Functions/Static/Auxiliary/Backup/async_backup_stop.htm",a:"Stop the asynchronous backup process. For an overview see page  Incremental Online Backup in C Prototype  \n    MCO_RET mco_async_backup_stop         ( /*IN*/ mco_db_h connection, \n                        /*IN*/ int force)\n  Arguments Description This function breaks the backup cycle run and finishes ...",t:"mco_async_backup_stop"},"2044":{i:0.000136402374979318,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Statistic_Classes/IndexStatHash.htm",a:"The Java Embedded Statistic Class IndexStatHash For an overview see page  Java Statistic Class Class Definition  \n    public static class IndexStatHash extends IndexStat\n    {\n        public long AvgChainLength;\n        public long MaxChainLength;\n    };\n        Definitions:",t:"The Java Embedded Statistic Class IndexStatHash"},"2045":{i:0.00012163265184034,u:"../Content/Programming/SQL/SQL_Functions.htm",a:"eXtremeSQL Functions eXtremeSQL provides a number of SQL functions for performing a variety of operations. Please use the following links to view the available SQL functions:",t:"eXtremeSQL Functions"},"2046":{i:0.000136402374979318,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Statistic_Classes/IndexStat.htm",a:"For an overview see page  Java Statistic Class Class Definition  \n    public static class IndexStat\n    {\n        public short ClassCode;\n        public int type;\n \n        public String Label; \n        public long  KeysCount;\n        public long  PagesCount; \n    };\n        Definitions:",t:"The Java Embedded Statistic Class IndexStat"},"2047":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/Top_Methods.htm",a:"The top Java SequenceIterator methods  take an integer argument n and produce result sequences of the top n maximum or minimum elements or their positions: Example Following is an example code snippet demonstrating one of these functions:      \n        SequenceIterator close = ...",t:"Top Java SequenceIterator Methods"},"2048":{i:0.00012163265184034,u:"../Content/Programming/Csharp/Classes/Sequence.htm",a:"The C# Sequence  Interface The Sequence interface is used to store an array field in the database as a  sequence. For an overview see page  Java Classes Class Definition  \n    @Target(ElementType.FIELD)\n    @Retention(RetentionPolicy.RUNTIME)\n    public @interface Sequence \n    {\n        public enum ...",t:"The C# Sequence Interface "},"2049":{i:0.00043221347391139,u:"../Content/Programming/Csharp/HA/SetQuorum.htm",a:"This method is called by the master to set the HA quorum at runtime. For an overview see page  HA Applications Prototype  \n    public void SetQuorum(int quorum);\n  Arguments Description This function is called by the master  to set the HA quorum at runtime. Note that a value of quorum greater than 0 ...",t:"SetQuorum"},"2050":{i:0.000127376433061053,u:"../Content/Programming/Csharp/Classes/Analytics_Methods/CumulativeAgg_Methods.htm",a:"All Cumulative Aggregate Java SequenceIterator methods produce a result sequence in which the value of each element is the result of the specified operation on all of the preceding elements. Example Following is an example code snippet demonstrating a cumulative aggregate function:          \n        ...",t:"Cumulative Aggregate Java SequenceIterator Methods"},"2051":{i:0.000136402374979318,u:"../Content/Programming/Java/Classes/Embedded_Classes/Embedded_Statistic_Classes/IndexStatTree.htm",a:"The Java Embedded Statistic Class IndexStatTree For an overview see page  Java Statistic Class Class Definition  \n    public static class IndexStatTree extends IndexStat\n    {\n        public long LevelsCount;\n        public long DuplicatesCount;\n    };\n        Definitions:",t:"The Java Embedded Statistic Class IndexStatTree"},"2052":{i:0.000278454293466484,u:"../Content/Programming/Common/Analytics/Win_Agg_ATR.htm",a:" The  Average True Range (ATR) is calculated using the algorithm described in the following Wikipedia page:  http://en.wikipedia.org/wiki/Moving_average The true range is the largest of the: Most recent period\u0027s high minus the most recent period\u0027s low Absolute value of the most recent period\u0027s high ...",t:"Window Aggregate ATR "},"2053":{i:0.000696525852922307,u:"../Content/Programming/Common/Analytics/Ternary_Operations.htm",a:"Ternary Analytics Operations There are two ternary analytics operations iif and if that take three input sequences, cond, then and else, and produce a sequence of values that represent the result of an If-Then-Else condition. When the boolean value in sequence cond is true, an element from sequence ...",t:"Ternary C API Functions"},});