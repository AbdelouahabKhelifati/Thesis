define({"0":{i:0.0014159058938117,u:"../Content/eXtremeDB_Product_Family.htm",a:"The eXtremeDB® Product Family    Real-time and embedded software manages growing volumes of complex data, to support advanced application features. The need for performance and reliability, on shorter product development cycles, is driving more organizations to incorporate proven, commercial ...",t:"eXtremeDB Product Family"},"1":{i:0.00198825264844861,u:"../Content/eXtremeDB_Documentation_Map.htm",a:"To view this eXtremeDB online documentation simply expand and click on the topics in the Table of Contents (ToC) pane to the left, then navigate to related topics using the links provided. (For example, click on this link to view  New Features , then use the browser\u0027s back arrow to return to this ...",t:"eXtremeDB Documentation"},"2":{i:0.00183133515293881,u:"../Content/eXtremeDB_Supported_platforms.htm",a:"The following sections list the supported host, target and hardware platforms. Please see the  Technical Specifications  and  eXtremeDB Product Family  pages for further information regarding the eXtremeDB  runtime characteristics and features. Host platforms Following are the supported platforms ...",t:"eXtremeDB Supported Platforms"},"3":{i:0.000640515644493951,u:"../Content/eXtremeDB_Technical_Specs.htm",a:"In addition to the supported host, target and hardware platforms listed on the  Supported Platforms  page, the following sections describe some technical specifications and features of eXtremeDB and eXtremeSQL. Database Limits Following are the default maximum parameters for eXtremeDB databases on ...",t:"eXtremeDB Technical Specifications"},"4":{i:0.00179503893052721,u:"../Content/eXtremeDB_New_Features.htm",a:"(Release 8.1 - build 1800) Here is the list of the most important enhancements in the eXtremeDB 8.1 (Release 8.1 - build 1800): eXtremeDB Embedded Added low-overhead  tracing  capabilities to the core (and other database runtime components) Extended  REST API  to support network discovery, ...",t:"What\u0027s New in This Release"},"5":{i:0.000308452883407018,u:"../Content/Getting_Started_with_eXtremeDB.htm",a:"eXtremeDB is a database development tool implemented as a highly optimized set of C libraries providing high performance database functionality for your C or C++ application. Expertly tuned wrapper APIs allow native Java, C# and Python applications to embed the same eXtremeDB functionality. And, for ...",t:"Getting Started with eXtremeDB"},"6":{i:0.000200952930699078,u:"../Content/Getting_Started/Installation.htm",a:"The eXtremeDB package you purchased is most often delivered (downloaded) as a tar archive on Unix-Linux hosted systems or as an installation executable or zip file on Windows-hosted systems. The download notification contains the package specifications and archive filename, with instructions for ...",t:"Installation"},"7":{i:0.000461976718324472,u:"../Content/Getting_Started/Installation/Installation_Unix-Linux.htm",a:"After downloading, simply extract the contents of the tar archive file to a convenient directory with a tar command like the following:  \n    tar xzf extremedb_7.0_fe_linux_x86_obj_x64.tar.gz\n      This will extract the archive contents to the directory eXtremeDB. Now all of the software components ...",t:"Installing eXtremeDB on Unix/Linux"},"8":{i:0.00061400628537321,u:"../Content/Getting_Started/Installation/Installation_Windows.htm",a:"After downloading, simply extract the contents of the zip archive file to a convenient directory. The zip archive contains a single executable file with the same name as the zip archive except with file extension \".EXE\". Then do the following: 1. Start the WISE install wizard Double-click on this ...",t:"Installing eXtremeDB on Windows"},"9":{i:0.000226014479716651,u:"../Content/Getting_Started/Installation/Installation_ODBC_Win32.htm",a:"On a Windows x32 only the x32 ODBC driver can be installed. The next sections detail the installation steps for the x32 driver. (Note that target system needs to have the ODBC Driver Manager installed, which is part of the MDAC (Microsoft Data Access Components) available here: ...",t:"Installing the McObject ODBC Driver on Windows x32 systems"},"10":{i:0.000226014479716651,u:"../Content/Getting_Started/Installation/Installation_ODBC_Win64.htm",a:"On a Windows x64 system either the x64 or x32 ODBC driver can be installed, depending on whether the application using the driver will be x64 or x32. The next sections detail the installation steps for first x64 then x32 drivers. Step 1. Prerequisites To facilitate the installation process it is ...",t:"Installing the McObject ODBC Driver on Windows x64 systems"},"11":{i:0.000481513911229297,u:"../Content/Getting_Started/Installation/Installation_VxWorks.htm",a:"After downloading, simply extract the contents of the archive file to a convenient directory. For example, suppose that you purchasedeXtremeDB High Availability for VxWorks version 6.9 with the Diab tool chain for applications on ARM target architecture, and you wish to use the root directory ...",t:"Installing eXtremeDB on VxWorks"},"12":{i:0.000142984009761306,u:"../Content/Getting_Started/Installation/Installation_Integrity.htm",a:"After downloading, simply extract the contents of the archive file to a convenient directory. For example, suppose that you purchased eXtremeSQL for Integrity version 11 with the compiler version 201254 for ARM host architecture and for the target processor Texas Instrument OMAP 3530 evm. Simply ...",t:"Installing eXtremeDB on Integrity"},"13":{i:0.00088823701497965,u:"../Content/Getting_Started/Package_Contents.htm",a:"eXtremeDB Package Contents Please use the following links to view the eXtremeDB package contents which will vary slightly depending on your operating system platform:",t:"eXtremeDB Package Contents"},"14":{i:0.000152385063923738,u:"../Content/Getting_Started/Package_Contents/Upgrading.htm",a:"As explained in page  New Libraries with eXtremeDB 8.0 , eXtremeDB packages delivered with version 8.0 and successive releases have newly introduced libraries with respect to previous versions. For applications built with eXtremeDB versions prior to 8.0, the set of libraries to be linked to the ...",t:"Upgrading from eXtremeDB 7.1"},"15":{i:0.000217074669187347,u:"../Content/Getting_Started/Package_Contents/Libraries.htm",a:"The eXtremeDB packages delivered with version 8.0 and successive releases have newly introduced libraries with respect to previous versions. Please see page  Package Contents  for a complete description of these libraries and other package contents for your development environment. The sections ...",t:"New Libraries with eXtremeDB 8.0"},"16":{i:0.00739277274045164,u:"../Content/Getting_Started/Package_Contents/mcocomp.htm",a:"To express the content and organization of a database for C/C++ applications, the database designer uses the eXtremeDB Data Definition Language (DDL)  to create a database schema. The schema is a textual description of the data model. It is processed by the eXtremeDB schema compiler, which ensures ...",t:"The mcocomp Schema Compiler"},"17":{i:0.000489836778152852,u:"../Content/Getting_Started/Package_Contents/sql2mco.htm",a:"The sql2mcoutility is a simple command-line utility that converts SQL-89 DDL statements statements to the equivalent eXtremeDB DDL . The utility is invoked from the command line as follows:  \n    sql2mco \u003cinput-sql-file\u003e \u003coutput-mco-file\u003e\n  Formal Grammar The formal grammar recognized by sql2mco  is ...",t:"The sql2mco Utility"},"18":{i:0.000476405585941605,u:"../Content/Getting_Started/Package_Contents/Package_Unix-Linux.htm",a:"Upon completion of the install process, the following sub-directory structure and files are created in your installation root directory: Documentation The  html content you are reading is presented in your browser when double-clicking the file eXtremeDB.htm in the documentation directory. Please ...",t:"eXtremeDB Unix-Linux Package Contents"},"19":{i:0.000505579848191456,u:"../Content/Getting_Started/Package_Contents/Package_Unix-Linux_Target_bin.htm",a:"The /target/bin directory under your eXtremeDB installation root directory contains Java archives extremedb.jar and extremedb_jdbc.jar, a python subdirectory and a number of binary libraries described below. The Java archive files are required only for  Java applications  and  JDBC applications . ...",t:"eXtremeDB Unix-Linux Libraries - target/bin"},"20":{i:0.000151114743207225,u:"../Content/Getting_Started/Package_Contents/Package_Unix-Linux_Target_bin_EXT.htm",a:"The /target/bin directory under your eXtremeDB installation root directory contains, in addition to the  basic libraries , additional contents that depend on the specific eXtremeDB Extension Modules  purchased. For C and C++ applications using these additional features, one or more of the libraries ...",t:"eXtremeDB Extension Module Unix-Linux Libraries - target/bin"},"21":{i:0.000215982996613768,u:"../Content/Getting_Started/Package_Contents/Package_Unix-Linux_Target_bin_so.htm",a:"The /target/bin.so directory under your eXtremeDB installation root directory contains a number of Shared Object Libraries (.so binaries) that can be loaded into your C/C++, Java or Python applications at run time, as well as one that can be loaded on demand into xSQL. As explained  here , each ...",t:"eXtremeDB Unix-Linux Shared-Object Libraries  - target/bin.so"},"22":{i:0.000461150656968118,u:"../Content/Getting_Started/Package_Contents/Package_Windows.htm",a:"eXtremeDB Windows Package Contents Upon completion of the install process, the following sub-directory structure and files are created in your installation root directory:",t:"eXtremeDB Windows Package Contents"},"23":{i:0.000384356632063274,u:"../Content/Getting_Started/Package_Contents/Package_Win_Target_bin.htm",a:"eXtremeDB Windows  Libraries - target/bin The \\target\\bin directory under your eXtremeDB installation root directory contains Java archives extremedb.jar and extremedb_jdbc.jar, a python subdirectory and a number of binary libraries described below. The Java archive files are required only for  Java ...",t:"eXtremeDB Windows Libraries - target/bin"},"24":{i:0.00013391973654822,u:"../Content/Getting_Started/Package_Contents/Package_Win_Target_bin_EXT.htm",a:"eXtremeDB Extension Module  Windows  Libraries - target/bin As explained in the  eXtremeDB Windows  Libraries page, the \\target\\bin directory under your eXtremeDB installation root directory contains, in addition to the  basic libraries , additional contents that depend on the specific eXtremeDB  ...",t:"eXtremeDB Extension Module Windows Libraries - target/bin"},"25":{i:0.000194824892386458,u:"../Content/Getting_Started/Package_Contents/Package_Win_Target_bin_so.htm",a:"As explained in the  eXtremeDB Windows  Libraries page, the \\target\\bin.so directory under your eXtremeDB installation root directory contains a number of Dynamic Link Libraries (DLLs) that can be loaded into C/C++, Python, Java and .NET applications at run time. As mentioned in the  static ...",t:"eXtremeDB Windows Dynamic Link Libraries  - target/bin.so"},"26":{i:0.000150656368893928,u:"../Content/Getting_Started/Package_Contents/Package_Win_Target_bin_so_EXT.htm",a:"As explained in the  eXtremeDB Windows  Libraries page, the \\target\\bin.so directory under your eXtremeDB installation root directory contains, in addition to the  basic libraries , additional contents that depend on the specific eXtremeDB  Extension Modules  purchased. Java and NET applications, as ...",t:"eXtremeDB Extension Module Windows Dynamic Link Libraries  - target/bin.so"},"27":{i:0.000431921156033748,u:"../Content/Getting_Started/Package_Contents/Package_Integrity.htm",a:"Upon completion of the install process, the following sub-directory structure and files are created in your installation root directory: Documentation The  html content you are reading is presented in your browser when double-clicking the file eXtremeDB.htm in the documentation directory. Please ...",t:"eXtremeDB Integrity OS Package Contents"},"28":{i:0.000329839893020821,u:"../Content/Getting_Started/Package_Contents/Package_Integrity_Target_bin.htm",a:"The /target directory under your eXtremeDB Embedded installation root directory contains a number of binary libraries in subdirectories with names beginning with \"bin-\": One set is for the target processor, the other set in the directory with name beginning \"bin-sim\" is for the simulator in the host ...",t:"eXtremeDB Integrity OS Libraries - target/bin-\u003cprocessor\u003e"},"29":{i:0.000141658773357809,u:"../Content/Getting_Started/Package_Contents/Package_Integrity_Target_bin_EXT.htm",a:"The /target/bin directory under your eXtremeDB installation root directory contains, in addition to the   basic libraries , additional contents that depend on the specific eXtremeDB  Extension Modules  purchased. For C and C++ applications using these additional features, one or more of these ...",t:"eXtremeDB Extension Module Integrity OS Libraries - target/bin-\u003cprocessor\u003e"},"30":{i:0.000719674087768832,u:"../Content/Getting_Started/Package_Contents/Package_VxWorks.htm",a:"Upon completion of the install process, the following sub-directory structure and files are created in your installation root directory: Documentation The  html content you are reading is presented in your browser when double-clicking the file eXtremeDB.htm in the documentation directory. Please ...",t:"eXtremeDB VxWorks Package Contents"},"31":{i:0.000458685639979542,u:"../Content/Getting_Started/Package_Contents/Package_VxWorks_Target_bin.htm",a:"The /target directory under your eXtremeDB installation root directory contains a number of binary libraries in subdirectories with names beginning with \"bin-\": One set is for the target processor, the other set in the directory with name beginning \"bin-sim\" is for the simulator in the host ...",t:"eXtremeDB VxWorks Libraries - target/bin/\u003cPROCESSORcompiler\u003e"},"32":{i:0.000149481618267852,u:"../Content/Getting_Started/Package_Contents/Package_VxWorks_Target_bin_EXT.htm",a:"The /target/bin directory under your eXtremeDB installation root directory contains, in addition to the  basic libraries , additional contents that depend on the specific eXtremeDB  Extension Modules  purchased. For C and C++ applications using these additional features, one or more of the libraries ...",t:"eXtremeDB Extension Module VxWorks Libraries - target/bin/\u003cPROCESSORcompiler\u003e"},"33":{i:0.0159526202273151,u:"../Content/Getting_Started/Building_Running_SDK_Samples.htm",a:"The eXtremeDB SDK samples are grouped according to API and to the components of your package.  All of the necessary source code, tools and scripts are provided to make building and running these samples simple and easy. The build procedure will vary slightly depending on your development platform. ...",t:"Building and running SDK Samples"},"34":{i:0.0023339964970055,u:"../Content/Getting_Started/Samples_Startup/C_API_Samples.htm",a:"The eXtremeDB package you have installed contains dozens of C API samples demonstrating individual features. All of the necessary source code, tools and scripts are provided to make building and running these samples simple and easy. The build procedure will vary slightly depending on your ...",t:"C API Samples"},"35":{i:0.00147761653439378,u:"../Content/Getting_Started/Samples_Startup/Cpp_API_Samples.htm",a:"The eXtremeDB package you have installed contains several C++ API samples demonstrating individual features. In fact, the C++ API is a set of classes that that encapsulates the lower-level C functions which implement the eXtremeDB  runtime. The C++ samples are included within two groups of the  C ...",t:"C++ API Samples"},"36":{i:0.00190304935016872,u:"../Content/Getting_Started/Samples_Startup/Java_Samples.htm",a:"The eXtremeDB package you have installed contains several Java samples demonstrating individual features. All of the necessary source code, tools and scripts are provided to make building and running these samples simple and easy. The build procedure will vary slightly depending on your development ...",t:"Java Samples"},"37":{i:0.00187365057523666,u:"../Content/Getting_Started/Samples_Startup/Dot_Net_Samples.htm",a:"The C# SDK samples  are console applications that demonstrate specific eXtremeDB features or programming techniques. They can be built in batch mode or individually and can be run from a console window or with the Visual Studio debugger (recommended). Batch build The Windows package you installed is ...",t:".NET (C#) Samples"},"38":{i:0.00169083886012314,u:"../Content/Getting_Started/Samples_Startup/Python_Samples.htm",a:"The eXtremeDB package you have installed contains a number of Python samples demonstrating individual features. These samples are run within the python interpreter by launching the batch command (Windows) or shell (Unix-Linux) file in the individual samples directories. To start working with the ...",t:"Python Samples"},"39":{i:0.00147761653439378,u:"../Content/Getting_Started/Samples_Startup/SQL_Samples.htm",a:"SQL Samples There are several embedded eXtremeSQL samples in the C, C++, Java, C# and Python API sections, as well as xSQL samples. See Instructions  here  for building and running the SDK samples on your development platform. Please use the links below to view the samples of interest:",t:"SQL Samples"},"40":{i:0.000245627420563638,u:"../Content/Getting_Started/Samples_Startup/VxWorks_Build_Run_Samples.htm",a:"To build samples using the VxWorks Workbench, please perform the following steps: 1. Unpack the eXtremeDB package (see instructions  here ). 2. Start the WindRiver Workbench IDE 3. Create a new workspace: From the menu choose “File”, then the “Switch Workspace” and “Other” menu items. The IDE will ...",t:"Building and Running VxWorks Samples"},"41":{i:0.000245627420563638,u:"../Content/Getting_Started/Building_eXtremeDB_Libraries.htm",a:"Building eXtremeDB Libraries The procedure for building the eXtremeDB libraries varies depending on the host system. Please use the following links to view specific instructions for your host development environment:",t:"Building eXtremeDB Libraries"},"42":{i:0.000263407979770206,u:"../Content/Getting_Started/Building_Libraries/Building_eXtremeDB_Libraries_Unix-Linux.htm",a:"As explained in the  Building and running SDK Samples  page, makefiles are provided in the eXtremeDB root directory and all sample (project) directories. If it is necessary to rebuild the eXtremeDB libraries, the build system is a process of running the GNU make utility with a combination of cascade ...",t:"Building eXtremeDB Libraries on Unix-Linux"},"43":{i:0.000275453824334976,u:"../Content/Getting_Started/Building_Libraries/Building_eXtremeDB_Libraries_Windows.htm",a:"In addition, you’ll find a make.bat batch file installed in the top-level installation directory. With this file you can build eXtremeDB SDK components outside your IDE. To run this build script its necessary to specify the environment variables BUILD_TYPE to the version of Visual Studio for this ...",t:"Building eXtremeDB Libraries on Windows"},"44":{i:0.000275453824334976,u:"../Content/Getting_Started/Building_Libraries/Building_eXtremeDB_VxWorks_Libraries_Windows.htm",a:"Your eXtremeDB for VxWorks package includes pre-built binaries for the eXtremeDB  runtime installed in the target/bin directory. The directory structure reflects the target platform and the compiler used:  \n    target/bin/\u003cBSPNAME\u003e/\n    target/bin/\u003cBSPNAME_Debug\u003e/\n      For example:  \n    ...",t:"Building eXtremeDB Libraries for VxWorks on Windows"},"45":{i:0.000275453824334976,u:"../Content/Getting_Started/Building_Libraries/Building_eXtremeDB_Integrity_Libraries_Linux.htm",a:"INTERGITY OS (Multi IDE, Linux host) Your root installation directory contains the ready-to use default.gpj file for MULTI. Make sure that your MULTI environment is configured and load the file into the IDE. The default.gpj  includes all projects (samples, and the runtime) that are available to you ...",t:"Building eXtremeDB Integrity OS Libraries on Linux"},"46":{i:0.000204163885874985,u:"../Content/Getting_Started/Getting_Started_Embedded.htm",a:"As explained in the  Product Family  description, eXtremeDB originated as a highly optimized set of C libraries providing high performance In-Memory Database System (IMDS) functionality for C and C++ applications. Then eXtremeSQL, Java, C# and Python APIs were added to provide the same high ...",t:"Getting Started with eXtremeDB Embedded"},"47":{i:0.000181038643042579,u:"../Content/Getting_Started/Quick_Start/QS_eXtremeDB_APIs.htm",a:"As explained  in  Getting Started  page, to database-enable an application, it is simply a matter of using the language specific APIs to open (create) the database, then connect to the database and perform typical CRUD (Create, Read, Update, and Delete) operations. Then, before application ...",t:"Quick Start with eXtremeDB APIs"},"48":{i:0.000233466859537376,u:"../Content/Getting_Started/Quick_Start/QS_C.htm",a:"Use the links below to walk through the tutorial examples. Each step demonstrates a number of simple eXtremeDB C APIs. We recommend doing these exercises to quickly gain familiarity with the essential implementation details. After gaining a basic understanding or the eXtremeDB basics, developers are ...",t:"Quick Start with the eXtremeDB C API"},"49":{i:0.000169979534124073,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C1.htm",a:"Before you begin using eXtremeDB, it is important to understand some  basic concepts . For database applications using the C API,\tdevelopment consists of three stages on the host environment: Data layout definition (creating what is referred to as a database schema) and compilation (which produces ...",t:"Step 1: Database Definition"},"50":{i:0.000218328431582549,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C2.htm",a:"It is useful to examine eXtremeDB runtime information as demonstrated in SDK sample  samples/native/core/01_rtconfig_inmem . Please  build and run  this sample and note the information displayed. In the source file main.c notice that a number of “sample helper” functions are called. In addition to ...",t:"Step 2: Runtime Information"},"51":{i:0.000180437130448052,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C3.htm",a:"Before performing data storage and retrieval operations, we must open the database, as demonstrated in SDK sample  samples/native/core/02_open_conv . eXtremeDB uses the notion of  logical devices  to describe storage locations.  For an all-in-memory database, there can be a single device to describe ...",t:"Step 3: Opening Databases"},"52":{i:0.000160648928328359,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C3_Persistent.htm",a:"As explained for  In-Memory Databases , before performing data storage and retrieval operations, we must open and connect to the database. To open the database C applications call function  mco_db_open_dev() with a number of parameters including the database dictionary, a  database parameters  ...",t:"Opening Persistent Databases with the C API"},"53":{i:0.000160929695092378,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C4.htm",a:"The next step after opening a database is to create a connection to it as demonstrated in SDK samples samples/native/core/03_connect_*. Sample  03_connect_single_task demonstrates how, once the database is successfully opened, the function  mco_db_connect() is called to create the database ...",t:"Step 4: Connecting Databases"},"54":{i:0.000141477417567145,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C5.htm",a:"Once the database is opened and a connection established, the application can begin performing read and write storage operations as demonstrated in SDK sample  samples/native/core/04_operations. To perform any storage operation, the application must first start a database transaction by calling ...",t:"Step 5: Data Access Operations"},"55":{i:0.000141477417567145,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C6.htm",a:"As explained in  the  fundamental concepts , indexes provide for fast lookup and/or sorted retrieval of database objects based on some search criteria, and cursors provide the means for iterating through the result set of objects. The  eXtremeDB User\u0027s Guide  describes indexes and cursors in detail ...",t:"Step 6: Indexes and cursors"},"56":{i:0.000141477417567145,u:"../Content/Getting_Started/Quick_Start/QS_C/QS_C7.htm",a:"The  Return Codes pages  explain the three categories of runtime return codes: status codes, non-fatal error codes and fatal error codes. The SDK sample  samples/native/core/06_errorhandling_statuscode demonstrates a status return code and how applications check the status of various runtime ...",t:"Step 7: Error Handling"},"57":{i:0.000204973359947367,u:"../Content/Getting_Started/Quick_Start/QS_Cpp.htm",a:"Use the links below to walk through the tutorial examples. Each step demonstrates a number of simple eXtremeDB C/C++ APIs. We recommend doing these exercises to quickly gain familiarity with the essential implementation details. After gaining a basic understanding or the eXtremeDB basics, developers ...",t:"Quick Start with the eXtremeDB C++ API"},"58":{i:0.000201190688232966,u:"../Content/Getting_Started/Quick_Start/QS_Cpp/QS_Cpp1.htm",a:"Before you begin using eXtremeDB, it is important to understand some  basic concepts . For database applications using the C++ API,\tas with the  C API , development consists of three stages on the host environment: Data layout definition (creating what is referred to as a database schema) and ...",t:"Step 1: Database Definition"},"59":{i:0.000183079640243932,u:"../Content/Getting_Started/Quick_Start/QS_Cpp/QS_Cpp2.htm",a:"As explained in the  previous step  the eXtremeDB C++ API consists of a set of generated classes that provide a thin wrapper around the generated C API functions. All of the implementation details described for the  C API  apply also to C++ applications. For example getting eXtremeDB runtime ...",t:"Step 2: C++ Demo"},"60":{i:0.000156478250306827,u:"../Content/Getting_Started/Quick_Start/QS_Cpp/QS_Cpp3.htm",a:"Sometimes it is possible and beneficial from a performance standpoint to access object fields in a more standard С++ fashion, using setters and getters as opposed to the generated wrapper methods which call the underlying C API  classname_fieldname_put() and  classname_fieldname_get() functions. ...",t:"Step 3: C++ Smart Pointers"},"61":{i:0.000288034249609363,u:"../Content/Getting_Started/Quick_Start/QS_Java.htm",a:"Use the links below to walk through the tutorial examples. Each step demonstrates a number of simple eXtremeDB Java APIs. We recommend doing these exercises to quickly gain familiarity with the essential implementation details. After gaining a basic understanding or the eXtremeDB basics, developers ...",t:"Quick Start with the eXtremeDB Java API"},"62":{i:0.000226939100189077,u:"../Content/Getting_Started/Quick_Start/QS_Java/QS_Java1.htm",a:"The first step in using the eXtremeDB Java Native Interface (JNI) is to define the classes that you’ll want to manage in the eXtremeDB database. The JNI uses the Java class syntax, with annotations.  At run-time, Java reflection is used to discover the classes with their annotations and build up an ...",t:"Step 1: Database Definition"},"63":{i:0.000319558181510434,u:"../Content/Getting_Started/Quick_Start/QS_Java/QS_Java2.htm",a:"SDK sample  samples/java/open/Open  illustrates how to open a simple In-Memory database. The sample also demonstrates how to display runtime information by calling the Database method getRunTimeInfo(). Please  build and run  the sample application and examine the source code. Note that the integer ...",t:"Step 2: Opening Databases"},"64":{i:0.000252979536957416,u:"../Content/Getting_Started/Quick_Start/QS_Java/QS_Java2_Persistent.htm",a:"As explained for  In-Memory Databases , before performing data storage and retrieval operations, we must open and connect to the database. To open the database Java applications call Database method open() with a number of possible parameters including  a Database.Parameters object and an array of ...",t:"Opening Persistent Databases with the Java API"},"65":{i:0.000162437675984934,u:"../Content/Getting_Started/Quick_Start/QS_Java/QS_Java3.htm",a:"SDK sample  samples/java/operations/Operations  illustrates how to use the Connection and Cursor classes to perform basic database CRUD operations. Please  build and run  the sample application and examine the source code. Note that the Connection con is instantiated after the database is opened:  \n ...",t:"Step 3: Data Access Operations"},"66":{i:0.000261627756928548,u:"../Content/Getting_Started/Quick_Start/QS_Csharp.htm",a:"Use the links below to walk through the tutorial examples. Each step demonstrates a number of simple eXtremeDB C# APIs. We recommend doing these exercises to quickly gain familiarity with the essential implementation details. After gaining a basic understanding of eXtremeDB basics, developers are ...",t:"Quick Start with the eXtremeDB C# API"},"67":{i:0.000223041219328567,u:"../Content/Getting_Started/Quick_Start/QS_Csharp/QS_Csharp1.htm",a:"The first step in using the eXtremeDB C# API is to define the classes that you’ll want to manage in the eXtremeDB database. The C# API uses the C# class syntax, with attributes.  At run-time, C# reflection is used to discover the classes with their attributes and build up an eXtremeDB database ...",t:"Step 1: Database Definition"},});