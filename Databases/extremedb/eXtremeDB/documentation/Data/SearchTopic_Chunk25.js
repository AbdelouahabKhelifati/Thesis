define({"1727":{i:0.000664608331597579,u:"../Content/Programming/Python/Classes/Cursor/execute_many.htm",a:"Execute a SQL query against the database applying a set of parameters. For an overview see page  Python Cursor Class Prototype  \n    Cursor.execute_many(query [,args])\n  Arguments Description This method executes a SQL query against the database. This is a DB API compliant call. Parameters are ...",t:"Cursor.execute_many"},"1728":{i:0.000634913805920137,u:"../Content/Programming/Python/Classes/Cursor/fetchone.htm",a:"Return the next row of result set. For an overview see page  Python Cursor Class Prototype  \n    Cursor.fetchone()\n  Arguments Description This method returns the next row of a result set (dataset) as a tuple, or None if no more results available. This is a DB API compliant call.  Returns Example    ...",t:"Cursor.fetchone"},"1729":{i:0.000634913805920137,u:"../Content/Programming/Python/Classes/Cursor/fetchmany.htm",a:"Fetch the next set of rows from a result set. For an overview see page  Python Cursor Class Prototype  \n    Cursor.fetchmany([size=cursor.arraysize])\n  Arguments Description This method returns the next set of rows from a result set (dataset) as a list of tuples or None. This is a DB API compliant ...",t:"Cursor.fetchmany"},"1730":{i:0.000634913805920137,u:"../Content/Programming/Python/Classes/Cursor/fetchall.htm",a:"Fetch all (remaining) rows of a query result. For an overview see page  Python Cursor Class Prototype  \n    Cursor.fetchall()\n  Arguments Description This method returns all (remaining) rows of a query result, returning a list. This is a DB API compliant call. An empty list is returned when no rows ...",t:"Cursor.fetchall"},"1731":{i:0.000455424052937501,u:"../Content/Programming/Python/Classes/SqlEngine.htm",a:"The Python SqlEngine Class The SqlEngine class represents a SQL engine that performs SQL queries on an eXtremeDB database, either local or remote (or distributed). It provides the following methods:",t:"The Python SqlEngine Class"},"1732":{i:0.000508745320333253,u:"../Content/Programming/Python/Classes/SqlEngine/registerFunction.htm",a:"Register a function to be accessible to this SqlEngine. For an overview see page  Python SqlEngine Class Prototype  \n    SqlEngine.registerFunction(return_type, function_name, function, n_arguments)\n  Arguments Description When a function is registered using this method, it will be accessible to ...",t:"SqlEngine.registerFunction"},"1733":{i:0.00013094690556674,u:"../Content/Programming/Python/Classes/SqlServer.htm",a:"The Python SqlServer Class The SqlServer class represents a networked SqlServer that performs SQL queries on an eXtremeDB database. It provides the following methods:",t:"The Python SqlServer Class"},"1734":{i:0.000268487647890086,u:"../Content/Programming/Python/Classes/SequenceIterator.htm",a:"The SequenceIterator class is used  for managing database fields of type  sequence .  For an overview see page  Python Classes As explained in page  Using Sequences in Python , a C++ Sequence instance is essentially an iterator over the vector of  sequence  values.  A sequence field is essentially a ...",t:"The Python SequenceIterator Class"},"1735":{i:0.00059484826725231,u:"../Content/Programming/Python/Classes/IoT/IoTCommunicator.htm",a:"The Python IoTCommunicator Class The IoTCommunicator object takes care of all interactions with the underlying network layers (sockets) between the IoT server and devices.",t:"The Python IoTCommunicator Class"},"1736":{i:0.000329614449538615,u:"../Content/Programming/Python/Classes/IoT/IoTConnection.htm",a:"The Python IoTConnection Class The IoTConnection class is a wrapper for mco_iot_connection_h and is not intended to be created directly in programs. It is passed as an argument to event handlers for the purpose of getting extended connection information.",t:"The Python IoTConnection Class"},"1737":{i:0.000201961772349947,u:"../Content/Programming/Python/Classes/Perfmon.htm",a:"The eXtremeDB Performance Monitor is implemented in the class Perfmon which is defined as follows:  \n    class Perfmon(object):\n        TotalPages  = 0\n        FreePages   = 1\n        UsedPages   = 2\n        FileSize    = 3\n        LogFileSize = 4\n        UsedFileSize = 5\n        CacheHitCount = 6\n  ...",t:"Python class Perfmon"},"1738":{i:0.000385902540146133,u:"../Content/Programming/SQL_APIs.htm",a:"The eXtremeSQL interface to eXtremeDB databases can be embedded in C, C++, Java, C# (for Windows systems only) or Python applications, either by executing SQL statements directly or indirectly through the eXtremeSQL ODBC or JDBC drivers;  or xSQL can be used to execute SQL statements and scripts ...",t:"eXtremeSQL APIs"},"1739":{i:0.000158079282323168,u:"../Content/Programming/SQL_xSQL.htm",a:"The eXtremeSQL xSQL Client-Server API As explained in the   Quick Start Tutorial , xSQL can be used interactively or in batch mode to execute SQL statements and/or script files. Please use the links below for explanations of the xSQL commands and samples demonstrating xSQL features:",t:"The eXtremeSQL xSQL Client-Server API"},"1740":{i:0.000595913085791479,u:"../Content/Programming/xSQL/SDK_Samples/xSQL_SDK_Samples.htm",a:"xSQL SDK Samples There are three subdirectories under the samples/xsql directory that contain scripts demonstrating various operations with xSQL. Please use the links below to view the samples of interest:",t:"xSQL SDK Samples"},"1741":{i:0.000312870725437355,u:"../Content/Programming/xSQL/SDK_Samples/xSQL_Configs.htm",a:"As explained in the  xSQL Startup Options page, xSQL can be configured to run in a variety of modes using an external configuration file loaded at startup with a command like the following:  \n    xsql -c xsql.cfg\n      The xSQL SDK samples demonstrate a variety of different possibilities. Please use ...",t:"xSQL Configuration Samples"},"1742":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/IM.htm",a:"This sample demonstrates the simplest possible configuration involving an in-memory (IM) \ndatabase with a static dictionary defined in the xsql.cfg file. The config file looks like the following:  \n    #\n    #  Simple In-Memory configuration\n    #\n    database_name : imdb,\n    database_size    :  ...",t:"xSQL Sample IM"},"1743":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Disk.htm",a:"This sample demonstrates the simplest possible configuration involving a disk\ndatabase with a static dictionary defined in the xsql.cfg file\n The config file looks like the following:  \n    #\n    #  Simple Disk configuration\n    #\n    database_name : diskdb,\n    database_size    :  20m,\n    ...",t:"xSQL Sample Disk"},"1744":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Raid.htm",a:"This sample demonstrates a configuration involving  a persistent database server using a RAID-0 disk system for storage  with a static dictionary defined in the xsql.cfg file. The database is stored in files, which may be located on different physical devices. The config file looks like the ...",t:"xSQL Sample Raid"},"1745":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Multifile.htm",a:"This sample demonstrates a persistent database server using several disk files with a static dictionary defined in the xsql.cfg file\n. The server will insert data in the first file until its limit is reached, then to a second file.  The config file looks like the following:  \n    #\n    #  Simple ...",t:"xSQL Sample Multifile"},"1746":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/HA.htm",a:"This sample demonstrates a High Availability configuration. It includes master and replica nodes, both using an in-memory database. A static schema is declared in the config files. The config files looks like the following: xsql_master.cfg:  \n    #\n    #  Simple In-Memory configuration\n    #\n    ...",t:"xSQL Sample HA"},"1747":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Cluster.htm",a:"This sample demonstrates a simple cluster configuration with 3 nodes using in-memory databases. The static schema is defined in the config files. The config files look like the following: node1.cfg  \n    #\n    #  Simple In-Memory configuration\n    #\n    database_name : imdb,\n    database_size    :  ...",t:"xSQL Sample Cluster"},"1748":{i:0.000224183398676091,u:"../Content/Programming/xSQL/SDK_Samples/Configs/TL.htm",a:"This sample demonstrates an in-memory database with eXtremeDB Transaction Logging (TL) enabled. The log is written to a file; it is possible to make snapshots of the current database state.\n The config file looks like the following:  \n    #\n    #  Simple In-Memory configuration\n    #\n    ...",t:"xSQL Sample TL"},"1749":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Perfmon.htm",a:"This sample demonstrates a simple persistent database with the performance monitor enabled. The config file looks like the following:  \n    #\n    #  Simple In-Memory configuration\n    #\n    database_name : diskdb,\n    database_size    :  20m,\n    cache_size : 10m,\n     \n    database_filename: ...",t:"xSQL Sample Perfmon"},"1750":{i:0.000148226842221575,u:"../Content/Programming/xSQL/SDK_Samples/Configs/Shards.htm",a:"This sample demonstrates a simple distributed in-memory database working with 2 shards; each shard holds only part of the database. The config files look like the following: shard1.cfg  \n    #\n    #  Simple In-Memory configuration\n    #\n    database_name : imdb,\n    database_size    :  20m,\n     \n   ...",t:"xSQL Sample Shards"},"1751":{i:0.000382743685376237,u:"../Content/Programming/xSQL/SDK_Samples/xSQL_Data_Loaders.htm",a:"xSQL Data Loader Samples As explained in the samples/xsql/data_loaders/README.txt file, the SQL there are two subdirectories CME ann NYSE that contain scripts demonstrate loading historical trade data from these two different sources. ",t:"xSQL Data Loader Samples"},"1752":{i:0.000284299864270751,u:"../Content/Programming/xSQL/SDK_Samples/Data_Loaders/CME.htm",a:"This sample demonstrates a data loader implemented with a user-defined function (UDF). The target database schema defines two classes, TradesSeq and TOBSeq which contain  sequence fields. The CSV format input files contain trades and trade orders data in CME format. (The original data came from CME ...",t:"xSQL Data Loaders Sample CME"},"1753":{i:0.000284299864270751,u:"../Content/Programming/xSQL/SDK_Samples/Data_Loaders/NYSE.htm",a:"This sample demonstrates NYSE data loaders implemented using different mechanisms. The NYSE trades and quotes data contained in the indicated subdirectories is from  http://www.nyxdata.com/data-products/daily-taq  (where data formats and full sample files are explained). The for data in following ...",t:"xSQL Data Loaders Sample NYSE"},"1754":{i:0.000491683870408412,u:"../Content/Programming/xSQL/SDK_Samples/xSQL_Scripts.htm",a:"As explained in the samples/xsql/scripts/README.txt file, the SQL sample files *.sql in this directory are designed to demonstrate eXtremeSQL engine capabilities. They can be run by starting xSQL with the following command from directory eXtremeDB/samples/xsql/scripts:  \n    ..\\..\\..\\target\\bin\\xsql ...",t:"xSQL Scripts"},"1755":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/alter.htm",a:"xSQL Sample Alter This sample demonstrates the alter table statement. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f alter.sql\n     ",t:"xSQL Sample Alter"},"1756":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/array.htm",a:"xSQL Sample Array This sample demonstrates inserting values into an array field (column) using two different methods: with “{}”and “[]”syntax. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f array.sql\n     ",t:"xSQL Sample Array"},"1757":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/as.htm",a:"xSQL Sample As This sample demonstrates the use of the as qualifier to convert the result of a query column. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f as.sql\n     ",t:"xSQL Sample As"},"1758":{i:0.000242824038573934,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/asof_join.htm",a:"xSQL Sample Asof join This sample demonstrates the use of the keyword asof to perform a variety of \"asof\" joins. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f asof_join.sql\n     ",t:"xSQL Sample Asof join"},"1759":{i:0.0002514846349787,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/between.htm",a:"xSQL Sample Between This sample demonstrates the use of the between operator. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f between.sql\n     ",t:"xSQL Sample Between"},"1760":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/bulk.htm",a:"This sample demonstrates the use of the array syntax “[]” to insert multiple values into scalar fields (columns) in a single insert operation. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f bulk.sql\n     ",t:"xSQL Sample Bulk"},"1761":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/compound.htm",a:"This sample demonstrates the use of a compound index. Note also the use of aliases a1 and a2 to form a self-join and use of the explain operator to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b ...",t:"xSQL Sample Compound"},"1762":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/compound_nullable.htm",a:"This sample demonstrates the use of a compound index and a null (nullable) field (column). Note also the use of aliases a1 and a2 to form a self-join and use of the explain operator to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command: ...",t:"xSQL Sample Compound_nullable"},"1763":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/create_index.htm",a:"This sample demonstrates the create index statement. Note the use of the trace command to display performance statistics for the queries. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f create_index.sql\n     ",t:"xSQL Sample Create_index"},"1764":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/decimal.htm",a:"xSQL Sample Decimal This sample demonstrates the use of the decimal field (column) type. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f decimal.sql\n     ",t:"xSQL Sample Decimal"},"1765":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/delete.htm",a:"xSQL Sample Delete This sample demonstrates the use of the delete from statement. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f delete.sql\n     ",t:"xSQL Sample Delete"},"1766":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/disgroup.htm",a:"This sample demonstrates the use of the distinct qualifier with an order by clause. Note the use of the echo command to display each SQL statement as it is executed and explain to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ...",t:"xSQL Sample Disgroup"},"1767":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/distinct.htm",a:"xSQL Sample Distinct This sample demonstrates the use of the distinct qualifier.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f distinct.sql\n     ",t:"xSQL Sample Distinct"},"1768":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/distinctsum.htm",a:"This sample demonstrates the use of the distinct qualifier with the sum() function. Note the use of the explain command to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f ...",t:"xSQL Sample Distinctsum"},"1769":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/drop.htm",a:"xSQL Sample Drop This sample demonstrates the use of the drop index statement. Note the use of the explain command to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f drop.sql\n     ",t:"xSQL Sample Drop"},"1770":{i:0.0002514846349787,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/exists.htm",a:"xSQL Sample Exists This sample demonstrates the use of the exists operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f exists.sql\n     ",t:"xSQL Sample Exists"},"1771":{i:0.000234117072878464,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/full_join.htm",a:"xSQL Sample Full Outer join This sample demonstrates the use of the keywords full outer join to perform a variety of \"full outer\" joins. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -f full_join.sql\n     ",t:"xSQL Sample  Full Outer join"},"1772":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/fulltext.htm",a:"xSQL Sample Fulltext This sample demonstrates the use of the contains operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f fulltext.sql\n     ",t:"xSQL Sample Fulltext"},"1773":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/functions.htm",a:"This sample demonstrates the use of several built-in functions including: sum(), substr(), length(), upper(), lower(), format() and count(). Note the use of the trace command to display performance statistics for the queries. This sample can be run from directory samples\\xsql\\scripts with the ...",t:"xSQL Sample Functions"},"1774":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/group_by.htm",a:"xSQL Sample Group_by This sample demonstrates the use of the group by operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f group_by.sql\n     ",t:"xSQL Sample Group_by"},"1775":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/group_by_having.htm",a:"xSQL Sample Group_by_having This sample demonstrates the use of the group by operator with a having clause.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f group_by_having.sql\n     ",t:"xSQL Sample Group_by_having"},"1776":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/group_by_substr.htm",a:"xSQL Sample Group_by_substr This sample demonstrates the use of the group by operator and the substr() function.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f group_by_substr.sql\n     ",t:"xSQL Sample Group_by_substr"},"1777":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/group_order.htm",a:"xSQL Sample Group_order This sample demonstrates the use of the group by operator and the order by operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f group_order.sql\n     ",t:"xSQL Sample Group_order"},"1778":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/hashjoin.htm",a:"xSQL Sample Hashjoin This sample demonstrates the use of the hash join operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f hashjoin.sql\n     ",t:"xSQL Sample Hashjoin"},"1779":{i:0.0002514846349787,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/in.htm",a:"xSQL Sample In This sample demonstrates the use of the in operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f in.sql\n     ",t:"xSQL Sample In"},"1780":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/indexjoin.htm",a:"This sample demonstrates the use of an index to optimize a lookup operation. Note how the explain command displays different execution plans depending on the order of conjunctions in the where clause. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ...",t:"xSQL Sample Indexjoin"},"1781":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/insert.htm",a:"xSQL Sample Insert This sample demonstrates forms of the insert operation. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f insert.sql\n     ",t:"xSQL Sample Insert"},"1782":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/join.htm",a:"xSQL Sample Join This sample demonstrates a join operation joining two tables by date field (column) values. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f join.sql\n     ",t:"xSQL Sample Join"},"1783":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/join_compound.htm",a:"This sample demonstrates a join operation joining two tables by date field (column) values using a compound index. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f join_compound.sql\n     ",t:"xSQL Sample Join_compound"},"1784":{i:0.0002514846349787,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/like.htm",a:"xSQL Sample Like This sample demonstrates the use of the like operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f like.sql\n     ",t:"xSQL Sample Like"},"1785":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/nullable.htm",a:"This sample demonstrates the use of the null declaration to define a field (column) as nullable. Note the use of explain to display the execution plan. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f ...",t:"xSQL Sample Nullable"},"1786":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/numeric.htm",a:"xSQL Sample Numeric This sample demonstrates the use of the numeric field (column) type. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f numeric.sql\n     ",t:"xSQL Sample Numeric"},"1787":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/order_by.htm",a:"xSQL Sample Order_by This sample demonstrates the use of the order by operator.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f order_by.sql\n     ",t:"xSQL Sample Order_by"},"1788":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/round.htm",a:"xSQL Sample Round This sample demonstrates the use of the round function.  This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f round.sql\n     ",t:"xSQL Sample Round"},"1789":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/s_p.htm",a:"xSQL Sample S_p This sample demonstrates various union and join operations. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f s_p.sql\n     ",t:"xSQL Sample S_p"},"1790":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/s_p_j_sp.htm",a:"xSQL Sample S_p_j_sp This sample demonstrates various exists, any and in operations with relatively complex queries. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f s_p_j_sp.sql\n     ",t:"xSQL Sample S_p_j_sp"},"1791":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/search.htm",a:"This sample demonstrates a variety of lookup operations with different orders of comparison operators and order by clauses. Note the difference in the execution plans displayed by the explain command and the performance statistics displayed using the trace command. This sample can be run from ...",t:"xSQL Sample Search"},"1792":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/select_s.htm",a:"xSQL Sample Select_s This sample demonstrates a variety of lookup operations on table S with relatively complex queries. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f select_s.sql\n     ",t:"xSQL Sample Select_s"},"1793":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/select_sp.htm",a:"xSQL Sample Select_sp This sample demonstrates a lookup operation on table SP with the “\u003e= AND \u003c” operators. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f select_sp.sql\n     ",t:"xSQL Sample Select_sp"},"1794":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/sp.htm",a:"xSQL Sample Sp This sample demonstrates a variety of lookup operations on table SP with relatively complex queries. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f sp.sql\n     ",t:"xSQL Sample Sp"},"1795":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/stringagg.htm",a:"This sample demonstrates the use of the string_agg() function. Note the difference in the execution plans displayed by the explain command. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f stringagg.sql\n     ",t:"xSQL Sample Stringagg"},"1796":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/system.htm",a:"xSQL Sample System This sample demonstrates the contents of system tables Metatable and Statistic. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f system.sql\n     ",t:"xSQL Sample System"},"1797":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/trigram.htm",a:"xSQL Sample Trigram This sample demonstrates the use of a  trigram index. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f trigram.sql\n     ",t:"xSQL Sample Trigram"},"1798":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/union.htm",a:"xSQL Sample Union This sample demonstrates some queries with the union operator. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f union.sql\n     ",t:"xSQL Sample Union"},"1799":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/unionall.htm",a:"xSQL Sample Unionall This sample demonstrates some queries with the union all operator. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f unionall.sql\n     ",t:"xSQL Sample Unionall"},"1800":{i:0.00013033961753581,u:"../Content/Programming/xSQL/SDK_Samples/Scripts/upsert.htm",a:"This sample demonstrates the insert or update operation to insert “horizontal” data into a sequence data type, which stores the data “vertically”. This sample can be run from directory samples\\xsql\\scripts with the following command:  \n    ..\\..\\..\\target\\bin\\xsql.exe -b -c xsql.cfg -f upsert.sql\n   ...",t:"xSQL Sample Upsert"},});