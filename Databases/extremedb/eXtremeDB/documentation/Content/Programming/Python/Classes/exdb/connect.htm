<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Python API|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>exdb.connect</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>exdb.connect</h1>
            <p>Create a connection to one or more databases through an <i>e</i>X<i>treme</i>SQL engine.</p>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    Connection exdb.connect(dbname, port, nodes, nReplicas, maxConnectAttempts, 
            useConnectionPool=useConnectionPool,
            txBufSize=txBufSize, localDomain=local, 
            connectTimeout=2000L, readTimeout=1200*1000L,
            sql_login=sql_login, sql_password=sql_password, 
            ssl_params=ssl_params,
            async=async, nworkers=nWorkers)
            &#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/IndentedFunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">dbname</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The database name or host IP: when <code>port</code> is specified, connect to a remote database; otherwise connect  to the local  database (conventional or shared memory) by <code>dbname</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">port</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The port to connect on; when specified connect to a remote database using the host (extracted from <code>dbname</code>) and specified <code>port</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">nodes</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The nodes list; when specified connect to distributed databases using the host and port values specified in <code>nodes</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">nReplicas</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The number of HA replicas; this number should be a divider of the number of <code>nodes</code> meaning that the remainder of <code>nNodes / nReplicas</code> is <code>0</code>. For example, the values of <code>nNodes</code> and <code>nReplicas</code> could be (4 and 2) or (12 and
3) but not (6 and 4) because 6 % 4 = 2</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">maxConnectAttempts</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The maximum number of attempts to connect to distributed nodes or HA&#160;replicas</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">useConnectionPool</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">If true, then create a connection pool to enable parallel query execution for sequences</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">txBufSize</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Specifies the size of transmit buffer used to serialize requests to be sent to the server (default is 64k)</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">localDomain</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Indicates that Unix Domain Socket instead of networked TCP socket is used for RSQL communication <i>which is possible only when server and client are on the same host</i></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">connectTimeout</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The timeout for each connect attempt in milliseconds; so the total connection time can be up to <code>connectTimeout * maxConnectionAttempts</code> milliseconds</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">readTimeout</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The timeout for read operations in milliseconds</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">sql_login</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">  Login username when authentication is required</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">sql_password</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>  Login password when authentication is required</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">ssl_params</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A pointer to a <code><a href="../../../C/Structures/SSL_Parameters.htm">mco_ssl_params_t</a></code> structure containing SSL connection settings</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">async</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">When <code>True</code> create  an <i><a href="../AsyncDistributedConnection.htm"><i>AsyncDistributedConnection</i></a></i> using <code>nworkers</code> processes to perform multiple queries on the distributed database <a href="../../../../Fundamental_Concepts/Horizontal_Database_Partitioning.htm">shards</a> specified in <code>nodes</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">nworkers</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">When <code>async=True</code>, create <code>nworkers</code> processes to perform multiple queries on the distributed database <a href="../../../../Fundamental_Concepts/Horizontal_Database_Partitioning.htm">shards</a> specified in <code>nodes</code></td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <p>This method creates a connection to an <i>e</i>X<i>treme</i>SQL engine. The connection will be of one of four SQL engine types:</p>
            <ul>
                <li value="1">When arguments <code>dbname</code> is specified <i>and </i><code style="font-style: italic;">port</code><i> is null</i>, a single  <i><a href="../Connection.htm">Connection</a></i><a name="kanchor806"></a> to a local database is returned (the database can be in conventional or shared memory depending on the runtime loaded), </li>
                <li value="2">When argument <code>port</code> is specified the host name is extracted from argument <code>dbname</code>, and a <i><a href="../RemoteConnection.htm">RemoteConnection</a></i> to a single database is returned,</li>
                <li value="3">When argument <code>nodes</code> is specified a <i><a href="../DistributedConnection.htm">DistributedConnection</a></i> is returned using the <code>nodes</code> and <code>maxConnectAttempts</code> arguments to create an <i>e</i>X<i>treme</i>DB<i> High Availability</i> operating on <i>master</i> and <i>replica</i> databases or an <i style="font-weight: normal;">e</i>X<i style="font-weight: normal;">treme</i>DB <i style="font-weight: normal;">Cluster</i> network of nodes operating on multiple databases or database <a href="../../../../Fundamental_Concepts/Horizontal_Database_Partitioning.htm">shards</a>,</li>
                <li value="4">If argument <code>async=True</code> is specified, then an <i><a href="../../../C++/Classes/AsyncDistributedSqlEngine.htm"><i><a href="../AsyncDistributedConnection.htm"><i>AsyncDistributedConnection</i></a></i></a></i>  is returned with <code>nworkers</code> processes created for parallel asynchronous execution of multiple queries.</li>
            </ul>
            <h3>Returns</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/IndentedFunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">Connection</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>The connection to the SQL engine of the type determined by the arguments as explained above</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Examples</h3>
            <p>The following code snippet demonstrates creating connections of different types:</p>
            <div class="code-block"><pre>    &#160;
    &#160;
    ''' Connect to a local in-memory database in conventional memory (with Connection)
    &#160;
    '''
    is_shm = False
    is_debug = True
    is_disk = False
    tmgr='mursiw'
    exdb.init_runtime(is_disk, tmgr, is_shm, is_debug)
    conn = exdb.connect(dbname='imdb')
    &#160;
    &#160;
    ''' Connect to a local in-memory database in shared memory (with Connection)
    &#160;
    '''
    is_shm = True
    is_debug = True
    is_disk = False
    tmgr='mursiw'
    exdb.init_runtime(is_disk, tmgr, is_shm, is_debug)
    conn = exdb.connect(dbname='shmdb')
    &#160;
    &#160;
    ''' Connect to a remote database (with RemoteConnection)
    &#160;
    '''
    is_shm = False
    is_debug = True
    is_disk = False
    tmgr='mursiw'
    exdb.init_runtime(is_disk, tmgr, is_shm, is_debug)
    conn = exdb.connect('localhost', 5001)
    &#160;
    &#160;
    ''' Connect to two remote databases (with DistributedConnection)
    &#160;
    '''
    is_shm = False
    is_debug = True
    is_disk = False
    tmgr='mursiw'
    nodes = ("localhost:5001", "localhost:5002")
    exdb.init_runtime(is_disk, tmgr, is_shm, is_debug)
    conn = exdb.connect(nodes)
    &#160;
    &#160;
    ''' Connect to three remote databases (with AsyncDistributedConnection)
    &#160;
    '''
    is_shm = False
    is_debug = True
    is_disk = False
    tmgr='mursiw'
    nodes = ('bogota01:5000', 'bogota02:5001', 'bogota03:5000')
    exdb.init_runtime(is_disk, tmgr, is_shm, is_debug)
    conn = exdb.connect(nodes, async=True, nWorkers=5) )
    &#160;</pre>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>