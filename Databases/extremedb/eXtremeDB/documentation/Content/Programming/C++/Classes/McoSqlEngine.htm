<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|C++ API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The C++ McoSqlEngine Class</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The C++ <i>McoSqlEngine</i> Class</h1>
            <blockquote>
                <p style="color: #ff4500;"><span style="color: #000000;">This is the principle class for most <i>e</i>X<i>treme</i>SQL C++ applications. <span style="color: #000000;">An instance of <i>McoSqlEngine</i> is used to open and connect to an <i>e</i>X<i>treme</i>DB database,  execute SQL statements and process query result sets, and perform other database operations. (Please view the <a href="../../../Getting_Started/Quick_Start/QS_Embedded_SQL/QS_Embedded_SQL_Cpp.htm">Embedded SQL Quick Start</a> page for an example.)</span></span>
                </p>
                <h3>For an overview see page <a href="../Cpp_Classes.htm">C++ Classes</a></h3>
                <p>The <i>McoSqlEngine</i> class is not thread safe and can only be accessed from a single thread.  To guard against improper usage, the <i>McoSqlEngine</i><a name="kanchor790"></a> instance is associated with the thread that this instance was created from. If the engine is used from a different thread, by default the SQL runtime raises an exception.</p>
                <p>Sometimes an application might choose to share the engine between multiple threads. It must be understood that proper <i>application-level synchronization</i> is necessary to avoid trouble (including possibly corrupting the database runtime and data). In this case, in order to avoid raising the exception, the application makes use of the <code>grab()</code> method, which associates the engine with the current thread. Alternatively the <i><a href="McoMultithreadedSqlEngine.htm">McoMultithreadedSqlEngine</a></i> class can be used.</p>
                <p>&#160;</p>
                <p class="BodyParagraph">The <i>McoSqlEngine</i> methods are listed below. Though it inherits many of its methods from base class <i><a href="SqlEngine.htm">SqlEngine</a></i>, the inheritance lineage is not shown here; the principle methods of <i>SqlEngine</i> are included in the list below. Note that some methods have links to pages with more detailed descriptions.</p>
                <table class="TableStyle-IndentedFunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 388px;" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 464px;" />
                    <tbody>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/Constructor.htm"><b>McoSqlEngine</b>()</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Default constructor</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>McoSqlEngine</b>(McoSqlEngine* engine)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Copy constructor</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/open1.htm"><b>open</b>( params )</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Open the SQL engine with an <i><a href="McoSqlOpenParameters.htm">McoSqlOpenParameters</a></i> argument</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/open2.htm">open( database handle )</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Open the SQL engine with an <i>e</i>X<i>treme</i>DB database handle for SQL access</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><a href="McoSqlEngine/open3.htm"><b>open( parameter list )</b></a>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                <p>Open the SQL engine with a list of parameters </p>
                            </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/executeQuery.htm"><b>executeQuery</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute an SQL <code><a href="../../SQL/DML_Statements/Select.htm">select</a></code> statement with a variable list of parameters</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/vexecuteQuery.htm"><b>vexecuteQuery</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute an SQL <code><a href="../../SQL/DML_Statements/Select.htm">select</a></code> statement with a <code>va_list</code> argument containing a list of parameters or an array of <i><a href="Value.htm">Value</a></i> parameters</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/executeStatement.htm"><b>executeStatement</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute an SQL <code><a href="../../SQL/DML_Statements/Insert.htm">insert</a></code>, <code><a href="../../SQL/DML_Statements/Update.htm"><code>updat</code>e</a></code> or <code><a href="../../SQL/DML_Statements/Delete.htm"><code>delete</code><![CDATA[  ]]></a></code>statement with a variable list of  parameters</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/executeStatement.htm"><b>vexecuteStatement</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute an SQL <code><a href="../../SQL/DML_Statements/Insert.htm">insert</a></code>, <code><a href="../../SQL/DML_Statements/Update.htm"><code>updat</code>e</a></code> or <code><a href="../../SQL/DML_Statements/Delete.htm"><code>delete</code><![CDATA[  ]]></a></code>statement with a <code>va_list</code> argument containing a list of parameters or an array of <i><a href="Value.htm">Value</a></i> parameters</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="../../../Users_Guides/SQL/C++_API/Prepared_Statements.htm"><b>prepare</b>()</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Prepare an SQL prepared statement for later execution; see also page <a href="../../Common/Format_Specifiers/Format_Specifiers_C_Cpp.htm">Parameter Substitution Format Specifiers</a></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="../../../Users_Guides/SQL/C++_API/Prepared_Statements.htm"><b>executePreparedQuery</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute a prepared <code><a href="../../SQL/DML_Statements/Select.htm">select</a></code> statement</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="../../../Users_Guides/SQL/C++_API/Prepared_Statements.htm"><b>executePreparedStatement</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Execute a prepared <code><a href="../../SQL/DML_Statements/Insert.htm">insert</a></code>, <code><a href="../../SQL/DML_Statements/Update.htm"><code>updat</code>e</a></code> or <code><a href="../../SQL/DML_Statements/Delete.htm"><code>delete</code> <![CDATA[ ]]></a></code>statement </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><a href="McoSqlEngine/beginTransaction.htm" style="font-weight: bold;">beginTransaction(...)</a>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Begin a database transaction</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>disconnect</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Disconnect the database</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>close</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Close the database</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>grab</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Associate this engine instance  with the current thread</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>createConnectionPool</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Create a connection pool needed for parallel query execution</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>destroyConnectionPool</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Destroy the connection pool created by  <code>createConnectionPool()</code></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>connectionPoolSize</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Return the connection pool size</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>registerExternalTables</b>(McoSql::Table** tables,  size_t n_tables)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Register external tables, i.e. tables located in other DBMS or files. <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> provides an open implementation of <i>McoSql::Table</i> and other classes (functionality similar to "foreign data wrappers" for Postgres or "federated tables" for mySQL). </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>save</b>(char const *databaseFile)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save a database image to the specified file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>save</b>(void *stream, mco_stream_write streamWriter)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save a database image using a <a href="../../C/Structures/Stream_Writer.htm">stream writer</a></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>saveClass</b>(char const *filePath, char const *className)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save the table contents to the specified file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>loadClass</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Load the table contents from the specified file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>saveMetadata</b>(char const *metadataFile)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save the database metadata (compatible with <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span>) to the specified file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>saveMetadata</b>(void *stream, mco_stream_write streamWriter);</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save the database metadata (compatible with <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span>) using a <a href="../../C/Structures/Stream_Writer.htm">stream writer</a></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>saveDictionary</b>(char const *dictionaryFile)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save the database dictionary to the specified file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>saveDictionary</b>(void *stream, mco_stream_write streamWriter)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Save the database dictionary using a <a href="../../C/Structures/Stream_Writer.htm">stream writer</a></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/backupCreate.htm"><b>backupCreate</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Perform an incremental backup</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/backupInfo.htm"><b>backupInfo</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">List the contents of a backup file</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/backupRestore.htm"><b>backupRestore</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Restore a database from an incremental backup</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b><a href="McoSqlEngine/fileBackup.htm"><b>fileBackup</b>(...)</a></b>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Create a file backup of a disk database - <i>for persistent databases only</i></td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">checkInterrupted()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Check the <code>interrupted</code> flag which is cleared before execution of each SQL query. (When calling <code><a href="McoSqlEngine/fileBackup.htm">fileBackup()</a></code> it may be necessary to set this flag with <code><a href="#setInter">setInterrupted()</a></code> to manage long running backups)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">setInterrupted( bool trueOrFalse )</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Set the <code>interrupted</code> flag which is cleared before execution of each SQL query. (When calling <code><a href="McoSqlEngine/fileBackup.htm">fileBackup()</a></code> it may be necessary to set this flag  to manage long running backups)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>setFreeMemoryThreshold</b>(size_t threshold)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Setting this threshold causes the memory allocator to set error status in the current transaction state when the amount of free memory is below the specified threshold. This threshold allows the <i>e</i>X<i>treme</i>DB runtime to gracefully perform unwind or recovery if there is no free memory at all.</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">getFreeMemoryThreshold()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Return the current size of the free memory threshold</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getHandle</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get the database handle which can be used by <i>e</i>X<i>treme</i>DB C API functions</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getLastAutoid</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Return the <code>autoid</code> (64 bit integer value) of the last object allocated </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>setTransactionPolicy</b>(MCO_COMMIT_POLICY policy)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1"><a name="kanchor791"></a>Change the transaction commit policy for the current connection</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>flush</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Flush all changes done by committed transactions to the disk. (Note that this method can be used to save database changes to disk when the <code>MCO_COMMIT_NO_FLUSH</code> <a href="../../../Users_Guides/Core/Persistent_Databases/Persistent_Database_IO.htm">transaction policy</a> is used.)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getName</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Return the database name</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>detach</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Detach from buy <i>do not close</i> the database keeping it in shared memory</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>isDetached</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Returns true if <code>detach()</code> was called</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getPageSize</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Returns the database page size</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getFreePages</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Returns the number of free in-memory pages</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getTotalPages</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Returns the total number of in-memory pages</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>getDiskInfo</b>()</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get information about disk usage</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><b>license</b>( char * key )</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Set license key (for license-protected packages only). (The license key must be set before calling any of the <code>open()</code> methods</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><a name="setInter"></a><b>setInterrupted</b>(bool enable)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1"> Mark the current query as interrupted. This is used to implement interruption of long running queries.

     </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1"><b>DESTROY</b>(McoSqlEngine)</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">This macro generates the default destructor for <i>e</i>X<i>treme</i>SQL C++ classes. </td>
                        </tr>
                    </tbody>
                </table>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>