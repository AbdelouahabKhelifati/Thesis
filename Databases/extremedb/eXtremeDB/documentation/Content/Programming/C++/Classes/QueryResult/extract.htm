<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|C++ API|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>QueryResult:extract()</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>QueryResult</i>:extract()</h1>
            <blockquote>
                <p>Extract <i>Record</i> components to the corresponding C struct.</p>
                <h3>For an overview see page <a href="../QueryResult.htm">QueryResult</a></h3>
                <h3>Prototype</h3>
                <div class="code-block"><pre>&#160;
    void extract( Record* rec, void* dst, size_t size, 
            bool nullIndicators[] = NULL, 
            ExtractMode mode = emReferenceToBody);
&#160;</pre>
                </div>
                <h3>Arguments</h3>
                <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 695px;" />
                    <tbody>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">rec</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The Record instance to be extracted</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">dst </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A pointer to a C struct to receive the database record</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">size</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The size of the C struct. This must match the size of the database record being extracted</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">nullIndicators</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">An array of Boolean elements that will be set to <code>true</code> if the corresponding field is null. This array needs to be large enough to collect indicators for all of the records fields. In the case of nested structures, it must contain elements for each field of the nested struct also. If this array is not specified (is NULL) then attempting to extract a NULL value for a scalar field will cause a <i>RuntimeException</i>.</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">mode</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                                <p>The mode in which struct components will be extracted. Must be one of the following:
</p>
                                <ul>
                                    <li value="1"><code>emReferenceToBody</code>: a pointer to the string body inside the database. Any struct field must have char* elements.
</li>
                                    <li value="2"><code>emCopyFixedSizeStrings</code>: copy fixed-size strings. Any struct fields must have char[N] elements where N is the size of the fixed-size string.
</li>
                                    <li value="3"><code>emCloneStrings</code>: clone string components. Any struct files must have char* elements. (It is the application’s responsibility to deallocate string bodies (using the <code>delete[]</code> operator).
</li>
                                </ul>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h3>Description</h3>
                <p>This method extracts the <i>Record</i> components to the corresponding C struct. The following rules describe how the C struct is used as the destination data structure:</p>
                <blockquote>
                    <p>1.	The C struct must have exactly the same components in the same order as the database record.</p>
                    <p>2.	All structure members use default alignment, i.e. the alignment used by the compiler without special alignment pragmas.</p>
                    <p>3.	Array components are represented as a pointer to <i>Array</i> value.</p>
                    <p>4.	String components are stored as null-terminated ANSI strings.</p>
                    <p>5.	If a component of the structure doesn’t belong to any table and is the result of some <code><a href="../../../SQL/DML_Statements/Select.htm">select</a></code> statement expression calculation, then its type is determined by the following rules:</p>
                    <ul>
                        <li value="1">integer types (<code>char</code>, <code>short</code>, <code>unsigned short</code>, <code>int</code>, etc.) are represented as type <code>int64_t</code></li>
                        <li value="2">floating point types (<code>float</code>, <code>double</code>) are represented as type <code>double</code></li>
                        <li value="3">Other types are represented as they are</li>
                    </ul>
                    <p>6.	Nested structures must be represented by the same C struct.</p>
                </blockquote>
                <h3>Returns</h3>
                <p>This method throws a <i>RuntimeException</i> in the case of an error.</p>
                <h3>Example</h3>
                <div class="code-block"><pre>    &#160;
    &#160;
    Schema snippet:
            
    &#160;
    class Person 
    {
        char&lt;64&gt; name;
        int4     age;
        float    weight;
        &#160;
        tree&lt;name&gt; by_name;
    };
&#160;
    &#160;
    Application snippet:
            
    &#160;
    // Define the structure corresponding to database record Person
    struct _Person
    {
    char const* name;
        int age;
        float weight;
    };
    &#160;
    void show_results( char * sql)
    {
        QueryResult result(engine.executeQuery(sql));
        Cursor* cursor = result-&gt;records();
        while (cursor-&gt;hasNext())
        {
            Record* rec = cursor-&gt;next();
            _Person p;
            // Extract the Person record to the corresponding struct
            result-&gt;extract(rec, &amp;p, sizeof(p));
            
            printf("\t\t%d) Name=%s, Ordinal=%u\n", count, p.name, p.ordinal );
        }
    }
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>