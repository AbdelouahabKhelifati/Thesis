<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|C++ API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The C++ Value Class</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The C++ <i>Value</i> Class</h1>
            <p>The <i>Value</i> class is a generic base class that implements methods common to several subclasses.</p>
            <h3>For an overview see page <a href="../Cpp_Classes.htm">C++ Classes</a></h3>
            <p>The classes <i><a href="List.htm">List</a></i>, <i><a href="Array.htm">Array</a></i>, <i><a href="String.htm">String</a></i>, <i><a href="Struct.htm">Struct</a></i> and <i><a href="Record.htm">Record</a></i> inherit from <i>Value</i> and implement (and in some cases override) methods  particular to these specialized subclasses.</p>
            <p class="BodyParagraph">The main <i>Value </i>methods are listed below.</p>
            <table class="TableStyle-IndentedFunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 388px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 464px;" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">in <b>compare</b>(	Value * x )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Compare the current <i>Value</i> (this) with the argument <code>x</code> and return an integer value indicating the result of the comparison: a negative integer value if this is less than <code>x</code>, zero if they are equal, and a positive integer value if this is greater than <code>x</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">static Value *	<b>deserialize</b> (	char * buf ,
		size_t &amp; size )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Deserialize a <i>Value</i> from the specified buffer</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">bool	<b>equals</b>(	Value * x )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Compare the current <i>Value</i> (this) with the argument <code>x</code> and return a Boolean value indicating the result of the comparison:<code> true</code> if the two values are equal, <code>false</code> otherwise</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">static size_t	<b>fillBuf</b> (	char * dst,
		char const * src,
		size_t size )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Copy the string representation of a <i>Value</i> into the specified buffer. Up to <code>size</code> bytes will be copied</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">int64_t	<b>intValue</b> (	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get the integer <i>Value</i> by attempting to cast the value to integer type.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">bool	<b>isNull</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Check if the current <i>Value</i> is null: returns <code>true</code> if the value is null, <code>false</code> otherwise</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">bool	<b>isTrue</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Check if the current Boolean <i>Value</i> is true</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">void *	<b>pointer</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get a raw pointer to the value data. For example, for an integer <i>Value</i> this returns the address of a 64 bit integer; for a <i><a href="String.htm">String</a></i> <i>Value</i> it points to a null-terminated string	
</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">double	<b>realValue</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get the <code>real</code> <i>Value</i> by attempting to cast the <i>Value</i> to floating point type</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">size_t	<b>serialize</b>(	char * buf ,
		size_t &amp; size )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Serialize the current <i>Value</i> to the specified buffer</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">String *	<b>stringValue</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get the <i>String</i> representation of the <i>Value</i>; any scalar type can be converted to a string
</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">time_t	<b>timeValue</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Get the timestamp value by attempting to cast the Value to <code>DateTime</code> type
</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">UnicodeString *	<b>unicodeStringValue</b>(	void )</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">Get the <i>UnicodeString</i> representation of the <i>Value</i>; any scalar type can be converted to a <i>UnicodeString</i></td>
                    </tr>
                </tbody>
            </table>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>