<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|C++ API|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>AsyncDistributedSqlEngine:executeMany</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>AsyncDistributedSqlEngine</i>:executeMany</h1>
            <blockquote>
                <p>Start executing a list of queries.</p>
                <h3>Prototype</h3>
                <div class="code-block"><pre>&#160;
    void executeMany(Vector&lt;String&gt; *queries, 
                Vector&lt;ConnectionArgs&gt; *args, 
                Allocator *ret_allocator);
&#160;</pre>
                </div>
                <h3>Arguments</h3>
                <table class="TableStyle-IndentedFunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 606px;" />
                    <tbody>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">queries</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A vector of query strings</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">args</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A vector of <i>ConnectionArgs</i> structures</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">ret_allocator</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">The allocator used to build the result set</td>
                        </tr>
                    </tbody>
                </table>
                <h3>Description</h3>
                <p>This method starts executing a list of <code>queries</code>. Each query string is executed by an individual worker process and the method <code><a href="waitMany.htm">waitMany()</a></code> collects the results of each query when finished. The vector <code>args</code> contains the arguments to be substituted into the query strings. On return, the argument <code>ret_allocator</code> contains the address of the allocator used to build the query results.</p>
                <h3>Returns</h3>
                <p>No value returned.</p>
                <h3>Example</h3>
                <p>The following snippet defines a vector of query strings and 9 arguments to be substituted into the queries; then calls <code>executeMany()</code> to process these queries in parallel:</p>
                <div class="code-block"><pre>    &#160;
    const size_t nWorkers = 4;
    const char *nodes[] = 
    {
        "localhost:5001",
        "localhost:5002"
    };
    &#160;
    int main(int argc, char** argv)
    {
        try {

            McoSql::Allocator my_allocator;
            &#160;
            McoSql::AsyncDistributedSqlEngine engine(nWorkers);            
            if (!engine.open(nodes, sizeof(nodes) / sizeof(nodes[0]))) 
            {
                printf("Open failed: %s\n", engine.getError()-&gt;cstr());
                return 1;
            }
            ...
            McoSql::Vector&lt;McoSql::String&gt; *queries = 
                McoSql::Vector&lt;McoSql::String&gt;::create(&amp;my_allocator, nWorkers);
&#160;
            for (size_t i = 0; i &lt; nWorkers; i++) 
            {
                queries-&gt;items[i] = McoSql::String::create( &amp;my_allocator,
                    "INSERT INTO MyTable(pk, value, u2, i1, i2, i4, i8, flt, dbl) 
                    VALUES (%v, %v, %v, %v, %v, %v, %v, %v, %v)");
            }
&#160;
            McoSql::Vector&lt;McoSql::ConnectionArgs&gt; *args = 
                McoSql::Vector&lt;McoSql::ConnectionArgs&gt;::create(&amp;my_allocator, nWorkers);
            for (size_t i = 0; i &lt; nWorkers; i++) 
            {
                McoSql::ConnectionArgs *ca = new McoSql::ConnectionArgs(&amp;my_allocator, 9 /*nParams*/);
                ca-&gt;args[0] = McoSql::IntValue::create(&amp;my_allocator, i*100);
                ca-&gt;args[1] = McoSql::String::format(&amp;my_allocator, "str%d", i);
                ca-&gt;args[2] = McoSql::IntValue::create(&amp;my_allocator, i);
                ca-&gt;args[3] = McoSql::IntValue::create(&amp;my_allocator, i);
                ca-&gt;args[4] = McoSql::IntValue::create(&amp;my_allocator, i);
                ca-&gt;args[5] = McoSql::IntValue::create(&amp;my_allocator, i);
                ca-&gt;args[6] = McoSql::IntValue::create(&amp;my_allocator, i);
                ca-&gt;args[7] = McoSql::RealValue::create(&amp;my_allocator, i*100);
                ca-&gt;args[8] = McoSql::RealValue::create(&amp;my_allocator, i*100);
                args-&gt;items[i] = ca;
            }
            McoSql::Allocator ret_allocator;
            &#160;
            engine.executeMany(queries, args, &amp;ret_allocator);
            ...
        }
    }
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>