<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Control Structures used in the C API">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Runtime Information</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><a name="kanchor314"></a>Runtime Information</h1>
            <p>The characteristics of the runtime currently active can be obtained by calling the <code><a href="../Core_Functions/Static/Runtime_Control/get_runtime_info.htm">mco_get_runtime_info()</a></code> API. These characteristics are returned in the <code>mco_runtime_info_t</code> structure which has the following elements. Many of these are boolean (<code>uint1</code>) values (where 1 = <code>MCO_YES</code> and 0 = <code>MCO_NO</code>) indicating whether that feature is enabled or not. </p>
            <div class="code-block"><pre><a name="kanchor315"></a><a name="kanchor316"></a><a name="kanchor317"></a><a name="kanchor318"></a><a name="kanchor319"></a>    &#160;
    typedef struct mco_runtime_info_t_
    {
    uint1 mco_version_major; /* eXtremeDB version */
    uint1 mco_version_minor; /* eXtremeDB version */
    uint2 mco_build_number;  /* eXtremeDB build number */
    uint1 mco_size_t;       /* sizeof mco_size_t variable, depends on x32/x64 architecture */
    uint1 mco_offs_t;       /* sizeof mco_offs_t variable, depends on x32/x64 architecture */
    uint1 uint4_supported;  /* uint4 datatype support */
    uint1 float_supported;  /* double/float datatype support */
    uint1 mco_checklevel;   /* runtime's checklevel, 0 for non-debug libraries */
    uint1 evaluation_version;       /* Evaluation runtime */
    uint1 large_database_supported; /* Large database support (&gt;4G) for x32 runtime mode */
    uint1 collation_supported;      /* External collations (index comparision) support */
    uint1 heap31_supported;         /* eXtremeDB v3.1 application level heap feature support. (DEPRECATED - value is always 0)*/
    uint1 bin_serialization_supported; /* Binary or XML serialization support */
    uint1 fixedrec_supported;          /* FIXEDREC alloations for constant-size objects support */
    uint1 statistics_supported;        /* Statistic collection enabled */
    uint1 events_supported;            /* Synch/Asynch events support */
    uint1 save_load_supported;         /* Database image save/load support */
    uint1 object_initialization_supported; /* Support of new object fields initialization (instead of zeros) support */
    uint1 direct_index_field_access_supported;  /* Use values of indexed fields from the indexes instead of object bodies 
                                optimization (persistent objects) */
    uint1 multiprocess_access_supported;        /* conventional or shared memory driver linked into the program  */
    uint1 object_repack_supported;              /* Support of dynamic object repack feature. Obsolete. Left for compatibility */
    uint1 transaction_logging_supported;        /* Transaaction Logging (TL) feature support */
    uint1 cluster_supported;                    /* Cluster (CL) feature support */
    uint1 high_availability_supported;          /* High Avalaibility (HA) fature support */
    uint1 ha_multicast_supported;               /* HA Multi-cast support */
    uint1 ha_incremental_replication_supported; /* HA incremental replication support */
    uint1 binary_schema_evalution_supported;    /* Binary schema evaluation support */
    uint1 unicode_supported;                    /* Unicode (nchar/nstring datatype) support */
    uint1 wchar_supported;                      /* WChar (wchar/wstring datatype) support. Required C/C++ runtime */
    uint1 recovery_supported;                   /* Recovery support. Obsolete, left for compatibility */
    uint1 disk_supported;                       /* Support for persistent objects (vtmem/vtdsk runtime) */
    uint1 direct_pointers_supported;            /* Direct- or offset-based pointers in the database (DPTR/OFFS runtime) */
    uint1 persistent_object_supported;          /* Object persistence support */
    uint1 xml_import_export_supported;          /* XML database export/import support */
    uint1 user_defined_index_supported;         /* User-defined index (comparision) support */
    uint1 multifile_supported;                  /* Multi-file persistent storage support */
    uint1 multifile_descriptor_supported;       /* Enable Multi-file descriptor file (mfd-file) support for
                             multi-file persistent storage feature */
    uint1 two_phase_commit_supported;           /* Two-phase commit support */
    uint1 rtree_supported;                      /* Include rtree index implementation code into runtime */
    uint1 tree_based_hash;                      /* tree-based hash implementation (for internal debugging) */
    uint1 tmgr_mvcc_async_cleanup;              /* Value of 1 indicates “delayed  cleanup of unneeded object versions”; value of 0 means cleanup immediately */
    uint1 concurent_disk_btree;                 /* Always on, obsolete, left for compatibility */
    uint1 open_cursor_goto_first;               /* Indicates initial positioning of new cursors to the first element */
    uint1 smart_index_insert;                   /* Pre-sort data records in a voluntaty index creation procedure */
    uint1 btree_leaf_lock;                      /* Fine-grain locking of btree indexes */
    uint1 null_statistics;                      /* Always on, obsolete, left for compatibility */
    uint1 implicit_runtime_start;               /* Always on, obsolete, left for compatibility */
    uint1 bufferized_sync_iostream;             /* Indicates that HA transmission buffer-ization is enabled for synchronization procedure */
    uint1 async_replication;                    /* Asynchronus HA replication enabled */
    uint1 fast_transaction_list;                /* Indicates tree index in transaction list implementation enabled (MURSIW) */
    uint1 extendable_dirty_page_bitmap;         /* Persistent storage's dirty pages map extends */
    uint1 mursiw_policy;                        /* MURSIW TM behavior: 0 - Priority-based transaction queue, 
                1 - Sequential transaction queue, 2 - Global sync, 3 - RW-Lock */
    uint1 sync_capabilities;                    /* Sync. primitives implementation capabilities, bit mask: 
                    1 - single-process, 2 - multi-process capable primitives */
    uint1 char_comparison_policy;               /* Compare chars as: 0 - Default, 1 - as signed, 2 - as unsigned */
    uint4 stream_buffer_size;                   /* Size of buffer used in streaming code in HA / CL / TL etc. 
                    (Also for Stream Reader and Stream Writer functions.) */
    uint1 max_db_instances;                     /* Max. number of database instances supported by the runtime */
    uint1 max_db_name_length;                   /* Max. length of a database name supported by the runtime */
    int   max_extends;                          /* Max. number of extends of database memory area */
    uint4 tl_page_buffer_size;                  /* Size of internal buffers that TL operates */
    uint2 ha_max_replicas;                      /* Max. number of HA replicas at a time */
    uint4 ha_transmit_buffer_size;              /* Size of buffer used in HA to send data from commit, default is 2K */
    uint4 ha_syncronization_buffer_size;        /* HA synchronization stream IO buffer size, default is 2K */
    uint4 default_redo_log_limit;               /* Default size of REDO log length limit, default is 16M */
    uint1 mvcc_critical_sections;               /* Number of critical sections used by MVCC, it is better to be a prime number */
    uint1 mvcc_per_index_locks;                 /* Number of locks used by index, it is better to be a prime number */
    uint2 con_disk_page_cache_size;             /* Size of per-connection page cache. The runtime pre-allocates some 
                        pages to speedup page allocation when needed */
    uint1 small_con_cache_threshold;            /* Use hashed per-connection cache if the 
                        con_disk_page_cache_size &gt; small_con_cache_threshold; 
                        use an array otherwise */
    uint4 extendable_dirty_page_bitmap_limit;   /* Max bitmap size if extendable dirty page bitmap enabled */
    uint1 max_vista_sessions;                   /* Max number of Vista sessions (windows vista only) */
    uint1 concurrent_write_transactions;        /* Does current Transaction Manager support concurrent write transactions or not */
    uint1 encryption_support;                   /* Database encryption enabled */
    const char *mco_revision;                   /* String eXtremeDB version number */
} mco_runtime_info_t;
&#160;</pre>
            </div>
            <p>&#160;</p>
            <table style="mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionReference" cellspacing="0">
                <col class="TableStyle-FunctionReference-Column-Column2" />
                <col class="TableStyle-FunctionReference-Column-Column2" />
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mco_version_major</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The <i>e</i>X<i>treme</i>DB version major number</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mco_version_minor</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The <i>e</i>X<i>treme</i>DB version minor number</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mco_build_number</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The <i>e</i>X<i>treme</i>DB build number</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mco_size_t</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Sizeof <code>mco_size_t </code>variable, depends on x32/x64 architecture</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>mco_offs_t</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Sizeof <code>mco_offs_t</code> variable, depends on x32/x64 architecture</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>uint4_supported</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> <code>uint4</code> data type supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>float_supported</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> <code>double</code>/<code>float</code> data type supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>mco_checklevel</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The runtime's checklevel, 0 for non-debug libraries</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>evaluation_version</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Evaluation runtime</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                        <p>large_database_supported</p>
                    </td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> large database supported (&gt;4G) for x32 runtime mode</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">collation_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> external collations (index comparison) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">heap31_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> <i>e</i>X<i>treme</i>DB v3.1 application level heap feature supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">bin_serialization_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code>Binary or XML serialization supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">fixedrec_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><code>If <code>True,</code>FIXEDREC</code> alloations for constant-size objects supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">statistics_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code>Statistic collection enabled</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">events_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code>Synch/Asynch events supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">save_load_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code>Database image save/load supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">object_initialization_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> new object fields initialization (instead of zeros) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">direct_index_field_access_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> use values of indexed fields from the indexes instead of object bodies optimization (persistent objects)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">multiprocess_access_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Conventional or shared memory driver linked into the program</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">object_repack_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Support of dynamic object repack feature. Obsolete. Left for compatibility</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">transaction_logging_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> (TL) feature supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">cluster_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> <i style="font-weight: normal;">e</i>X<i style="font-weight: normal;">treme</i>DB <i style="font-weight: normal;">Cluster</i> (CL) feature supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">            high_availability_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code><i>e</i>X<i>treme</i>DB<i> High Availability</i> (HA) fature supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ha_multicast_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> HA Multi-cast supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ha_incremental_replication_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> HA incremental replication supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">binary_schema_evalution_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> Binary schema evaluation supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">unicode_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> Unicode (<code>nchar</code> / <code>nstring</code> data type) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">wchar_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> WChar (<code>wchar</code> / <code>wstring</code> datatype) supported. Required C/C++ runtime</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">recovery_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Recovery support. Obsolete, left for compatibility</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">disk_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> persistent objects (<code>vtmem</code> / <code>vtdsk</code> runtime) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">direct_pointers_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> direct- or offset-based pointers in the database (<code>DPTR</code> / <code>OFFS</code> runtime) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">persistent_object_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> object persistence supported (Allows persistent objects in IM-OFFS runtime)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">xml_import_export_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> XML database export / import supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">user_defined_index_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> user-defined index (comparison) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">multifile_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> multi-file persistent storage supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">multifile_descriptor_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> multi-file descriptor file (mfd-file) supported for multi-file persistent storage feature</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">two_phase_commit_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> two-phase commit supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">rtree_supported</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">If <code>True,</code> include <code>rtree</code> index implementation code into runtime</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">tree_based_hash</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><code>If <code>True,</code> tree</code>-based hash implementation (for internal debugging) supported</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">tmgr_mvcc_async_cleanup</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Value of 1 indicates “delayed  cleanup of unneeded object versions”; value of 0 means cleanup immediately (represents the status of <code>MCO_CFG_TMGR_MVCC_ASYNC_CLEANUP</code> in file <code>mcocfg.h</code>)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">concurent_disk_btree</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Always on, obsolete, left for compatibility</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">open_cursor_goto_first</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Indicates initial positioning of new cursors to the first element</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">smart_index_insert</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Pre-sort data records in a <code>voluntaty index</code> creation procedure</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">btree_leaf_lock</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Fine-grain locking of <code>tree</code> indexes</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">null_statistics</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Always on, obsolete, left for compatibility</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">implicit_runtime_start</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Always on, obsolete, left for compatibility</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">bufferized_sync_iostream</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Indicates that HA transmission buffer-ization is enabled for synchronization procedure</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">async_replication</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Asynchronous HA replication enabled</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">fast_transaction_list</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Indicates <code>tree</code> index in transaction list implementation enabled (MURSIW)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">extendable_dirty_page_bitmap</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Persistent storage's dirty pages map extends</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mursiw_policy</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><code><a href="../../../Users_Guides/Core/MURSIW_Transaction_Manager.htm">MURSIW</a></code> TM behavior: 0 - Priority-based transaction queue, 1 - Sequential transaction queue, 2 - Global sync, 3 - RW-Lock</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">sync_capabilities</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Synchronization primitives implementation capabilities, bit mask: 1 - single-process, 2 - multi-process capable primitives</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">char_comparition_policy</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Compare chars as: 0 - Default, 1 - as signed, 2 - as unsigned</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">stream_buffer_size</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Size of buffer used in streaming code in HA / CL / TL etc. (Also for <a href="Stream_Reader.htm">Stream Reader</a> and <a href="Stream_Writer.htm">Stream Writer</a> functions.)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">max_db_instances</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max. number of database instances supported by the runtime</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">max_db_name_length</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max. length of a database name supported by the runtime</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">max_extends</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max. number of extends of database memory area</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">tl_page_buffer_size</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Size of internal buffers that TL operates</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ha_max_replicas</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max. number of HA replicas at a time</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ha_transmit_buffer_size</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Size of buffer used in HA to send data from commit, default is 2K</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ha_syncronization_buffer_size</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">HA synchronization stream IO buffer size, default is 2K</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">default_redo_log_limit</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Default size of <code>REDO</code> log length limit, default is 16M</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mvcc_critical_sections</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Number of critical sections used by MVCC, it is better to be a prime number</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mvcc_per_index_locks</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Number of locks used by index, it is better to be a prime number</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">con_disk_page_cache_size</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Size of per-connection page cache. The runtime pre-allocates some pages to speedup page allocation when needed</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">small_con_cache_threshold</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Use hashed per-connection cache if the <code>con_disk_page_cache_size &gt; small_con_cache_threshold</code>; use an array otherwise</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">extendable_dirty_page_bitmap_limit</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max bitmap size if extendable dirty page bitmap enabled</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">max_vista_sessions</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max number of Vista sessions (windows vista only)</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">concurrent_write_transactions</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Does current Transaction Manager support concurrent write transactions or not</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">rc4_encryption_support</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Database encryption enabled</td>
                </tr>
                <tr class="TableStyle-FunctionReference-Body-Body1">
                    <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mco_revision</td>
                    <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">String <i>e</i>X<i>treme</i>DB version number</td>
                </tr>
            </table>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>