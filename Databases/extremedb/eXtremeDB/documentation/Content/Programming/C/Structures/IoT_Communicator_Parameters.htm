<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Control Structures used in the C API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IoT_Communicator_Params</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>IoT_Communicator_Params</h1>
            <blockquote>
                <p>The <i>e</i>X<i>treme</i>DB<i> Active Replication Fabric</i> communicator is configured by specifying the parameters described below.</p>
                <h3>For an overview see page <a href="../../../Users_Guides/ADR/ADR_Applications_C.htm">ARF Applications in C</a></h3>
                <p>The following structure is initialized by function <a href="../ADR_Functions/comm_params_init.htm">mco_iot_comm_params_init()</a> and passed to function <a href="../ADR_Functions/comm_create.htm"><code>mco_iot_comm_create()</code></a>:</p>
                <div class="code-block"><pre><a name="kanchor226"></a>   
&#160;
    typedef struct mco_iot_comm_params_t_
     {
        // The number of callback tasks equal to the maximum number of 
        // connections that the runtime serves in parallel;
        uint2              n_callback_threads;
        MCO_SOCK_DOMAIN    sock_domain. // the default  socket domain (TCP or local domain)
        void              *ssl_params;            // the default SSL parameters
        timer_unit         send_timeout;      // the default write timeout in milliseconds
        timer_unit         recv_timeout;       // the  default read timeout in milliseconds
        int                listen_queue_size;    //-the size of the listen -sockets queue
        uint2              wakeup_port;
        int                compression_level;
        &#160;
     }  mco_iot_comm_params_t;
&#160;</pre>
                </div>
                <p>The following structure is used to maintain statistics for IoT connections:</p>
                <div class="code-block"><pre>    &#160;
    typedef struct mco_iot_connection_stat_t_
    {
        mco_inetaddr_t     inetaddr;                /* peer IP */
        int                port;                    /* peer port */
        uint8              sent_bytes;              /* TX bytes */
        uint8              recv_bytes;              /* RX bytes */
        uint2              sent_compression_ratio;  /* TX compression ratio in percents */
        uint2              recv_compression_ratio;  /* RX compression ratio in percents */
    &#160;
    } mco_iot_connection_stat_t;
    &#160;</pre>
                </div>
                <p>The following structures are used for IoT network communication:</p>
                <div class="code-block"><pre xml:space="preserve">    &#160;
    typedef struct mco_iot_ack_t_
    {
        uint8              seq;  /* This is used internally in the mco_iot_replicator_sync() API function to implement the MCO_IOT_SYNC_WAIT mode. */       
        uint8              sender_agent_id; /* The agent_id of the sender  */
        uint8              sender_db_id;  /* The database ID of the sender */          
        uint8              receiver_agent_id; /* The agent_id of the receiver */
        uint8              timestamp;  /* The time of the acknowledgment for 'private' objects (with specified received ID) */
        uint8              timestamp_cmn;  /* The time of the acknowledgment for 'common' objects (with receiver ID == ALL_AGENTS) */
        uint4              error_code; /* The error code on the receiver side */
        uint4              flags; /* Subset of mco_iot_replicator_sync()'s flags parameter  */
    &#160;
    } mco_iot_ack_t;
					
    typedef struct mco_iot_replicator_params_t_
    {
        // The size of the connection pool
        // This is the maximum number of database connections that the replicator is able to hold and reuse
        uint2      conn_pool_size;
        // the timeout for mco_iot_replicator_sync() with flag MCO_IOT_SYNC_WAIT
        timer_unit wait_timeout; 
    &#160;
    } mco_iot_replicator_params_t;

    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>