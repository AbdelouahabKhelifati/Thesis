<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Static API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>mco_translog_play</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>mco_translog_play</h1>
            <blockquote>
                <p>This function reads a specified log file or pipe and, if the log file is “compatible”, iterates its content by calling the user-defined callback and also fires registered events.</p>
                <h3>For an overview see page <a href="../../../Users_Guides/TL/TL_Applications.htm">TL Applications</a></h3>
            </blockquote>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    MCO_RET	mco_translog_play (	char const *file_path, mco_db_h db, mco_trans_iterator_callback_t iteration_proc, 
                    void *user_ctx, mco_dictionary_h dict, void *mem_ptr, mco_size_t mem_size,
                     mco_translog_register_event_handlers_t register_callback, 
                    void *regevent_user_ctx)
&#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 125px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 551px;" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">file_path</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The path and filename of the log file or name of pipe overflow file. Note! It may be 0 if a pipe without an overflow file is used.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">db</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Connection handle to the original database to which the pipe is connected. Note: May be NULL if the function works with a simple log file.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">iteration_proc</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">User-defined callback function that iterates objects stored in the log. Note! May be NULL if only events handling is desired.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">user_ctx</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Void pointer to user data that will be passed to the user-defined iteration callback.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">dict</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Dictionary of the database whose transactions are being logged.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">mem_ptr</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Pointer to a temporary data buffer to perform iterations if conventional memory is used or 0 if shared memory is used. Note! The pointer must be aligned to 8 bytes. (Using function <code>malloc()</code> complies with this requirement.)</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">mem_size</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Size of the temporary data buffer. It should be at least twice the size of the largest stored transaction.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">register_callback</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">User-defined callback function that registers event handlers. Note! May be NULL if only iterating of objects is desired.</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">regevent_user_ctx</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">Void pointer to user data that will be passed to the user-defined register event handlers callback.</td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <blockquote>
                <p>This function is a copy of function <code><a href="iterate.htm">mco_translog_iterate()</a></code> but in addition it allows to register a user-defined call-back which registers, in its turn, the event handlers. Function <code>mco_translog_play()</code> reads a specified log file or pipe and iterates its content by user-defined callback and fires proper events. (Note that an equivalent to <code>mco_translog_play()</code> is not available through the JNI or C# API.)</p>
            </blockquote>
            <h3>Return Codes</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 313px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">MCO_S_OK</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The log file was read successfully</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>User defined code other than MCO_S_OK</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>If the user-defined callback returns any value other than MCO_S_OK then function<code> <a href="iterate.htm">mco_translog_iterate()</a></code> aborts and returns this code as its own return code.  This is the correct way to break the iteration loop if an error condition occurs inside the user-defined iteration callback.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_INVAL</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Arguments are wrong or incompatible.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_NOT_ITERABLE</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The log was created without the flag <code><a href="../Structures/TL_Parameters.htm">MCO_TRANSLOG_ITERABLE</a></code>.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_LOG_NOT_OPENED</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The log file could not be opened.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_IO_ERROR</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Disk IO error.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_VERS_MISMATCH</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p><a name="kanchor324"></a>The log file is incompatible with the runtime settings or the database version.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_INVFORMAT</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The log file or pipe data is corrupted.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_S_TL_INVDATA</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The log file or pipe was not read completely but some transactions were found, or no end-of-file was found.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_PIPE_USED</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Pipe is already opened by another call of <code><a href="iterate.htm">mco_trans_iterate()</a></code>.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_PIPE_TERM</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Logging was terminated during the previous call of <code><a href="iterate.htm">mco_trans_iterate()</a></code> but not reinitialized by writer.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_TL_PIPE_LOST</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>All connections to a pipe were closed and its data was lost before this function was called.</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">
                            <p>MCO_E_NOMEM</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>Insufficient memory to complete the operation. Increase the value of <code>mem_size</code>.</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>