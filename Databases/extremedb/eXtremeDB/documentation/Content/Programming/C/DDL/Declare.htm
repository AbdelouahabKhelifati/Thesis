<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The DDL Declare Statement</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The DDL Declare Statement</h1>
            <blockquote>
                <p>The declare statement is used to specify three different entities: the <span class="Param">database name</span>, a user-defined “Object Identifier” or <span class="Param">oid</span>, and an automatic object identifier or <span class="Param">auto_oid</span>:</p>
                <div class="code-block"><pre>&#160;
    declare database dbname;
    &#160;
    declare oid  structname [expected-number-of-entries];
    &#160;
    declare auto_oid[expected-number-of-entries];
    &#160;</pre>
                </div>
                <h2>Database declaration</h2>
                <p>All schema definitions must contain a database declaration to specify the name of the database. The DDL compiler creates implementation file names based on the <i>dbname</i> passed to the declare statement. For example the following declaration:</p>
                <div class="code-block"><pre>&#160;
    declare database simpledb;
    &#160;</pre>
                </div>
                <p>will cause the DDL compiler to produce files <code>simpledb.h</code> and <code>simpledb.c.</code></p>
                <h2>OID declaration</h2>
                <p>The <span class="Param">declare</span> statement is also used to identify a unique object identifier with the <i>expected number of objects</i> that will be stored with an <span class="Param">oid</span>. The <i>expected-number-of-entries</i><a name="kanchor189"></a> is used by the runtime to calculate the initial hash table size for the index. </p>
                <p>Once the <span class="Param">oid</span> structure is declared, classes with this unique identifier can then be declared (see the class statement). The runtime maintains an internal index referencing all objects of such classes. Objects can reference each other by <span class="Param">oid</span> using the <span class="Param">ref</span> data type. The <span class="Param">oid</span> is a user-defined structure, even if the <span class="Param">oid</span> has a single field. Each <span class="Param">oid</span> value must be unique for the entire database.</p>
                <p>Only one <span class="Param">database</span> and one <span class="Param">oid</span> declaration is allowed within a database schema. For example:</p>
                <div class="code-block"><pre>&#160;
    struct Id {
        uint4 id;
        uint4 time_in;
    };
    declare database	market;
    declare oid 	Id[20000];
    &#160;</pre>
                </div>
                <p>Structures that represent oid have a limitation in that their elements must be of a fixed size. For instance, the following is illegal and will generate a compiler error:</p>
                <div class="code-block"><pre>&#160;
    struct StrId {
    string str;
    int2   num;
    };
    declare oid StrId[20000];
    &#160;</pre>
                </div>
                <p>But the following definition is perfectly okay:</p>
                <div class="code-block"><pre>&#160;
    struct StrId {
        char&lt;32&gt; str;
        int2     num;
    };
    declare oid StrId[20000];
    &#160;</pre>
                </div>
                <h2>AUTO_OID declaration</h2>
                <p>The <span class="Param">auto_oid</span> declaration is necessary for <i>e</i>X<i>treme</i>DB<i> High Availability</i> databases and can be useful for databases that might participate in <span class="Param">Binary Schema Evolution</span> (BSE). Like the <span class="Param">oid</span>, an <span class="Param">auto_oid</span> declaration specifies the number of expected objects in the database:</p>
                <div class="code-block"><pre>    &#160;
    declare auto_oid[10000];
    &#160;</pre>
                </div>
                <p>However, where the <span class="Param">oid</span> is a user-defined structure and must be inserted or updated explicitly by the application, the <span class="Param">auto_oid</span> is an 8-byte unique identifier generated by the runtime and inserted automatically when database objects are created. This <span class="Param">auto_oid</span> is a global object identifier used by the runtime during <span class="Param">BSE</span> load operations and to perform synchronization in <i>e</i>X<i>treme</i>DB<i> High Availability</i> applications.  (Note that the internal format of the <span class="Param">auto_oid</span> is not published and there are no interface functions to create or modify an <span class="Param">auto_oid</span> directly.)</p>
                <p>Note:	The “number of expected objects” specified in the <span class="Param">oid</span> and <span class="Param">auto_oid</span> declaration need not be precise. This estimate simply initializes the hash table used for the internal hash index associated with them and this table size will be increased automatically by the runtime if necessary.</p>
                <h2>List declaration</h2>
                <p>Each <code>list</code> declaration will create an additional dynamic structure, which will consume resources similar to those taken by a tree index.  The <code>list</code> declaration is useful when:</p>
                <ul>
                    <li value="1">objects of a class have to be accessed sequentially</li>
                    <li value="2">the application does not require any particular order in which objects are accessed</li>
                    <li value="3">there is no suitable index for the class</li>
                </ul>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>