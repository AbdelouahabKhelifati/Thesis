<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Static API|Uniform Database Access (UDA)">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>mco_uda_register_udf</title>
        <link href="../../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>mco_uda_register_udf</h1>
            <blockquote>
                <p>Register user-defined functions.</p>
            </blockquote>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    MCO_RET mco_uda_register_udf(	/*IN*/ const mco_metadict_header_t * metadict, 
                     /*IN*/ unsigned short dict_no,
                     /*IN*/ unsigned short struct_no, 
                     /*IN*/ unsigned short index_no,
                     /*IN*/ mco_userdef_funcs_h udf_map,
                     /*IN*/ mco_uda_userdef_funcs_h udf_entry,
                     /*IN*/ void *user_context );
&#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 77px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">metadict</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The address of an initialized <a href="../../../Structures/Metadict.htm">mco_metadict_header_t</a> structure</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>dict_no</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The number of the dictionary (must be between 0 and <a href="metadict_count.htm"><code>mco_metadict_count()</code></a> - 1)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>struct_no</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The structure/class number (must be between 0 and <code><a href="dict_struct_count.htm">mco_dict_struct_count()</a></code> - 1)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>index_no</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The index number (must be between 0 and <code><a href="../../../Structures/Dict_Struct.htm">struct_info.index_count</a></code> - 1)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>udf_map</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>A pointer to the memory buffer allocated to store user-defined functions. (Note that it must be the same for all registered UDFs)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>udf_entry</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The user-defined function</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">
                            <p>user_context</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>The application-specific data passed into the user-defined compare functions</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <p style="text-indent: 0.5in;"><a name="kanchor210"></a>Registers user-defined functions with the database runtime.</p>
            <h3>Return Codes</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 185px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><a name="kanchor211"></a>MCO_E_UDA_DICT_NOTFOUND</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Invalid <code>dict_no</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">MCO_E_UDA_STRUCT_NOTFOUND</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Invalid <code>struct_no</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">MCO_E_UDA_STRUCT_NOT_CLASS</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The <code>struct_no</code> is not a class</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_UDA_INDEX_NOTFOUND</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Invalid <code>index_no</code></p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">
                            <p>MCO_E_UDA_INDEX_NOT_USERDEF</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>The index referenced by <code>index_no</code> is not a user-defined index</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Example</h3>
            <div class="code-block"><pre>&#160;
    Application snippet:
        
    &#160;
    const char * dbname = "SimpleDb";
    ...
    /* User-defined compare &amp; hash functions */
    int2 cmp_obj_obj(mco_uda_object_handle_p obj1, unsigned short index1, 
        mco_uda_object_handle_p obj2, unsigned short index2, void *param_)
    {
        mco_uda_value_t val1, val2;
        char buf1[20], buf2[20];
        userdef_param_t *param = (userdef_param_t *) param_; /* Get context */
    &#160;
        /* Get first object's value */
        val1.type = MCO_DD_STRING;
        val1.v.p.size = sizeof(buf1);
        val1.v.p.p.c = buf1;
        mco_uda_get(obj1, param-&gt;fld_no, index1, &amp;val1);
        /* Get second object's value */
        val2.type = MCO_DD_STRING;
        val2.v.p.size = sizeof(buf2);
        val2.v.p.p.c = buf2;
        mco_uda_get(obj2, param-&gt;fld_no, index2, &amp;val2);
&#160;
        /* Compare values */
        return STR_CMP(buf1, buf2);
    }
&#160;
    int2 cmp_obj_ext(mco_uda_object_handle_p obj, unsigned short index, 
        mco_uda_value_t *keys, uint2 keys_count, void *param_)
    {
        mco_uda_value_t val;
        char buf[20];
        userdef_param_t *param = (userdef_param_t *) param_;
    &#160;
        /* Get object's value */
        val.type = MCO_DD_STRING;
        val.v.p.size = sizeof(buf);
        val.v.p.p.c = buf;
        mco_uda_get(obj, param-&gt;fld_no, index, &amp;val);
    &#160;
        /* Compare object's value and external key */
        return STR_CMP(buf, keys[0].v.p.p.c);
    }
&#160;
    uint4 hash_obj(mco_uda_object_handle_p obj, unsigned short index, void *param_)
    {
        mco_uda_value_t val;
        char buf[20];
        userdef_param_t *param = (userdef_param_t *) param_;
    &#160;
        /* Get object's value */
        val.type = MCO_DD_STRING; 
        val.v.p.size = sizeof(buf);
        val.v.p.p.c = buf;
        mco_uda_get(obj, param-&gt;fld_no, index, &amp;val);
    &#160;
        /* Hash value */
        return strlen(buf);
    }
&#160;
    uint4 hash_ext(mco_uda_value_t *keys, uint2 keys_count, void *param)
    {
        /* Hash external key */
        return strlen(keys[0].v.p.p.c);
    }
    &#160;
    &#160;
    int main(int argc, char* argv[])
    {
        MCO_RET rc;
        mco_runtime_info_t info;
        unsigned int dict_no = 0;
        unsigned int record_no = 1;
        unsigned int tdudf_no = 2;
        unsigned short name_no = 1;
        mco_metadict_header_t *header;
        unsigned int udf_map_size;
        mco_userdef_funcs_h udf_map;
        mco_uda_userdef_funcs_t udf_entry;
&#160;
        ...
        mco_runtime_start();
        mco_get_runtime_info(&amp;info);
        ...
        &#160;
        header = (mco_metadict_header_t *) malloc(size);
        mco_metadict_init(header, size); /* initialize the metadict */
        ...
        /* Allocate udfmap */
        mco_uda_get_udfmap_size(metadict, dict_no, &amp;udf_map_size);
        udf_map = (mco_userdef_funcs_h) malloc(udf_map_size);
        ...
        /* Register user-defined compare &amp; hash functions */
        udf_entry.fcomp     = cmp_obj_obj;
        udf_entry.fcomp_ext = cmp_obj_ext;
        udf_entry.fhash     = hash_obj;
        udf_entry.fhash_ext = hash_ext;
        ...
        param.fld_no = name_no; /* Will pass name_no to compare/hash functions */
        &#160;
        rc = mco_uda_register_udf(metadict, dict_no, record_no, tudf_no, udf_map, &amp;udf_entry, (void*) &amp;param);
        
        ...
    }
    &#160;
&#160;</pre>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>