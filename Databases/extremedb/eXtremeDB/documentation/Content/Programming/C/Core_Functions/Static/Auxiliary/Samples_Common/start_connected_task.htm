<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Static API|Auxiliary Interfaces|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>sample_start_connected_task</title>
        <link href="../../../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>sample_start_connected_task</h1>
            <p>Initialize the task descriptor and spawn a task (thread).</p>
            <h3>For an overview see page <a href="../Samples_Common.htm">Samples Helper Functions in C</a></h3>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    unsigned int sample_start_connected_task( /*IN*/ sample_task_t * descr,
                            /*OUT*/ sample_task_proc_t task, )
                            /*IN*/ const char * db_name,
                            /*IN*/ void * param )
&#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">descr</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The task descriptor to initialize:</p>
                            <div class="code-block"><pre>  &#160;
  typedef struct tag_sample_task 
  {
    void               * param;
    unsigned int         id;
    volatile int         stopped;
    const char         * db_name;
    mco_db_h             db_connection;
    sample_task_proc_t   proc;
    mco_thread_t       * t;
    &#160;
  } sample_task_t;
  &#160;</pre>
                            </div>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">task</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A pointer to the task (thread) procedure to start</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">db_name</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The name of the database </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">param </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">An optional parameter structure passed into the task descriptor <code>descr</code></td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <p>This function initializes the task descriptor by setting the thread procedure <code>proc</code>, the <code>db_name</code> and <code>param</code> elements, then calls <code>mco_create_thread()</code> to spawn the thread.</p>
            <h3>Return Codes</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 182px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">unsigned int</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">The value 1 if the thread was successfully started; otherwise zero</td>
                    </tr>
                </tbody>
            </table>
            <h3>Example</h3>
            <div class="code-block"><pre><a name="kanchor68"></a>    &#160;
    #include &lt;common.h&gt;
    #include &lt;transdb.h&gt;
    const char * db_name = "transdb";
    &#160;
    #define N_THREADS 2
    static sample_task_t tasks[N_THREADS];
    ...
    &#160;
    void task1( sample_task_t * descriptor )
    {
        MCO_RET rc;
        uint4 i;
        for (i = 0; i &lt; n_iterations; i++)
        {
            mco_trans_h t;
            A a;
            char tag[64];
            rc = mco_trans_start(descriptor-&gt;db_connection, MCO_READ_WRITE, MCO_TRANS_FOREGROUND, &amp;t);
            if ( MCO_S_OK == rc ) 
            {
                sprintf(tag, "Stream 1, rec %u\n", i);
                mem_write(tag);
                rc = A_new(t, &amp;a);
                rc = A_ui4_put(&amp;a, i);
                rc = A_tag_put(&amp;a, tag, strlen(tag));
                sample_sleep(nap_duration1);
                rc = mco_trans_commit(t);
            }
        }
    }
    &#160;
    int main(int argc, char* argv[])
    {
        MCO_RET rc;
        mco_db_h db;
        sample_memory_t dbmem;
&#160;
        mco_runtime_start();
        &#160;
        rc = sample_open_database( db_name, transdb_get_dictionary(), DATABASE_SIZE, CACHE_SIZE,
                    MEMORY_PAGE_SIZE, PSTORAGE_PAGE_SIZE, 1 + N_THREADS, &amp;dbmem );
        if ( MCO_S_OK == rc ) 
        {
            rc = mco_db_connect(db_name, &amp;db);
            if ( MCO_S_OK == rc ) 
            {
                sample_start_connected_task(&amp;tasks[0], task1, db_name, 0);
                ...
            }
        }
        ...
    }
    &#160;</pre>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>