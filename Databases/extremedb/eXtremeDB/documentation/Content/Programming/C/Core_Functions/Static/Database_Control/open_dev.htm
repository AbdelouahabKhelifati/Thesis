<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Static API|Database_Control">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>mco_db_open_dev</title>
        <link href="../../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <link href="../../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>mco_db_open_dev</h1>
            <blockquote>
                <p>Create a database on the specified device(s).</p>
            </blockquote>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    MCO_RET	mco_db_open_dev(	/*IN*/ const char * dbname,
                  /*IN*/ mco_dictionary_h dict,
                  /*IN*/ mco_device_t * devs,
                  /*IN*/ mco_size_t n_devs,
                  /*IN*/ mco_db_params_t * params );
&#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">dbname</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The name of the database to open. Taken from the <code>declare database <i>dbname</i></code> DDL statement. Note that the maximum database name length is 16 characters</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">dict</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A handle to the dictionary that was created by the <i>e</i>X<i>treme</i>DB schema compiler <code><a href="../../../../../Getting_Started/Package_Contents/mcocomp.htm">mcocomp</a></code>. Normally, this handle is passed in by <code><i>dbname</i>_get_dictionary()</code><![CDATA[

]]></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">devs</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Memory devices (array of <code>mco_device_t</code>)</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">n_devs</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Number of device specifications in array <code>devs</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">params</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">Database specification parameters</td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <blockquote>
                <p>This function creates the database <code>dbname</code> on the devices defined by <code>devs</code> according to the parameters specified in <code>params</code>. (See <span class="Param"><a href="../../../Structures/Memory_Devices.htm">mco_device_t</a></span> for detailed description of the memory device structure <code>devs</code> and <code><a href="../../../Structures/Database_Parameters.htm">mco_db_params_t</a></code> for the database parameters <code>params</code>.</p>
            </blockquote>
            <h3>Return Codes</h3>
            <table class="TableStyle-FunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../../../Resources/TableStyles/FunctionReference.css');" cellspacing="0">
                <col class="TableStyle-FunctionReference-Column-Column2" />
                <col class="TableStyle-FunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_S_OK</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The database was created/opened successfully</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_E_ILLEGAL_PARAM</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Illegal combination of database parameters. No memory segment for the database or no persistent or cache segments for the database</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_E_NOMEM</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Not enough memory allocated. (Eg. not enough memory to create indexes)</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_E_INSTANCE_DUPLICATE</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Duplicate db instance, i.e. attempt to open a database with the same name as a currently open database</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_E_SHM_ERROR</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">An error occurred when attempting to create, truncate or close a shared memory segment</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a name="kanchor333"></a>MCO_E_INMEM_ONLY_RUNTIME</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The database dictionary contains persistent objects but the application is linked with the in-memory runtime libraries</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_ERR_DB_NAMELONG</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Database name longer than 16 characters</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_E_DISK_INVALID_PARAM</td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Disk database creation parameters are invalid</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">MCO_E_DISK_ALREADY_OPENED</td>
                        <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">The disk device specified is already opened</td>
                    </tr>
                </tbody>
            </table>
            <h3>Example</h3>
            <p>The following example code demonstrates how to define the memory devices and database parameters and call <code>mco_db_open_dev()</code> for an <i style="font-weight: bold;">all-in-memory</i> database:</p>
            <div class="code-block"><pre>&#160;
    Application snippet:
        
    &#160;
    /* All-in-memory example */
    #define  DATABASE_SEGMENT_SIZE 16 * 1024 * 1024
    #define  MEMORY_PAGE_SIZE      128
    const char * dbname = "convdb";
    &#160;
    int main(int argc, char* argv[])
    {
        MCO_RET            rc;
        mco_device_t       dev;
        mco_db_params_t    db_params;
        &#160;
        mco_runtime_start();
&#160;
        /* setup memory device as a plain conventional memory region */
        dev.type       = MCO_MEMORY_CONV;              /* conventional mem. */
        dev.assignment = MCO_MEMORY_ASSIGN_DATABASE;   /* main database mem.*/
        dev.size       = DATABASE_SEGMENT_SIZE;              /* device size */
        dev.dev.conv.ptr = (void*)malloc( DATABASE_SEGMENT_SIZE );
        if( !dev.dev.conv.ptr ) exit;
        &#160;
        /* initialize and customize the database parameters */
        mco_db_params_init ( &amp;db_params );/* initialize with default values */
        db_params.mem_page_size      = MEMORY_PAGE_SIZE;    /* in-mem. part */
        db_params.disk_page_size     = 0;        /* disable disk operations */
        db_params.db_max_connections = 1;        /* total connections to db */
&#160;
        /* open a database on the device with given params */
        rc = mco_db_open_dev(dbname, convdb_get_dictionary(), &amp;dev, 1, &amp;db_params );
        
        ...
    }
        &#160;</pre>
            </div>
            <p>&#160;</p>
            <p>The next example code demonstrates how to define the memory devices and database parameters and call <code>mco_db_open_dev()</code> for a <i style="font-weight: bold;">persistent</i> database:</p>
            <div class="code-block"><pre>&#160;
    /* Persistent database example */
    #define  MEMORY_PAGE_SIZE      128
    #define  DISK_PAGE_SIZE        128
    #define  DB_LOG_TYPE	      REDO_LOG
    #define  REDO_LOG_SIZE	      ( 2 * 1024 * 1024 )
    const char * dbname = "diskdb";
    &#160;
    int main(int argc, char* argv[])
    {
        MCO_RET            rc;
        mco_device_t dev[4];
        mco_db_params_t db_params;
        &#160;
        dev[0].type = MCO_MEMORY_CONV;
        dev[0].assignment = MCO_MEMORY_ASSIGN_DATABASE;
        dev[0].size = DATABASE_SEGMENT_SIZE;
        &#160;
        dev[1].type = MCO_MEMORY_CONV;
        dev[1].assignment = MCO_MEMORY_ASSIGN_CACHE;
        dev[1].size = CACHE_SEGMENT_SIZE;
        &#160;
        dev[2].type = MCO_MEMORY_FILE;
        dev[2].assignment = MCO_MEMORY_ASSIGN_PERSISTENT;
        sprintf( dev[2].dev.file.name, FILE_PREFIX "%s.dbs", dbname );
        dev[2].dev.file.flags = MCO_FILE_OPEN_DEFAULT;
        &#160;
        dev[3].type = MCO_MEMORY_FILE;
        dev[3].assignment = MCO_MEMORY_ASSIGN_LOG;
        sprintf( dev[3].dev.file.name, FILE_PREFIX "%s.log", dbname );
        dev[3].dev.file.flags = MCO_FILE_OPEN_DEFAULT;
        &#160;
        /* allocate memory for the database and cache*/
        dev[0].dev.conv.ptr = (void*)malloc( DATABASE_SEGMENT_SIZE );
        if( !dev[0].dev.conv.ptr ) exit;
        dev[1].dev.conv.ptr = (void*)malloc( CACHE_SEGMENT_SIZE );
        if( !dev[1].dev.conv.ptr ) exit;
&#160;
        /* set default database parameters */
        mco_db_params_init ( &amp;db_params );
        &#160;
        /* customize the parameters */
        db_params.mem_page_size = MEMORY_PAGE_SIZE;
        db_params.disk_page_size = DISK_PAGE_SIZE;
        db_params.db_max_connections = 1;
        db_params.disk_max_database_size = MAXIMUM_DATABASE_SIZE;
        db_params.db_log_type = DB_LOG_TYPE;
        db_params.log_params.redo_log_limit = REDO_LOG_SIZE;
&#160;
&#160;
        rc = mco_db_open_dev( dbname , diskdb_get_dictionary(), dev, sizeof(dev)/sizeof(dev[0]), &amp;db_params );
        
        ...
    }
&#160;</pre>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>