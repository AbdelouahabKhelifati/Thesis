<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|Static API|Uniform Database Access (UDA)">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>mco_uda_pattern_search</title>
        <link href="../../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>mco_uda_pattern_search</h1>
            <blockquote>
                <p>Performs a database pattern search.</p>
            </blockquote>
            <h3>Prototype</h3>
            <div class="code-block"><pre>&#160;
    MCO_RET mco_uda_pattern_search(	/*IN*/ mco_trans_h t, 
                      /*IN*/ unsigned short struct_no, 
                      /*IN*/ unsigned short index_no,
                       /*IN*/ const mco_uda_value_t * keys, 
                      /*IN*/ unsigned short keys_count, 
                      /*INOUT*/ mco_cursor_t * cursor, 
                      /*INOUT*/ void * allocated_pattern ); 
&#160;</pre>
            </div>
            <h3>Arguments</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 77px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">t</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The transaction handle</td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>struct_no</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The structure/class number (must be between 0 and <code><a href="dict_struct_count.htm">mco_dict_struct_count()</a></code> - 1)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>index_no</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The index number (must be between 0 and <code><a href="../../../Structures/Dict_Struct.htm">struct_info.index_count</a></code> - 1)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>keys</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>An array of search keys</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>keys_count</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>The length of the search keys array</p>
                            <p>Note that the number of keys, their sequence and types must correspond to the DDL description for the index</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>cursor</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>A cursor handle</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">
                            <p>allocated_pattern</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>The search pattern</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Description</h3>
            <blockquote>
                <p>Performs a database pattern search.</p>
            </blockquote>
            <h3>Return Codes</h3>
            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 185px;" />
                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                <tbody>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><a name="kanchor523"></a>MCO_E_UDA_STRUCT_NOTFOUND</td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">Invalid <code>struct_no</code></td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_UDA_STRUCT_NOT_CLASS</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Invalid <code>struct_no</code> (not a class)</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_UDA_INDEX_NOTFOUND</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Invalid <code>index_no</code></p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                            <p>MCO_E_UDA_WRONG_KEY_NUM</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                            <p>Invalid <code>keys_count</code> value - doesn't match the index definition</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">
                            <p>MCO_E_UDA_WRONG_KEY_TYPE</p>
                        </td>
                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">
                            <p>Key type mismatch</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h3>Example</h3>
            <div class="code-block"><pre>&#160;
    Sample schema :
    &#160;
    class TestClass
    {
        string 		key;
        char&lt;20&gt; 	k2;
        int4 		k3;
        int4 		v1;
        &#160;
        tree &lt;key,k2,k3&gt; i1;
    };
    &#160;
    Application code snippet:
    &#160;
    MCO_RET psearch(mco_db_h db, char* pattern1, char* pattern2, int p3, mco_bool ignore_other_fields)
    {
        MCO_RET rc = MCO_S_OK;
        mco_trans_h trn;
        mco_cursor_t csr;
        mco_uda_object_handle_t obj;
        uint2 size1;
        uint4 bsize;
        char key[64], k2[64];
        int4 k3, v1;
        void * buf;
        mco_pattern_policy_t p;
        unsigned short s_no = get_struct_no("TestClass");
        unsigned short i_no = get_index_no(s_no, "i1");
        unsigned short f_no;
        mco_uda_value_t keys[3], value;
        &#160;
        /* Get memory for set of patterns */
        keys[0].type = MCO_DD_STRING;
        keys[0].v.p.p.c = pattern1;
        keys[0].v.p.len = (uint2)strlen(pattern1);
        keys[1].type = MCO_DD_CHAR;
        keys[1].v.p.p.c = pattern2;
        keys[1].v.p.len = (uint2)strlen(pattern2);
        &#160;
        keys[2].type = MCO_DD_INT4;
        keys[2].v.i4   = p3;
        mco_uda_pattern_size(metadict, 0, s_no, i_no, keys, 3, &amp;bsize);
        buf = malloc(bsize);
        &#160;
        /* start read-write transaction to change pattern policy */
        rc = mco_trans_start(db, MCO_READ_WRITE, MCO_TRANS_FOREGROUND, &amp;trn);
        if ( MCO_S_OK == rc ) 
        {
            mco_get_pattern_policy(trn, &amp;p);
            p.ignore_other_fields = ignore_other_fields; /* ignore fields other than char&lt;n&gt; or string */
            mco_set_pattern_policy(trn, &amp;p);
            rc = mco_uda_cursor(trn, s_no, i_no, &amp;csr);
            for (rc = mco_uda_pattern_search(trn, s_no, i_no, keys, 3, &amp;csr, buf);
                rc == MCO_S_OK; rc = mco_uda_pattern_next(trn, &amp;csr, buf))
            {
                mco_uda_from_cursor(trn, &amp;csr, &amp;test);
                /* Do something with the current UDA object */
                ...
            }
        }
    }
        &#160;
        &#160;
    int main(int argc, char** argv)
    {
        MCO_RET rc;
        ...
        char * pattern1 = "abc_1*";
        char * pattern2 = "??c_?2?";
        int    pattern3 = 1;
        ...
        rc = psearch(db, pattern1, pattern2, pattern3, MCO_NO);
        if (MCO_S_OK == rc) 
        {
            printf("\n\tStart search using all patterns and ignore other index components\n");
            psearch(db, pattern1, pattern2, pattern3, MCO_YES);
        }
        ...
    }
&#160;</pre>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>