<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The mco_seq_join_TYPE C Function</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The mco_seq_join_TYPE C Function</h1>
            <blockquote>
                <p>The <code>mco_seq_join_TYPE()</code> C function takes a <i>metaiterator</i> in input and produces the <i>result</i> sequence  of the same type. (This function is not to be confused with the generated </p>
                <p><code><i>CLASS_FIELD</i>_join()</code>  API!) </p>
                <p>The input <i>metaiterator</i> parameter is an "iterator of iterators", i.e. special kind of iterator which provides a way to concatenate multiple sequences by traversing its elements until it reaches the end of the sequence, then it takes the <i>next</i> iterator and iterates through it and so on.</p>
                <p>The <i>metaiterator</i> structure has the following form:</p>
                <div class="code-block"><pre>&#160;
    typedef struct mco_seq_meta_iterator_t_ 
    {
        mco_seq_meta_iterator_next_t next;
        mco_seq_meta_iterator_first_t first;
        mco_seq_iterator_t iterator; /* iterator initialized by call to next */
        void* user_data; /* user context can be provided through this field  */
    } mco_seq_meta_iterator_t, *mco_seq_meta_iterator_h;
            &#160;</pre>
                </div>
                <p>The intent of this function is to combine an <i>e</i>X<i>treme</i>DB record iterator (or cursor) with a sequence iterator since sequences are normal <i>e</i>X<i>treme</i>DB field types, i.e. a sequence field belongs to the record. For example, consider the following schema:</p>
                <div class="code-block"><pre>&#160;
    #define uint4 unsigned&lt;4&gt;
    #define MAX_SYMBOL_LEN 21
&#160;
    declare database stockdb;
    &#160;
    class Quote 
    {
        char&lt;MAX_SYMBOL_LEN&gt; symbol;
        sequence&lt;date asc&gt; day;
        sequence&lt;float&gt; price;
        &#160;
        unique tree&lt;symbol&gt; by_sym;
    };
    &#160;</pre>
                </div>
                <p>The sequence <i>price</i> specifies the price for a particular stock <i>Quote</i>. The <i>Quote</i> table has as primary key the index <i>by_sym</i> on field <i>symbol</i>. If one wishes to calculate the total <i>price</i> for all quotes, it would be necessary to iterate through all of the records in the <i>Quote</i> table, calculate the total price for each record using <code><a href="../Grand_Agg/Sum_Avg_Prd.htm">mco_seq_agg_sum_float()</a></code> on the sequence <i>price</i>, and then sum all of these results.</p>
                <p>The <code>mco_seq_join_TYPE()</code> API allows one to construct a <i>metaiterator</i> to perform this operation more efficiently. The <i>metaiterator</i> traverses the <i>Quote</i> table and returns sequence iterators for the <i>price</i> field. Then one can apply the <code>mco_seq_agg_sum</code>() to the <i>result</i> of <code>mco_seq_join_float()</code> to get the required total sum.</p>
                <p>Clearly this function requires some programming to implement the <i>metaiterator</i>. The following sample code demonstrates how to use <code>mco_seq_join_float()</code> and <code>mco_seq_agg_max_float()</code> to obtain the maximum <i>low</i> for all quotes. We will use a more realistic Quote table:</p>
                <div class="code-block"><pre>&#160;
    #define uint4 unsigned&lt;4&gt;
    #define MAX_SYMBOL_LEN 21
    &#160;
    declare database stockdb;
    &#160;
    class Quote 
    {
        char&lt;MAX_SYMBOL_LEN&gt; symbol;
        sequence&lt;date asc&gt; day;
        sequence&lt;float&gt; low;
        sequence&lt;float&gt; high;
        sequence&lt;float&gt; open;
        sequence&lt;float&gt; close;
        sequence&lt;uint4&gt; volume;
        sequence&lt;char&lt;15&gt;&gt; day_str;
        &#160;
        unique tree&lt;symbol&gt; by_sym;
    };
            &#160;</pre>
                </div>
                <p>The application specific <code>user_data</code> is provided to the <i>metaiterator</i> using the following structure:</p>
                <div class="code-block"><pre>&#160;
    typedef struct quote_low_dsc_t
    {
        mco_trans_h trans; // Transaction handle
        mco_cursor_t quote_cursor; // Cursor for Quote records
        Quote quote; // Current Quote record
    } quote_low_dsc;
    &#160;</pre>
                </div>
                <p>The <i>metaiterator</i>'s <code>first</code> and <code>next</code> functions are implemented as follows:</p>
                <div class="code-block"><pre>&#160;
    MCO_RET join_low_first(mco_seq_meta_iterator_h meta_iterator)
    {
        quote_low_dsc *ud = (quote_low_dsc *)meta_iterator-&gt;user_data;
        MCO_RET rc = mco_cursor_first(ud-&gt;trans, &amp;ud-&gt;quote_cursor);
        if (rc != MCO_S_OK)
            return rc;
        CHECK(Quote_from_cursor(ud-&gt;trans, &amp;ud-&gt;quote_cursor, &amp;ud-&gt;quote));
        CHECK(Quote_low_iterator(&amp;ud-&gt;quote, &amp;meta_iterator-&gt;iterator));
        return MCO_S_OK;
    }
&#160;
    MCO_RET join_low_next(mco_seq_meta_iterator_h meta_iterator)
    {
        quote_low_dsc *ud = (quote_low_dsc *)meta_iterator-&gt;user_data;
        MCO_RET rc = mco_cursor_next(ud-&gt;trans, &amp;ud-&gt;quote_cursor);
        if (rc != MCO_S_OK)
            return rc;
        CHECK(Quote_from_cursor(ud-&gt;trans, &amp;ud-&gt;quote_cursor, &amp;ud-&gt;quote));
        CHECK(Quote_low_iterator(&amp;ud-&gt;quote, &amp;meta_iterator-&gt;iterator));
        return MCO_S_OK;
    }
    &#160;</pre>
                </div>
                <p>Now the function join() initializes the <i>metaiterator</i> and the Quote <i>cursor</i>, then calls <code>mco_seq_join_float()</code> to obtain a sequence of all of the <i>low</i> sequence elements for all <i>Quote</i> records. Then the maximum value is extracted from the <i>result</i> of calling <code>mco_seq_agg_max_float()</code> with the combined <i>low</i> sequences:</p>
                <div class="code-block"><pre>    &#160;
    void join(mco_db_h db)
    {
        mco_seq_iterator_t all_low_it;
        mco_seq_iterator_t min_low_it;
        mco_seq_iterator_t count_low_it;
        mco_seq_meta_iterator_t low_meta_it;
        MCO_RET rc;
        float min_low;
        quote_low_dsc muluser_data;
&#160;
        CHECK(mco_trans_start(db, MCO_READ_ONLY, MCO_TRANS_FOREGROUND, &amp;user_data.trans));
        printf("--- JOIN --------------------\n");
        &#160;
        /* Initialize the metaiterator */
        low_meta_it.next = join_low_next;
        low_meta_it.first = join_low_first;
        low_meta_it.user_data = &amp;user_data;
&#160;
        /* Initialize the cursor over all Quote objects */
        CHECK(Quote_by_sym_index_cursor(user_data.trans, &amp;user_data.quote_cursor));
&#160;
        CHECK(mco_seq_join_float(&amp;all_low_it, &amp;low_meta_it));
&#160;
        /* now all_low_it is a sequence which consists of all low sequences 
          for all Quote objects */
&#160;
        CHECK(mco_seq_agg_max_float(&amp;min_low_it, &amp;all_low_it));
        CHECK(mco_seq_next_float(&amp;min_low_it, &amp;min_low));
&#160;
        printf("Maximum of lows: %g\n", min_low);
&#160;
        CHECK(mco_trans_commit(user_data.trans));
    }
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>