<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Java API|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title> Java Schema Definition</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1> Java Schema Definition</h1>
            <blockquote>
                <p>Java applications define the database classes to be managed in the <i>e</i>X<i>treme</i>DB<a name="kanchor270"></a> runtime using native Java class syntax applying special <i>annotations</i>. </p>
                <p>For example, the following code snippet would define a database with two classes Department and Employee:</p>
                <div class="code-block"><pre>&#160;
    @Persistent()
    class Department
    {
        @Indexable(Type = Database.IndexType.BTree, Unique = true)
        public String code;
        public String name;
        @Indexable(Type = Database.IndexType.Hashtable, Unique = true)
        public int dept_no;
    }
    &#160;
    @Index("byDept_EmployeeName", Keys = new string[] { "dept_no", "name" }, Unique = false)
    &#160;
    @Persistent()
    class Employee
    {
        @Indexable(Type = Database.IndexType.BTree, Unique = true)
        public String  name;
        public int  dept_no;
    }
    &#160;</pre>
                </div>
                <p>Note that the <i>annotations</i> <code>@Persistent()</code>, <code>@Indexable()</code>and <code>@Index()</code> are used to specify the classes and indexes to be generated and maintained in the database.</p>
                <h2><i>e</i>X<i>treme</i>DB JNI&#160;Database Annotations</h2>
                <p>The <i>annotations</i> that are recognized as <i>e</i>X<i>treme</i>DB database specifications are as follows:</p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/FunctionReference.css');" class="TableStyle-FunctionReference" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Persistent</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Class</b> annotation: Marks this class as “<i>stored in the database</i>” and optionally provides some attributes of this class; </p>
                                <table class="TableStyle-IndentedFunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/IndentedFunctionReference.css');" cellspacing="0">
                                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                                    <tbody>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p><code><a name="kanchor271"></a>Persistent(autoid=true)</code>
                                                </p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p>Creates an <code>autoid</code> index</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p>Persistent(list=true)</p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p>Creates a list index
</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p>Persistent(large=true)</p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p>Declares the standard storage model (default)
</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p>Persistent(compact=true) </p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p>Declares the <a href="../C/DDL/Class.htm">compact</a> storage model
</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p>Persistent(inmemory=true)</p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p> Declares this class as in-memory (default)</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1">
                                                <p>Persistent(disk=true)</p>
                                            </td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">
                                                <p>Declares this class as disk-based (i.e on persistent storage media)</p>
                                            </td>
                                        </tr>
                                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1">Persistent(local=true)</td>
                                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">Declares this class as <code>local</code> for <i>e</i>X<i>treme</i>DB<i> High Availability</i> <a href="../../Users_Guides/HA/HA_Implementation_Details.htm">partial replication</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                                <p>Index</p>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Class</b> annotation: Defines a compound (multi-field) index; possible properties are:</p>
                                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                    <col class="TableStyle-FunctionReference-Column-Column2" />
                                    <col class="TableStyle-FunctionReference-Column-Column2" />
                                    <tbody>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">name="indexName"</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Identifies this index</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">keys={Key(“field1”)  [, Key(“field2”) …] }</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">List of key fields</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">unique=true</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates a b-tree index (the default), true enforces uniqueness; if <code>false</code> allows duplicates</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">thick=true</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Optimized for a large number of duplicates</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">descending=true</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Indexes are <code>ascending</code> by default</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">initSize=N</td>
                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">For hash indexes; <code>N</code> is the initial size of the hash table</td>
                                        </tr>
                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">type=Database.IndexType.BTree</td>
                                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">
                                                <p>  Possible <code>Database.IndexType</code> values are:</p>
                                                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                                    <col class="TableStyle-FunctionReference-Column-Column2" />
                                                    <col class="TableStyle-FunctionReference-Column-Column2" />
                                                    <tbody>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">BTree</td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates a <code>tree</code> index (the default)</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Hashtable </td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates a <code>hash</code> index</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Patricia</td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates a <code>patricia</code> index</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">RTree</td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates an <code>rtree</code> index</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">RTreeOfPoint</td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates an <code>rtree</code> index</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">KDTree</td>
                                                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creates a <code>kdtree</code> index</td>
                                                        </tr>
                                                        <tr class="TableStyle-FunctionReference-Body-Body1">
                                                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">Trigram</td>
                                                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">Creates a <code>trigram</code> index</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <p>for example:</p>
                                <div class="code-block"><pre>&#160;
    @Index(name="byName", keys={ Key("lastName"), Key("firstName") }, unique=true )
    &#160;
    class Employee
    {
        String  firstName;
        String  lastName;
        Address address;
        long    salary;
    }
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Indexable</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><b>Field</b> annotation: Specifies an index on the following field. The index will have the same name as the field. With the exception of <code>name</code> and <code>keys</code> properties, the possible  properties are the same as for class attribute <code>Index</code> (above).<p>for example</p><div class="code-block"><pre>&#160;
    class Obj
    {
        @Indexable(Type=Database.IndexType.BTree, Unique=true)
        public int value;
    }
    &#160;</pre></div></td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Encoding</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Specifies the encoding of string fields.  Can be any valid encoding supported by the Java runtime.  <code>UTF-8</code> is the default. Examples:
	</p>
                                <div class="code-block"><pre>    &#160;
    @Encoding("UTF-16")
    String s1;
    @Encoding("ASCII")
    String s2;
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Blob</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Uses <i>e</i>X<i>treme</i>DB BLOB type for storing a byte array; for example:</p>
                                <div class="code-block"><pre>&#160;
    @Blob 
    byte photo[];
&#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Dimension</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Specifies the dimension for fixed size arrays (char, scalar)
An array without a dimension will be treated  as a <code>vector</code> (dynamic array).
	Example:
		</p>
                                <div class="code-block"><pre>    &#160;
    @Dimension(8)    
    String prefix;

		
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Numeric</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Specifies the width and precision for decimal fields.
	Example:
		</p>
                                <div class="code-block"><pre>    &#160;
    @Numeric(12,3)   
		
    decimal d;
// Equivalent to decimal&lt;12,3&gt; d;
		
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Binary</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Specifies a fixed length Binary field.
	Example:
		</p>
                                <div class="code-block"><pre>    &#160;
    @Binary(100)   
		
    byte[] dim100_binary;
// A Binary array of 100 bytes
		
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Varbinary</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Specifies a variable length Binary field.
	Example:
</p>
                                <div class="code-block"><pre>    &#160;
    @Varbinary    
		
    byte[] var_binary;
// A Binary vector (dynamic array)		
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Nullable</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><b>Field</b> annotation: Specifies that this field can be null.
	Example:
		<div class="code-block"><pre>    &#160;
    @Nullable    
		
    bool isALive; // Explicitly declared nullable field
    &#160;</pre></div></td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">OptionalStruct</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Defines a structure field as optional; for example:</p>
                                <div class="code-block"><pre>    &#160;
    @OptionalStruct
    NestedStruct opt_nested; // optional NestedStruct opt_nested;
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">References</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p><b>Field</b> annotation: Used to declare a field of type <code>ref</code> which refers to a Class in the schema; for example:</p>
                                <div class="code-block"><pre>    &#160;
    @References(ClassA.class)]
    long a;
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">Sequence</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">
                                <p><b>Field</b> annotation: Used to declare a field of type <code>sequence</code>; for example:</p>
                                <div class="code-block"><pre>    &#160;
    @Sequence(type=Sequence.Type.UInt8)
    OrderedSequence stamp;
    &#160;</pre>
                                </div>
                                <p>Note that when an <code>OrderedSequence</code> is declared the default  order is <code>Ascending</code>. The default can be overwritten explicitly:</p>
                                <div class="code-block"><pre>    &#160;
    @Sequence(order=Sequence.Order.Descending, type=Sequence.Type.UInt8)
    OrderedSequence stamp;
    &#160;</pre>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>