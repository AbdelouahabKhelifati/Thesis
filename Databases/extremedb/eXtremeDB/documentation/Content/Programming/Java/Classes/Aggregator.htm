<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Java API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The Java Aggregator Class </title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The Java  <i>Aggregator</i>  Class </h1>
            <p><i>Aggregator </i> is used to perform aggregation. Grouping and aggregation is done using two interfaces <i>Aggregate</i> and <i>GroupBy</i>. There are some predefined implementations for standard aggregates: max, min, sum, avg, count, etc. And it is possible to define user-defined aggregates. The <i>GroupBy</i> interface should be implemented by the developer (it is convenient to use anonymous classes) and defines aggregation for queries; i.e. how to split input data into groups that aggregate for the calculations.</p>
            <h3>For an overview see page <a href="../Java_Classes.htm">Java Classes</a></h3>
            <p><i>Aggregator</i> uses a map to associate aggregate states with groups. This map is returned as the result of aggregation. <i>Aggregator</i> can use an ordered or unordered map (i.e a <i>TreeMap</i> or <i>HashMap</i>). An ordered map returns results in ascending order of the group-by values. For example, consider the table:</p>
            <div class="code-block"><pre>&#160;
    class Quote 
    {
                @Indexable
                public long  date;
                public float open;
        public float close;
                public float low;
        public float high;
        public int   volume;
    };
    &#160;</pre>
            </div>
            <p>Now to execute a query like "select  standard deviation of difference between low and high prices for IBM for each month since 1990", we would implement code like the following:</p>
            <div class="code-block"><pre>&#160;
    Cursor&lt;Quote&gt; cursor = new Cursor&lt;Quote&gt;(con, Quote.class, "date");
         if (cursor.search(Operation.GreaterOrEquals, (new Date(1990, 0, 1)).getTime())) 
    {
                Map&lt;Object,Aggregator.Aggregate&gt; result = Aggregator.&lt;Quote&gt;aggregate(cursor,
                                    new Aggregator.GroupBy&lt;Quote&gt;() 
        {
                        public Aggregator.Aggregate getAggregate() 
            { 
                return new Aggregator.DevAggregate(); 
            }
            public Object getKey(Quote quote) 
            { 
                return (new Date(quote.date)).getMonth(); 
            }
            public Object getValue(Quote quote) 
            { 
                return quote.high - quote.low; 
            }
            public Aggregator.FilterResult filter(Quote quote) 
            { 
                return Filter.Use; 
            }
        }, true);
        &#160;
        for (Map.Entry&lt;Object,Aggregator.Aggregate&gt; pair : result.entrySet()) 
        {
                        System.out.println("Group " + pair.getKey() + "-&gt;" + pair.getValue().result());
        }
    }
    &#160;</pre>
            </div>
            <p>&#160;</p>
            <h2>Class Definition</h2>
            <div class="code-block"><pre>&#160;
    public  class Aggregator
    {
        ...
        public enum FilterResult 
        {
            Use,
            Skip,
            Stop
        };
        &#160;
        public interface Aggregate&lt;T&gt; {…}
        &#160;
        public interface GroupBy&lt;T&gt; {…}
&#160;
        public static &lt;T&gt; Map&lt;Object,Aggregate&gt; ...  {…}
&#160;
        public static void merge(Map&lt;Object,Aggregate&gt; dst, Map&lt;Object,Aggregate&gt; src) {…}
&#160;
        public static class TopAggregate implements Aggregate&lt;Comparable&gt; {…}
        &#160;
        public static class MaxAggregate implements Aggregate&lt;Comparable&gt; {…}
        &#160;
        public static class MinAggregate implements Aggregate&lt;Comparable&gt; {…}
        &#160;
        public static class RealSumAggregate implements Aggregate&lt;Number&gt; {…}
        &#160;
        public static class IntegerSumAggregate implements Aggregate&lt;Number&gt; {…}
        &#160;
        public static class AvgAggregate implements Aggregate&lt;Number&gt; {…}
        &#160;
        public static class PrdAggregate implements Aggregate&lt;Number&gt; {…}
        &#160;
        public static class VarAggregate implements Aggregate&lt;Number&gt; {…}
        &#160;
        public static class DevAggregate extends VarAggregate {…}
        &#160;
        public static class CountAggregate implements Aggregate {…}
        &#160;
        public static class DistinctCountAggregate implements Aggregate {…}
        &#160;
        public static class RepeatCountAggregate implements Aggregate {…}
        &#160;
        public static class ApproxDistinctCountAggregate implements Aggregate {…}
        &#160;
        public static class FirstAggregate implements Aggregate {…}
        &#160;
        public static class LastAggregate implements Aggregate {…}
        &#160;
        public static class CompoundAggregate implements Aggregate {…}
        &#160;
    };
    &#160;</pre>
            </div>
            <h2>  Methods</h2>
            <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                <col class="TableStyle-FunctionReference-Column-Column2" style="width: 89px;" />
                <col class="TableStyle-FunctionReference-Column-Column2" style="width: 376px;" />
                <tbody>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>enum <b>FilterResult </b></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                            <p>Enumerated constants used to control filtering of query results:</p>
                            <div class="code-block"><pre>  &#160;
  public enum FilterResult 
  {
    Use,
    Skip,
    Stop
  };
  &#160;</pre>
                            </div>
                        </td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><b>Aggregate</b>&lt;T&gt;</code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Implemented by all standard aggregates and can be used to define custom aggregates</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><b>GroupBy</b>&lt;T&gt;</code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Used to specify the aggregation operation</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                            <p><code>&lt;T&gt; <b>Map</b>&lt;Object,Aggregate&gt;</code>
                            </p>
                            <p>aggregate(Iterable&lt;T&gt; iterable, </p>
                            <p>GroupBy&lt;T&gt; groupBy)</p>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                            <p>Performs the aggregation;
Parameters:</p>
                            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                                <tbody>
                                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><code>iterable </code>
                                        </td>
                                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A collection of the aggregated objects</td>
                                    </tr>
                                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1"><code>groupBy </code>
                                        </td>
                                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">The aggregation operation</td>
                                    </tr>
                                </tbody>
                            </table>
                            <p>Returns: a map with the results of aggregation: &lt;group-by,aggregate-value&gt; pairs
</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                            <p><code>&lt;T&gt; <b>Map</b>&lt;Object,Aggregate&gt;</code>
                            </p>
                            <p>aggregate(Iterable&lt;T&gt; iterable, </p>
                            <p>GroupBy&lt;T&gt; groupBy, </p>
                            <p>boolean orderByKey)</p>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                            <p>Performs the aggregation;
Parameters:</p>
                            <table class="TableStyle-IndentedFunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                                <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                                <col class="TableStyle-IndentedFunctionReference-Column-Column2" />
                                <tbody>
                                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><code>iterable </code>
                                        </td>
                                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">A collection of the aggregated objects</td>
                                    </tr>
                                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                        <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1"><code>groupBy </code>
                                        </td>
                                        <td class="TableStyle-IndentedFunctionReference-BodyD-Column2-Body1">The aggregation operation</td>
                                    </tr>
                                    <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                                        <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1"><code>orderByKey</code>
                                        </td>
                                        <td class="TableStyle-IndentedFunctionReference-BodyA-Column2-Body1">Specifies whether an ordered map (<code>TreeMap</code>) should be used for grouping (the Group-by key should provide a comparison operation in this case)</td>
                                    </tr>
                                </tbody>
                            </table>
                            <p>Returns: a map with the results of aggregation: &lt;group-by,aggregate-value&gt; pairs
</p>
                        </td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                            <p><code>void <b>merge</b>(Map&lt;Object,Aggregate&gt; </code>
                            </p>
                            <p><code>dst, Map&lt;Object,Aggregate&gt; src)</code>
                            </p>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Merge two aggregation results. This method combines the state of aggregates in <code>dst</code> with the aggregate states in <code>src</code>; i.e. <code>dst = merge(dst, src)</code></td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1" colspan="2"><span style="font-size: 11pt; font-weight: bold;">Embedded Classes</span>
                        </td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/TopAggregate.htm">TopAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Aggregate returning the top <code>N</code> values</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/Max_MinAggregate.htm">MaxAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The maximum aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/Max_MinAggregate.htm">MinAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The minimum aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/Real_Integer_Sum_Aggregate.htm">RealSumAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The sum aggregate for real values</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/Real_Integer_Sum_Aggregate.htm">IntegerSumAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The sum aggregate for integer values</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/AvgAggregate.htm">AvgAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The average aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/PrdAggregate.htm">PrdAggregate</a> <![CDATA[ ]]></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The product aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/VarAggregate.htm">VarAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The variance aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/DevAggregate.htm">DevAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The standard deviation aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/CountAggregate.htm">CountAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The "count all" aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/DistinctCountAggregate.htm">DistinctCountAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The "distinct count" aggregate (note that this method can have a large memory footprint)</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/RepeatCountAggregate.htm">RepeatCountAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Counts the number of items repeated N or more times </td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/ApproxDistinctCountAggregate.htm">ApproxDistinctCountAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The approximate "distinct count" aggregate (note that this is not a precise result)</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/First_LastAggregate.htm">FirstAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The first group element aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/First_LastAggregate.htm">LastAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The last group element aggregate</td>
                    </tr>
                    <tr class="TableStyle-FunctionReference-Body-Body1">
                        <td class="TableStyle-FunctionReference-BodyB-Column2-Body1"><code><a href="Embedded_Classes/Embedded_Aggragate_Classes/CompoundAggregate.htm">CompoundAggregate</a></code>
                        </td>
                        <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">The compound aggregate: the combination of several aggregates (note that this can calculate more than one aggregate on one traversal)</td>
                    </tr>
                </tbody>
            </table>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>