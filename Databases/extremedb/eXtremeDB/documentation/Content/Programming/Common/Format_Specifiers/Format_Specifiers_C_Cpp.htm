<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|C++ API|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The C++ SQL Parameter Substitution Format Specifiers</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/IndentedFunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The C++ SQL Parameter Substitution Format Specifiers</h1>
            <blockquote>
                <p>When executing the <i>McoSqlEngine</i> methods <code>executeStatement()</code>, <code>executeQuery()</code> or prepare(), or the C API equivalents, the format specifiers for substituting variable values into the SQL string are defined in the sections below. The parameter substitution occurs wherever a per cent sign is followed by a specifier ("<code>%&lt;specifier&gt;</code>") in the SQL string argument.</p>
                <h2>executeStatement() and executeQuery()</h2>
                <p>The following table lists the allowable format specifiers for SQL statement arguments to the C++ <i>McoSqlEngine</i> methods <code>executeStatement()</code>and <code>executeQuery()</code>, or the C API equivalents <code>mcosql_execute_statement()</code> or <code>mcosql_execute_query()</code>:</p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" class="TableStyle-IndentedFunctionReference" cellspacing="0">
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 54px;" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 109px;" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-IndentedFunctionReference-Head-Header1">
                            <th class="TableStyle-IndentedFunctionReference-HeadE-Column1-Header1">Specifier</th>
                            <th class="TableStyle-IndentedFunctionReference-HeadE-Column2-Header1">C++ Type</th>
                            <th class="TableStyle-IndentedFunctionReference-HeadD-Column1-Header1">Meaning</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">b</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">bool</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Boolean value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">i</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">int</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Signed 32-bit integer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">u</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">unsigned int</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Unsigned 32-bit integer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">l</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">int64_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Signed 64-bit integer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">p</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">ref</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1"><i>e</i>X<i>treme</i>DB reference</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">f</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">double</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Double precision 64-bit floating point value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">time_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Date/Time</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">w</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">wchar_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Wide character string</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">s</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">char *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Multibyte character string</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">r</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a structure</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">R</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a fixed structure</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Indirect qualifier: used in conjunction with another type specifier to represent a pointer to a value of the specified type </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">v</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">Value</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Arbitrary value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1" style="text-align: center;">0-9</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column1-Body1">The element that corresponds to this index in the parameters array</td>
                        </tr>
                    </tbody>
                </table>
                <h3>Examples</h3>
                <p>1. Map all fields of the variable <code>c</code> of type <code>struct _Contribution</code> to the fields of table <i>Contribution</i>:</p>
                <div class="code-block"><pre>&#160;
    struct _Contribution
    {
        char const * name;
        uint4        date_val;
        uint4        amount;
    } c;
    ...
    executeStatement("insert into Contributions %r", c);
    &#160;</pre>
                </div>
                <p>2. Map variable <code>age</code> (int), <code>weight</code> (double) and <code>name</code> (char*) to the corresponding columns of the <i>Person</i> table:</p>
                <div class="code-block"><pre>&#160;
    executeStatement("update Person set age=%i, weight=%f where name=%s", age, weight, name);
&#160;</pre>
                </div>
                <p>3) Map variable <code>cutoff_date</code> (date) to the where clause of a query <code>select</code> statement:</p>
                <div class="code-block"><pre>&#160;
    executeQuery("select * from Person where date_of_birth &gt; %t", cuttoff_date);.
    &#160;</pre>
                </div>
                <p>4) Using the C API, map variables <code>salary</code> (unsigned int), <code>rating</code> (double) and <code>name</code> (char*) to an update statement:</p>
                <div class="code-block"><pre>&#160;
    mcosql_execute_statement(sql_db, NULL, &amp;rc, 
        "update Person set salary=%u, rating=%f where name=%s",
        salary, rating, name );
        &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>prepare()</h2>
                <p>For prepared statements the allowable format specifiers are slightly different than those listed above. The following table lists the allowable format specifiers for SQL statement arguments to the C++ <i>McoSqlEngine</i> method <code>prepare()</code> or the C API equivalent <code>mcosql_prepare_statement()</code>:</p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/IndentedFunctionReference.css');" class="TableStyle-IndentedFunctionReference" cellspacing="0">
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" style="width: 54px;" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column2" style="width: 109px;" />
                    <col class="TableStyle-IndentedFunctionReference-Column-Column1" />
                    <thead>
                        <tr class="TableStyle-IndentedFunctionReference-Head-Header1">
                            <th class="TableStyle-IndentedFunctionReference-HeadE-Column1-Header1">Specifier</th>
                            <th class="TableStyle-IndentedFunctionReference-HeadE-Column2-Header1">C++ Type</th>
                            <th class="TableStyle-IndentedFunctionReference-HeadD-Column1-Header1">Meaning</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">b</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">bool</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Boolean value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">h</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">int2</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Integer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">i&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">int</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Signed  integer with width=N: 1, 2, 4 or 8</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">u&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">unsigned int</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Unsigned integer with width=N: 1, 2, 4 or 8</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #ff4500;"><span style="color: #000000;">l</span>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #000000;">int64_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #000000;">Signed 64-bit integer </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #000000;">p</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #000000;">ref</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #000000;"><i>e</i>X<i>treme</i>DB reference</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">f</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">double</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Double precision 64-bit floating point value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">time_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Date/Time</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">w</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">wchar_t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Wide character string</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">s</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">char **</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a char pointer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">S</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">char *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a char array</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">r</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Struct mapped to the record (record fields with string type should have type <code>char*</code>)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">R</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Struct mapped to the record (record fields with <code>char&lt;N&gt;</code> type should have type <code>char[N]</code>)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #000000;">*b</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #000000;">bool *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #000000;">Pointer to a bool </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #ff4500;"><span style="color: #000000;">*h</span>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #ff4500;"><span style="color: #000000;">int2*</span>
                            </td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #ff4500;"><span style="color: #000000;"><span style="color: #c0c0c0;"><span style="color: #a9a9a9;"><span style="color: #808080;">Signed </span></span></span></span><code style="color: #808080;">int*</code><span style="color: #000000;"><span style="color: #c0c0c0;"><span style="color: #a9a9a9;"><span style="color: #808080;"> with width=2</span></span></span></span>
                            </td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*i&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">int *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Signed <code>int*</code> with width=N: 1, 2, 4 or 8</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*u&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">unsigned int *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Unsigned <code>int*</code> with width=N: 1, 2, 4 or 8</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #000000;">*l</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #000000;">int64_t *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #000000;">Signed 64-bit integer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;color: #000000;">*p</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1" style="color: #000000;">ref *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1" style="color: #000000;"><i>e</i>X<i>treme</i>DB reference</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*f</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">double*</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a double precision 64-bit floating point value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*t</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">time_t*</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a Date/Time</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*s</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">char**</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a char pointer</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*w</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">wchar_t**</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a wide character string</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">*W</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">char *</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a fixed size unicode string</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">A&lt;N,S&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Array: passed as a C-style array. Arguments: N=number of elements, S=size of elements</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">I&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Array of signed integers: N=number of elements</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">U&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Array of unsigned integers: N=number of elements</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">F&lt;N&gt;</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Array of float or double depending on N which can be 4 (float) or 8 (double)</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">L</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Integer value passed as a double</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column1-Body1" style="text-align: center;">v</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyE-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyD-Column1-Body1">Pointer to a McoSql::Value</td>
                        </tr>
                        <tr class="TableStyle-IndentedFunctionReference-Body-Body1">
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column1-Body1" style="text-align: center;">%</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyB-Column2-Body1">-</td>
                            <td class="TableStyle-IndentedFunctionReference-BodyA-Column1-Body1">The percent symbol</td>
                        </tr>
                    </tbody>
                </table>
                <h3>Example</h3>
                <div class="code-block"><pre>&#160;
    PreparedStatement pStmt = PreparedStatement();
    char * name = “Michael”;
&#160;
    engine.prepare(pStmt, "select * from Person where name like %s", name));
            
    &#160;
    QueryResult result( engine.executePreparedQuery(pStmt);
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>