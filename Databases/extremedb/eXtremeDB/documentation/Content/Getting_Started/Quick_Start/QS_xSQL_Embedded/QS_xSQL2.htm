<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Getting Started with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Step 2: Executing commands and scripts</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Step 2: Executing commands and scripts</h1>
            <blockquote>
                <h1>Executing basic <i>xSQL</i> commands and scripts</h1>
                <p>As mentioned in <a href="QS_xSQL1.htm">Step 1</a>, <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> can be started in server or client mode. For the next group of exercises we will start <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> by simply typing <code>xsql</code> from directory <code>target\bin</code>:</p>
                <div class="code-block"><pre><a name="kanchor500"></a><a name="kanchor501"></a><a name="kanchor502"></a>&#160;
    xsql
    &#160;
    Simple interactive configuration is started
    To run as a server, type, for example: 'xsql -size 100m -p 5000'
    Then to connect as a client, use 'xsql @127.0.0.1:5000'
    Type 'xsql -h' for more details
    &#160;
    xsql started
    Runtime configuration
     Transaction manager  : MURSIW
     Storage (transient)  : Conventional memory, 100M
     Storage (persistent) : Not supported
     Runtime              : Release
    XSQL&gt;
    &#160;</pre>
                </div>
                <h2>Executing SQL statements </h2>
                <p>To execute SQL statements interactively simply type the statement followed by a semicolon. For example, the following <span class="Param">select</span> statement queries the system table <code>Metatable</code> to show that there are as yet no tables in the database:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;select TableName from Metatable;
    TableName
    ------------------------------------------------------------------------------
    &#160;
    Selected records: 0
    XSQL&gt;
    &#160;</pre>
                </div>
                <p>So to create and initialize a table we might enter statements like the following:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;create table t(id int);
    XSQL&gt;insert into t values( [1,2,3] );
    XSQL&gt;select * from t;
    id
    ------------------------------------------------------------------------------
    1
    2
    3
    &#160;
    Selected records: 3
    XSQL&gt;
    &#160;</pre>
                </div>
                <h2>Executing script files</h2>
                <p>But rather than type SQL statements interactively, it is often more convenient to read SQL script files into <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> to  preform SQL operations. To facilitate this exercise, several scripts and additional files are provided in the directory <code>\samples\xsql\scripts</code>.</p>
                <p>For example, the script in file <code>compound.sql</code> creates the simple table <code>A</code> and index <code>idx</code>,  populates the table and performs a compound query and then executes the explain command to display the execution plan:</p>
                <div class="code-block"><pre>&#160;
    create table A (a int, b int, c int, d int);
    create index idx on A (a, b, c);
    insert into A values (1,2,3,4);
    select * from A a1, A a2 where a1.a=a2.a and a1.c=a2.c;
    explain select * from A a1, A a2 where a1.a=a2.a and a1.c=a2.c;
    &#160;</pre>
                </div>
                <p>The script can be executed in "batch" mode by starting <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> with the following command:</p>
                <div class="code-block"><pre>&#160;
    xsql -size 100m -b -f ..\..\samples\xsql\scripts\compound.sql
    &#160;</pre>
                </div>
                <p><span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> displays the following lines of output showing the results of the <code>select</code> statement and the <code>explain</code> command:</p>
                <div class="code-block"><pre>&#160;
    a       b       c       d       a       b       c       d
    ------------------------------------------------------------------------------
    1       2       3       4       1       2       3       4
    &#160;
    Selected records: 1
    Plan
    ------------------------------------------------------------------------------
    INDEX-JOIN[3] with A using index A.idx(a, b, c) WHERE (Eq A.c A.c)
    .SEQ-SCAN[1] of table A
    &#160;
    Selected records: 1
    &#160;</pre>
                </div>
                <p>Note that <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> terminates after executing the scripts in "batch" mode. To use <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> interactively we use the <code>-i</code> command line option. For example we could run the script and enter interactive mode with the following command:</p>
                <div class="code-block"><pre>&#160;
    xsql -size 100m -i -f ..\..\samples\xsql\scripts\compound.sql
    &#160;</pre>
                </div>
                <p>Now we can type an SQL <code>select</code> statement like the following to display the contents of table <code>A</code>:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;select * from A;
    a       b       c       d
    ------------------------------------------------------------------------------
    1       2       3       4
    &#160;
    Selected records: 1
    &#160;</pre>
                </div>
                <h2>The  script command</h2>
                <p>Script files can also be run from interactive mode using the <code>script</code> command. For example, the following command runs the script <code>as.sql</code>:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;script ..\..\samples\xsql\scripts\as.sql
    bond.bond
    ------------------------------------------------------------------------------
    James Bond
    &#160;
    Selected records: 1
    &#160;</pre>
                </div>
                <p>The file <code>as.sql</code> looks like this:</p>
                <div class="code-block"><pre>&#160;
    create table bond (bond string);
    insert into bond values ('James Bond');
    select "bond" as "bond.bond" from bond;
    &#160;</pre>
                </div>
                <p>The <code>script</code> command can also be used to run one script from another script file. For example suppose we have the following two script files:</p>
                <p><code>inner.sql</code>:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;select TableName, FieldName, FieldTypeName  from Metatable;
    &#160;</pre>
                </div>
                <p>and <code>outer.sql</code>:</p>
                <div class="code-block"><pre>&#160;
    select 1;
    script inner.sql
    select 2;
    &#160;</pre>
                </div>
                <p>Now we could execute the <code>script</code> command in interactive mode to produce the following output:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;script outer.sql
    #1
    ------------------------------------------------------------------------------
    1
    &#160;
    Selected records: 1
    TableName       FieldName       FieldTypeName
    ------------------------------------------------------------------------------
    A       a       Int4
    A       b       Int4
    A       c       Int4
    A       d       Int4
    bond    bond    String
    &#160;
    Selected records: 5
    &#160;</pre>
                </div>
                <p>Or the script <code>outer.sql</code> could be run from the <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> command line to produce the same result and remain in interactive mode:</p>
                <div class="code-block"><pre>&#160;
    xsql -f ..\..\samples\xsql\scripts\outer.sql
    &#160;</pre>
                </div>
                <h2>Sample scripts directories</h2>
                <p>A number of sample SQL scripts and command files (shell scripts)  are provided in the directory:</p>
                <div class="code-block"><pre>    &#160;
    eXtremeDB/samples/xsql/scripts 
    &#160;</pre>
                </div>
                <p>These sample scripts demonstrate many specific uses of standard SQL and extended <i>e</i>X<i>treme</i>SQL features. </p>
                <p>Because <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> automatically loads dynamic libraries located in <code>eXtremeDB/target/bin.so</code> it is recommended to run <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> from the <code>eXtremeDB/target/bin</code> directory. (Alternatively the <code>LD_LIBRARY_PATH</code> environment variable can be exported (set) to indicate the directory from which to load dynamic libraries.) But, to simplify launching <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> with these sample script files the Windows command file <code>testxsql.bat</code> (<code>testxsql.sh</code> in Unix-Linux packages) is provided. It eliminates the necessity to type a long relative directory path and invokes the specified script with the following lines:</p>
                <div class="code-block"><pre>&#160;
    @echo off
    ..\..\..\target\bin\xsql.exe -c xsql.cfg -f %1.sql
    &#160;</pre>
                </div>
                <p>For example, using this command file from directory <code>eXtremeDB/samples/xsql/scripts</code> (in a Windows console window), the following is a minimal command to run <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> as a server and execute script <code>array.sql</code>:</p>
                <div class="code-block"><pre>&#160;
    xsqltest array
    &#160;</pre>
                </div>
                <p>or from a Linux console window:</p>
                <div class="code-block"><pre>&#160;
    ./xsqltest.sh array
    &#160;</pre>
                </div>
                <p>Running this command, <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> comes up in server mode and displays the following output:</p>
                <div class="code-block"><pre>&#160;
    a       v
    ------------------------------------------------------------------------------
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  [one, two, three]
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] [abc, xyz]
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] []
    &#160;
    Selected records: 3
    press Enter to stop SQL server
    &#160;</pre>
                </div>
                <p>We recommend experimenting with several of the <a href="../../../Programming/xSQL/SDK_Samples/xSQL_Scripts.htm">samples</a> provided.</p>
                <p>It is often convenient to display output from select statements in a different format. The <a href="QS_xSQL3.htm">next step</a> in this tutorial will demonstrate different display options.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>