<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Python API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Step 3: Data Access Operations</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Step 3: Data Access Operations</h1>
            <blockquote>
                <p>To perform operations on database objects the Python application must first establish a connection to the database. After calling the <code>exdb.open_database()</code> method, the application calls the Database method <code>connect()</code> to create a database connection handle:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; con = db.connect()
    &gt;&gt;&gt;
    &#160;</pre>
                </div>
                <p>The variable <code>con</code> is the connection handle. When finished, it is necessary to close the database connection:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; con.close()
&#160;</pre>
                </div>
                <h2>Inserting Database Objects</h2>
                <p>All database access in <i>e</i>X<i>treme</i>DB, with any of its APIs (including Python), must be within the scope of a transaction.  To start a transaction on a connection:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt;con.startTransaction()
    &gt;&gt;&gt;
    &#160;</pre>
                </div>
                <p>To create an object (i.e. insert a record into the database) use <i>Connection</i> method <code>new()</code> which takes a class name as argument. It returns a Python object which corresponds to the one created in the database. The type for the python object is dynamically defined from the schema when the database is created. For example:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; o = con.new(“myclass”)
    &gt;&gt;&gt;
    &#160;</pre>
                </div>
                <p>The variable ‘o’ is a python object of type “myclass” (as defined in the schema). We can now view its fields by typing the variable name:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; o
    &lt;eXtremeDB object:myclass&gt;.{'i4':0L}
    &#160;</pre>
                </div>
                <p>We can assign a field’s value, for example:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; o.i4=10
    &gt;&gt;&gt; o
    &lt;eXtremeDB object:myclass&gt;.{'i4':10}
    &#160;</pre>
                </div>
                <p>Finally, commit the transaction to complete the operation:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt; con.commit()
    &gt;&gt;&gt;
    &#160;</pre>
                </div>
                <h2>Retrieving and Updating Database Objects</h2>
                <p>A <i>Cursor</i> is used to  retrieve database objects. Then the <i>Cursor</i> method <code>find()</code> can be used to locate an object by a <code>unique</code> index. The following code snippet performs a simple index search to locate a <i>Record</i> object by unique key <code>id</code>; then updates the string field <code>str</code> and commits the transaction:</p>
                <div class="code-block"><pre>&#160;
    con.startTransaction(exdb.Transaction.MCO_READ_WRITE)
    cursor = con.cursor()
    rec = cursor.find("Record", "by_i4", 2)
    rec.str = "Updated string"
    cursor.close() #release cursor
     con.commit() # commit changes
    &#160;</pre>
                </div>
                <p>A <i>Cursor</i> is also used to retrieve and scroll through a set of database objects satisfying an index search condition. The following code snippet retrieves all <i>Record</i> objects having values greater than or equal to <code>2</code> for field <code>i4</code> using the <i>Cursor</i> method <code>search()</code>; then scrolls through the result set:</p>
                <div class="code-block"><pre>&#160;
    con.startTransaction(exdb.Transaction.MCO_READ_ONLY)
    cursor = con.cursor()
    ret = cursor.search("Record", "by_i4", exdb.Operation.GreaterOrEquals, 2)
    if ret:
        for rec in cursor:
            print "Object found: i4=%s,str=%s" % (rec.i4, rec.str)
            &#160;
    else::
        print "Object not found"
    &#160;
    cursor.close()
    con.commit()
    &#160;</pre>
                </div>
                <p>SDK sample <a href="../../../Programming/Python/SDK_Samples/Core/operations.htm"><code>samples/python/operations</code></a> illustrates how to use the <i>Connection</i> and <i>Cursor</i> classes to perform basic database <b>CRUD</b> operations. Please <a href="../../Building_Running_SDK_Samples.htm">build and run</a> the sample application and examine the source code. </p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>