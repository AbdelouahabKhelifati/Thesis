<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Introduction to eXtremeDB Transaction Logging</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Introduction to <i>e</i>X<i>treme</i>DB Transaction Logging</h1>
            <blockquote>
                <p>As explained in the <a href="../Transaction_Logging.htm"><i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> User's Guide</a>, <i>Transaction logging</i> is an industry standard term that normally refers to database log file processing.  <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> is mainly used for a set of tasks only one of which is adding persistence to in-memory databases. Mostly it is used and for replaying the log to/from a certain point in time and communicating database transactions to the outside environment (<i>Data Relay</i>). The industry-standard term for this is "Change Data Capture (CDC)”.</p>
                <p>So <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> extends <i>e</i>X<i>treme</i>DB  with three important capabilities:</p>
                <blockquote>
                    <p>1.	Durability (and, hence, recoverability) for in-memory databases (i.e <i>transient</i> classes) </p>
                    <p>2.	<i>Data Relay</i> facilitates seamless, fine-grained data sharing between real-time systems based on <i>e</i>X<i>treme</i>DB, and external systems such as enterprise DBMSs</p>
                    <p>3.	Extended event queue processing</p>
                </blockquote>
                <p><i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> increases the options for persistence of <i>e</i>X<i>treme</i>DB in-memory databases with the introduction of <i>transaction logging</i> – a process that journals changes made to a database (by transactions), as they are made. With <i>transaction logging</i> enabled, the <i>e</i>X<i>treme</i>DB<a name="kanchor358"></a> runtime captures database changes and writes them to a file known as a transaction log. In the event of a hardware or software failure, the runtime can recover the database using this log.</p>
                <p><i>Transaction logging</i> provides durability of <i>e</i>X<i>treme</i>DB all-in-memory and hybrid (containing both transient and persistent classes) databases through the <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> (TL) API. In a TL-enabled application, every <code>insert/update/delete</code> action of a transaction is recorded in in-memory buffers. When the transaction is committed, these buffers are appended to the transaction log. No records are added to the log if the transaction is read-only, or aborted.</p>
                <p>For all-in-memory databases, <i>transaction logging</i> does not alter the in-memory architecture of <i>e</i>X<i>treme</i>DB, and it retains a performance advantage over persistent-media-based databases.  Read performance is unaffected by <i>transaction logging</i> and write performance will far exceed write performance of traditional persistent-media-based databases.  The reasons are simple:  </p>
                <blockquote>
                    <p>(a) <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> requires exactly one write to the file system per database transaction, </p>
                    <p>(b) the write is sequential, and </p>
                    <p>(c) there is no overhead associated with maintaining a cache and/or cache lookups. </p>
                </blockquote>
                <p> A persistent-media-based database, however, will perform many reads and writes per transaction (data pages, index pages, transaction log, etc.) and the larger the transaction and the more indexes that are modified, the more reads and writes that are necessary.</p>
                <p>In C/C++ applications the TL API logs all transactions committed to the database between calls to the functions <code><a href="../../Programming/C/TL_Functions/start.htm">mco_translog_start()</a></code> and  <code><a href="../../Programming/C/TL_Functions/stop.htm">mco_translog_stop()</a></code>. Thus, logging can be turned on and off at the application’s discretion.  For maximum efficiency, the log file is written by blocks aligned with the file system’s pages.  There is a single additional requirement to enable TL applications; the database schema must declare an <code>auto_oid</code> (see the section titled "DDL Requirements" in the <a href="TL_Applications.htm">TL Applications</a> page).</p>
                <p>The TL facility is indifferent towards memory mode (<code>conventional</code> or <code>shared</code><a name="kanchor359"></a>) and transaction manager (<code><a href="../Core/MURSIW_Transaction_Manager.htm" name="kanchor360">MURSIW</a></code>, <code><a href="../Core/Transaction_Control.htm">Exclusive</a></code> or <code><a href="../Core/MVCC_Transaction_Manager.htm" name="kanchor361">MVCC</a></code>). And when <i>transaction logging</i> is used for <i>Data Relay</i> or event handling, it is also indifferent as to whether the database is transient, persistent or hybrid.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>