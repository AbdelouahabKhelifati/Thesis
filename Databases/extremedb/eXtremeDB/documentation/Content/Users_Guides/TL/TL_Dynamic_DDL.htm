<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>eXtremeDB Transaction Logging with Dynamic DDL</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>e</i>X<i>treme</i>DB Transaction Logging with Dynamic DDL</h1>
            <blockquote>
                <p><i>e</i>X<i>treme</i>SQL supports the SQL DDL operations to <code>create</code>, <code>alter</code> or <code>drop</code> tables and indexes. These operations obviously cause the database schema to be modified. Schema modifications are reflected in the log and are applied to the database transparently to the application.</p>
                <p>Dynamic DDL is also supported when using Data Relay. Please refer to SDK sample  “samples\native\tl\tlogiterpipe_ddl”.</p>
                <p><a name="kanchor287"></a>(Note that when the database is restored from the log, further access is possible only through the SQL or UDA API as any previously generated API based on the pre-modified schema becomes invalid. An attempt to perform a transaction using the generated API will result in the <code>MCO_E_SCHEMA_CHANGED</code> error, indicating that the application must close the current connection.)</p>
                <p>When the database is restored from the log, applications using the C/C++ API must:</p>
                <blockquote>
                    <p>1.	ensure that there is sufficient memory for the new, dynamically created classes and indexes by assigning non-zero values to the <code>max_classes</code>, <code>max_indexes</code> and <code>ddl_dict_size</code> elements of the <a href="../../Programming/C/Structures/Database_Parameters.htm"><code>mco_db_params_t</code></a> (or their SQL C++ API analogs).</p>
                    <p><a name="kanchor288"></a>2.	pass an empty dictionary to the database runtime.</p>
                </blockquote>
                <p>To illustrate this process consider two cases: with and without a database snapshot saved by <code><a href="../../Programming/C/Core_Functions/Static/Database_Control/save.htm">mco_db_save()</a></code>. If a snapshot of the database has been saved, then the following code snippet demonstrates how to restore the database from the log file:</p>
                <div class="code-block"><pre>&#160;
    mco_db_h db;
    mco_db_params_t db_params;
    const char *db_name = "mydb";
    const char *tl_log_file = "mydb.log";
    mco_db_params_init ( &amp;db_params );
    /* initialize the params with default values */
    ...
    db_params.max_classes = 100; // maximum number of classes possible in the database
    // memory space reserved for the dictionary
    db_params.max_indexes = 1000; // maximum number of indexes possible db_params.ddl_dict_size = 64 * 1024; 
    &#160;
    /* db_params.ddl_dict = 0; no DDL dictionary. This is required parameter. 
        But it is automatically zeroed by function mco_db_params_init */
    ...
    mco_db_load(stream_handle,
             input_stream_reader, 
            db_name,
            0 /* no static dictionary */,
            pdev-&gt;dev,
             pdev-&gt;n_dev, 
            &amp;db_params );
            &#160;
    mco_db_connect(db_name, con);
    mco_translog_apply(con, tl_log_file, MCO_TRANSLOG_ALL_LABELS );
    &#160;</pre>
                </div>
                <p>Alternatively, when no snapshot has been saved:</p>
                <div class="code-block"><pre>    &#160;
    mco_db_h db;
    mco_db_params_t db_params;
    const char *db_name = "mydb";
    const char *tl_log_file = "mydb.log";
    mco_db_params_init ( &amp;db_params );
    /* initialize the params with default values */
    ...
    db_params.max_classes = 100; // maximum number of classes possible in the database
    // memory space reserved for the dictionary
    db_params.max_indexes = 1000; // maximum number of indexes possible db_params.ddl_dict_size = 64 * 1024; 
&#160;
    /* db_params.ddl_dict = 0; no DDL dictionary. This is required parameter. 
        But it is automatically zeroed by function mco_db_params_init */
    ...
    /* define if autooid or native fields order are required */
    db_params.ddl_dict_flags = MCO_DICT_FLAGS_USE_AUTOOID |
                        MCO_DICT_FLAGS_PRESERVE_FIELDS_ORDER;
    ...
    mco_db_open_dev(stream_handle,
                 input_stream_reader, 
                db_name,
                0 /* no static dictionary */,
                pdev-&gt;dev, 
                pdev-&gt;n_dev,
                 &amp;db_params );
                &#160;
    mco_db_connect(db_name, con);
    mco_translog_apply(con, tl_log_file, MCO_TRANSLOG_ALL_LABELS );
    &#160;</pre>
                </div>
                <p>When restoring a database from a log file, note that if the application was iterating a non-dynamic pipe (that was created without the <code>MCO_TRANSLOG_DYNAMIC_PIPE</code> flag), the "writer" thread receives error <code>MCO_E_TL_PIPE_TERM</code> indicating that the pipe was broken and the current transaction was not written into the pipe.</p>
                <p>Java and C# applications set the <code>max_classes</code>, <code>max_indexes</code> and <code>max_ddl_dict_size</code> through the <code>MaxClasses</code>, <code>MaxIndexes</code> and <code>MaxDictionarySize</code> members of the <i>Database::Parameters</i> class. Python applications pass these values as arguments <code>max_classes</code>, <code>max_indexes</code> and <code>maxDictionarySize</code> to function <code>open_database()</code>. For example:</p>
                <div class="code-block"><pre>    &#160;
    db = exdb.open_database(dbname='opendb', dictionary=dict, is_disk=is_disk,
                    db_segment_size=128*1024*1024,
                    max_classes=100, max_indexes=1000,
                    maxDictionarySize=16*1024)
    &#160;</pre>
                </div>
                <p>The following SDK samples are useful examples:</p>
                <ul>
                    <li value="1"><![CDATA[	]]><span style="color: #000000;"><a href="../../Programming/C/SDK_Samples/TL/Basic.htm">tlogbasic_ddl</a></span> - demonstrates maintaining a snapshot and log file using SQL C++ API</li>
                    <li value="2"><![CDATA[	]]><span style="color: #000000;"><a href="../../Programming/xSQL/SDK_Samples/Configs/TL.htm">xSQL/TL</a></span> - demonstrates using the <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> configuration file to implement the same functionality</li>
                </ul>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>