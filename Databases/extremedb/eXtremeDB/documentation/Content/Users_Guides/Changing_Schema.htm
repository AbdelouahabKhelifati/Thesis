<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Changing the Database Schema</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Changing the Database Schema</h1>
            <blockquote>
                <p>Changing the database schema after an initial implementation is common during the development stages and may be necessary after application deployment.  The technique for altering the database schema and programming considerations vary depending on the APIs used to access the database. It is important to understand the difference between <i>static</i> and <i>dynamic</i> schemas as they are totally different entities and can not be used together, though they can be compatible.</p>
                <p>Typically C and C++ applications will use a <i>static schema</i> defined in an external text file then compiled with the <code><a href="../Getting_Started/Package_Contents/mcocomp.htm">mcocomp</a></code> DDL compiler. For these applications, the schema file is modified as needed and recompiled to produce a new <i>static dictionary.</i>, Then the application is recompiled and the <i>static dictionary</i> is loaded during the call to <code><a href="../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a></code> or loaded explicitly by calling <code><a href="../Programming/C/Core_Functions/Static/Database_Control/load.htm">mco_load_dictionary()</a></code>. The dictionary can be saved to disk by calling the C API <code><a href="../Programming/C/Core_Functions/Static/Database_Control/save_dictionary.htm">mco_db_save_dictionary()</a></code> or the C++ method <code><a href="../Programming/C++/Classes/McoSqlEngine.htm">saveDictionary()</a></code>.</p>
                <p>A <i>static dictionary</i> is also generated in <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> and Python applications when they load the schema. Java and C# applications create a <i>dynamic dictionary</i> during execution by interpreting the native class definitions. This dictionary can then be saved to disk by calling the <a href="#Java">saveDictionary()</a> or <a href="#C#">SaveDictionary()</a> method.</p>
                <p>During early development, schema changes may be frequent and the process of regenerating the database APIs and application consists of repeating the normal steps of application development for the API of choice. But once an application is in use in a production environment, changes to the database schema may require more planning and careful deployment. To address this need, <i>e</i>X<i>treme</i>DB incorporates  <a href="Core/Features/Binary_Schema_Evolution.htm">Binary Schema Evolution</a> (BSE) capability.</p>
                <h2>SQL Dynamic DDL</h2>
                <p>If SQL Dynamic DDL statements such as <code><a href="../Programming/SQL/DDL_Statements/Create_Table.htm"><code>create table</code></a></code>, <code><a href="../Programming/SQL/DDL_Statements/Alter_Table.htm"><code>alter table</code></a></code> or <code><a href="../Programming/SQL/DDL_Statements/Create_Index.htm">create index</a></code> are used, the <i>static schema</i> automatically (and silently) becomes a <i>dynamic schema</i>. For example the SQL <a href="../Programming/SQL/DDL_Statements/Alter_Table.htm"><code>alter table</code></a> statement can be used to change a table format. But in order to access a table that has been modified in this way from an application using a non-SQL API, the <i>dynamic</i> <i>dictionary</i> (the binary form of the schema) containing the table redefinition must be saved and reprocessed or reloaded so that the non-SQL application interfaces correctly with the new table format.</p>
                <p>
                    <img src="../Resources/Images/note.png" /> Note that <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> must know at startup whether it is using a <i>static</i> or <i>dynamic</i> schema. If a static schema is used in the <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> configuration file, after the user issues a SQL Dynamic DDL statement, this configuration file silently becomes invalid and it is necessary to remove the <code><a href="xSQL/Startup_Options/Config_File_Sections/Schema.htm">schema</a></code> section. If starting <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> with a <i>static</i> schema over an existing <i>dynamic schema</i> database that has changed its schema, the error <code>MCO_E_SCHEMA_CHANGED</code> will be emitted. Also, if the <code><a href="xSQL/xSQL_Commands.htm">savemeta</a></code> command is called it will not reflect the actual (changed) database schema! <i>Please note that mixing static and dynamic dictionaries in the context of the same application is highly discouraged! Brace yourself for unexpected difficulties. For example, in any tables with an <code><a name="kanchor419"></a>autoid</code>, the <code><a href="SQL/SQL_Implementation_Details/Autoid_References.htm"><code>autoid</code> declaration</a></code> must appear before any other indexes.</i></p>
                <h2>Saving the Database Dictionary</h2>
                <p>To save the database dictionary in a text schema file, the following APIs are provided:</p>
                <h2>Using <i>xSQL</i></h2>
                <p>From <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span>, use the <code>savedict</code> command:</p>
                <div class="code-block"><pre>    &#160;
    savedict &lt;file-path&gt;
    &#160;</pre>
                </div>
                <h2>Embedded <i>e</i>X<i>treme</i>DB and <i>e</i>X<i>treme</i>SQL</h2>
                <p>From an embedded <i>e</i>X<i>treme</i>DB or <i>e</i>X<i>treme</i>SQL application, use one of the APIs described in the following sections.</p>
                <h3>C API</h3>
                <p>For applications using the C API, call <code>mco_db_save_dictionary()</code>:</p>
                <div class="code-block"><pre>&#160;
    MCO_RET mco_db_save_dictionary(void* stream_handle,
                        mco_stream_write output_stream_writer,
                        mco_db_h db);
                        &#160;</pre>
                </div>
                <h3>C++ API</h3>
                <p>For applications using the C++ API, call method <code>saveDictionary()</code>:</p>
                <div class="code-block"><pre>&#160;
    void McoSqlEngine::saveDictionary(char const *filePath);
    &#160;
    void McoSqlEngine::saveDictionary(void *stream,
                        mco_stream_write streamWriter);
                        &#160;</pre>
                </div>
                <h3><a name="Java"></a>Java</h3>
                <p>For applications using the Java API, call the <i>Connection</i> class method <code>saveDictionary()</code>:</p>
                <div class="code-block"><pre>&#160;
    public boolean Connection.saveDictionary(String filePath);
    &#160;</pre>
                </div>
                <h3><a name="C#"></a>C#</h3>
                <p>For applications using the C# API, call the <i>Connection</i> class method <code>SaveDictionary()</code>:</p>
                <div class="code-block"><pre>&#160;
    public void Connection.SaveDictionary(String filePath);
    &#160;</pre>
                </div>
                <h3>Python</h3>
                <p>For applications using the Python API, call the <i>Connection</i> class method <code>saveDictionary()</code>:</p>
                <div class="code-block"><pre>&#160;
    Connection.saveDictionary(string file path);
    &#160;</pre>
                </div>
                <p>C and C++ applications must process the new schema file with the DDL schema compiler mcocomp which generates new access interfaces; the resulting .h and .c files are compiled into the C or C++ application. Then the new executable can properly access the modified table(s).</p>
                <p>Java, C# and Python applications must reload the database schema from the saved file, or must be modified to reflect the new version of the schema.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>