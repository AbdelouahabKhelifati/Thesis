<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Persistent Database Index Optimization in C</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Persistent Database Index Optimization in C</h1>
            <blockquote>
                <h2>Cursor read-ahead buffering</h2>
                <p><a name="kanchor349"></a>Navigating index structures can require accessing many pages of index “leaf” nodes. For example an application performing a sequential traversal of a disk-based B-Tree index will perform a blocking read access for each index page. This can have a significant performance cost. To reduce the number of costly read operations, the   runtime reads several index pages into an internal  cursor buffer. The number of keys taken from a leaf of a B-Tree page on each access is determined by the value of the database parameter <code>btree_cursor_read_ahead_size</code> in the <a href="../../../Programming/C/Structures/Database_Parameters.htm"><code>mco_db_params_t</code></a> passed into <a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm"><code>mco_db_open_dev()</code></a>. This value can be changed but cannot be larger than the value of configuration parameter <code>MCO_CFG_CURSOR_BUF_SIZE</code>  which has the default value of 10.</p>
                <blockquote>
                    <p>
                        <img src="../../../Resources/Images/note.png" /> Note that to change configuration parameters like <code>MCO_CFG_CURSOR_BUF_SIZE</code>  requires an <i>e</i>X<i>treme</i>DB source code license.</p>
                </blockquote>
                <h2>Block Allocation</h2>
                <p><i>e</i>X<i>treme</i>DB provides a block allocator to facilitate objects’ locality of references, i.e. to assure that a group of objects will be stored in a contiguous block on persistent media. This capability is provided in the form of the generated function <code>&lt;classname&gt;_set_allocation_block_size()</code>. The application calls this function within a <code>READ_WRITE</code> transaction with a sufficient block size to store a group of objects of the given class. This function provides major performance improvements for persistent objects:</p>
                <ul>
                    <li value="1">It keeps the entire object within the same block, greatly improving the read performance for complex objects</li>
                    <li value="2">It keeps groups of objects that had been added to the database at the same time stored together within the same block, improving the sequential access performance for objects of the same class</li>
                </ul>
                <p>When <code>&lt;classname&gt;_set_allocation_block_size()</code> is used, and objects of <code>classname</code> are deleted, the space is returned back to the database pool and can be reused for indexes and other objects. But this space will not be reused for objects of the same class because these new objects are allocated by blocks. Thus, deleting objects does not reduce the locality of reference.</p>
                <p><a name="kanchor350"></a>The block allocator works well when objects are not updated, because when a dynamic object is updated it is possible that a part (the variable length part) of the object will be allocated outside the block. To lessen this effect, the runtime always attempts to allocate the entire object on the same page (Disk Manager page) as the object header.</p>
                <blockquote>
                    <p>
                        <img src="../../../Resources/Images/note.png" /> Note that database file fragmentation can also be greatly reduced by use of the <code>file_extension_quantum</code> element of the <a href="../../../Programming/C/Structures/Database_Parameters.htm"><code>mco_db_params_t</code></a> structure used when opening or extending the database (see function <a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm"><code>mco_db_open_dev()</code></a>) . A non-zero value for <code>file_extension_quantum</code> will cause the database runtime to grow the database file by the specified number of bytes as opposed to growing the database file by the page size (typically 4K, 8K, or 16K).</p>
                </blockquote>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>