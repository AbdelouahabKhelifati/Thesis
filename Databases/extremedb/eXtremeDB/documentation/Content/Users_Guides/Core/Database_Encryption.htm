<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Database Encryption and CRC</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Database Encryption and CRC</h1>
            <blockquote>
                <p><i>e</i>X<i>treme</i>DB provides the capability to encrypt in-memory and persistent databases with the standard <a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES encryption algorithm</a> or by a custom encryption implementation. It is also possible to encrypt database snapshot and backup files. (Please see the <i><a href="https://www.mcobject.com/database-security/" target="_blank">Database Security</a></i> web page for  an illustration of <i>e</i>X<i>treme</i>DB protection for database data and network communications.)</p>
                <p>Also, regardless of whether encryption is enabled, whenever a database snapshot or backup file is read from or written to persistent storage, a <a href="https://en.wikipedia.org/wiki/Cyclic_redundancy_check">Cyclic Redundancy Check</a> (CRC32) is used to verify the integrity of the snapshot image or backup file. (The CRC algorithm can be changed or CRC checking disabled using the C API. Please see the <a href="Encryption/Encryption_C.htm">Database Encryption in C</a> page for further details.)</p>
                <h2>In-Memory Database Encryption</h2>
                <p>The encryption of in-memory (transient) database pages can be enabled by specifying an <i>encryption key</i> and setting the <code>MCO_DB_INMEMORY_PROTECTION</code> mode mask. <a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES algorithm</a> encryption is the default (and the only option delivered in <i>e</i>X<i>treme</i>DB packages). Note that enabling <i>in-memory encryption is not applicable for persistent or hybrid databases</i> (with both persistent and transient classes); see the section <a href="#Persiste">Persistent Database Encryption</a> section below.</p>
                <p>The <a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">AES algorithm</a> encryption is implemented in the <i>e</i>X<i>treme</i>DB AES encryption library for your development platform. Or, for C and C++ applications, it is possible to substitute a custom encryption algorithm by implementing specific C functions for which stubs are provided in a separate "stub" library. (Please see the <a href="Encryption/Encryption_C.htm">Database Encryption in C</a> page for further details.)</p>
                <p>In-memory database encryption is not currently supported in the JNI and .NET wrappers.</p>
                <h2><a name="Persiste"></a>Persistent Database Encryption</h2>
                <p>If a <i>cipher key</i> is specified, then the <i>e</i>X<i>treme</i>DB<a name="kanchor5"></a> disk manager encrypts pages of database and the log files with the algorithm implemented in the currently linked library (AES by default). The exact same <i>cipher key</i> must be specified to open an existing encrypted database. (Note that the database pages when loaded in main memory are unencrypted.) </p>
                <p>As for in-memory database pages, the encryption of data on persistent storage is controlled in C applications by the <code>cipher_key</code> element of the parameter structure  (<code><a href="../../Programming/C/Structures/Database_Parameters.htm">mco_db_params_t</a></code>) passed into <a href="../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a>. Java applications set the <i>Database.Parameters</i> field <code>cipherKey</code> and C# applications set <code>CipherKey</code>. If this parameter is not <code>NULL</code>, then pages are encrypted with the AES or custom encryption algorithm before being saved to “disk” and decrypted when loaded from the “disk”. Each page is encrypted individually.</p>
                <h2>Transaction Logging Encryption</h2>
                <p>When using the <i>e</i>X<i>treme</i>DB<i> Transaction Logging</i> feature, if  a <i>cipher key</i> is specified, then the transaction log is encrypted. The same <i>cipher key</i> is required to <i>play</i> or <i>iterate</i> the log.</p>
                <p>The default transaction logging mode assumes writing the log into a file which integrity must be verified with CRC. So CRC32 is automatically enabled <i>unless</i> the mode flags <code>MCO_TRANSLOG_PIPE</code>, <code>MCO_TRANSLOG_DYNAMIC_PIPE</code> or <code>MCO_TRANSLOG_DUAL_OUT</code> are specified. Otherwise, in any of the pipe modes, CRC is disabled by default but is optionally available by specifying flag <code>MCO_TRANSLOG_CRC</code>.</p>
                <p>&#160;</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>