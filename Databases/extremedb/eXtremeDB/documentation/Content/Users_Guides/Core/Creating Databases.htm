<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Creating/Opening Databases </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Creating/Opening Databases </h1>
            <h2>In-Memory Databases</h2>
            <blockquote>
                <p class="BodyParagraph">In-memory databases are <i>created</i> in conventional or shared memory when the database <b>open</b> API&#160;is called. When the database is opened, memory devices are initialized and metadata, in the form of the database dictionary that informs the <i>e</i>X<i>treme</i>DB<a name="kanchor380"></a> runtime about the database structure, is loaded into memory.&#160; The runtime is initialized with several user-specified parameters that determine runtime behavior until the database is closed. Then, before application termination, the database must be <b>closed</b>.</p>
                <p class="BodyParagraph">The APIs and structures for defining in-memory database parameters are specific to the programming language used. Please use the links below to view detailed explanations and examples  for your development environment:</p>
                <table class="TableStyle-FunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/FunctionReference.css');" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" style="width: 51px;" />
                    <col class="TableStyle-FunctionReference-Column-Column2" style="width: 240px;" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Database_Control/Open_C.htm">C</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Opening and closing in-memory databases in C</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Database_Control/Open_Cpp.htm">C++</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Opening and closing   in-memory databases in C++</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Database_Control/Open_Java.htm">Java</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Opening and closing   in-memory databases in Java</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Database_Control/Open_Python.htm">Python</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Opening and closing   in-memory databases in Python</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1"><a href="Database_Control/Open_Csharp.htm">C#</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">Opening and closing in-memory   databases in C#</td>
                        </tr>
                    </tbody>
                </table>
            </blockquote>
            <h2>Persistent Databases</h2>
            <blockquote>
                <p class="BodyParagraph">Persistent databases are created (for the initial instance) or can be opened from an existing persistent <code>&lt;dbname&gt;.dbs</code> file when the database <code style="font-weight: bold;">open</code> API&#160;is called. After the database <b>open</b>, all database operations are performed with the same APIs as for in-memory databases. However, for persistent databases a number of additional considerations are important. The key factors are discussed in the following sections.</p>
                <h2>Memory Devices</h2>
                <p class="BodyParagraph">Whereas for in-memory databases a single memory device contains all database data and metadata, persistent databases require a minimum of four memory devices for the distinct memory regions described in the <a href="../../Fundamental_Concepts/Database_Storage.htm">Database Storage</a> page: data, metadata, cache and log.</p>
                <h2> Memory page size</h2>
                <p>The <code>MemPageSize</code> can be calculated to optimize performance and will vary depending on the application dynamics, but as a rule of thumb, page size should be between <code>80</code> and <code>512</code> bytes; a <code>128</code> byte page size is good in most situations. (Note that <code style="font-weight: bold;">rtree</code> indexes require larger page sizes. If error code <code>MCO_ERR_RTREE</code> is encountered during database transactions, increase the page size in increments until these error codes are remedied.) </p>
                <h2>Disk page size</h2>
                <p>For persistent and hybrid databases both parameters should be set to a power of 2 with <code>DiskPageSize</code> being at least 8 times the <code>MemPageSize</code> value to allow for efficient caching. It may be useful to map the <code>DiskPageSize</code> to the blocking factor of the persistent media. This is because <i>e</i>X<i>treme</i>DB performs I/O in units of <code>DiskPageSize</code> (i.e. if you modify a record on a page that holds five records, the runtime will write the entire page), and disks perform I/O in blocks, regardless of the size of I/O requested by the database system. In other words, if the disk blocking factor is 8192 bytes, the disk will always read or write 8192 bytes, even if <i>e</i>X<i>treme</i>DB makes a call to write 4096 bytes because its <code>DiskPageSize</code> is 4096 bytes. Given that the disk will always read or write 8192 bytes, <i>e</i>X<i>treme</i>DB should, also.</p>
                <p>
                    <img src="../../Resources/Images/note.png" />When a persistent device is defined and the application does not explicitly assign the database page size for it, the runtime will assign it the default value of 4096 bytes. If multiple applications or tasks attempt to assign different persistent database page sizes for the same database, the  runtime returns an error code.</p>
                <h2>Max Connections</h2>
                <p>For persistent as for in-memory databases, the <code>MaxConnections</code> parameter determines the maximum number of application connections possible for this database.</p>
                <h2>Disk Max Database Size</h2>
                <p>The  <code>MaxDiskDatabaseSize</code> element specifies the maximum amount of persistent media space consumed.  The database run-time will report <code>MCO_E_DISK_SPACE_EXHAUSTED</code> or <code>MCO_ERR_DISK_SPACE_EXHAUSTED</code> to the transaction that causes this threshold to be exceeded (depending on whether the release or debug libraries, respectively are linked in). </p>
                <h2>Log type</h2>
                <p>Transaction log files for persistent databases are created to provide automatic database recovery in the case of system failure.  The transaction log file strategy is configurable to allow developers to choose the type most appropriate for the application and can have a significant impact on performance (see the <a href="Persistent_Databases/Persistent_Database_IO.htm">Persistent Database I/O</a> page for a more detailed discussion). The <code>LogType</code> specifies the logging strategy the runtime will use: <code>NoLog</code>, <code>UndoLog</code> or <code>RedoLog</code>.  The <code>LogType</code> value is set to <code>RedoLog</code> by default.  </p>
                <p class="BodyParagraph">The APIs and structures for defining database parameters are specific to the programming language used. Please use the links below to view detailed explanations and examples  for your development environment:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Persistent_Databases/Database_Control/Persistent_Open_C.htm">C</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creating persistent databases in C</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Persistent_Databases/Database_Control/Persistent_Open_Cpp.htm">C++</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creating persistent  databases in C++</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Persistent_Databases/Database_Control/Persistent_Open_Java.htm">Java</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>Creating persistent  databases in Java</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><a href="Persistent_Databases/Database_Control/Persistent_Open_Csharp.htm">C#</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Creating persistent  databases in C#</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1"><a href="Persistent_Databases/Database_Control/Persistent_Open_Python.htm">Python</a>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">
                                <p>Creating persistent  databases in Python</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>