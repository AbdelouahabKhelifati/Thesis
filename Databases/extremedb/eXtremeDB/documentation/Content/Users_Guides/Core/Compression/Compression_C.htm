<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Data Compression in C</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Data Compression in C</h1>
            <blockquote>
                <p>Please refer to the <a href="../Compression.htm">Data Compression</a> page for a discussion of the advantages of in-memory and persistent database compression. </p>
                <h2>In-Memory Database Compression</h2>
                <p>In-memory database compression is enabled by setting the <code>MCO_DB_INMEMORY_COMPRESSION</code> flag in the  <code><a href="../../../Programming/C/Structures/Database_Open_Modes.htm">mco_db_params_t.mode_mask</a></code> parameter passed to <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a></code>. (Note that this flag does not apply to disk-based or “direct pointers” databases).</p>
                <p>There are three parameters controlling compression which are also set in the <code>mco_db_params_t</code> structure:</p>
                <ul>
                    <li value="1"><code>compression_level</code>: Integer values of 0-9. Higher values provide better compression at the cost of speed. For the default LZ algorithm only values of 0 and 1 are currently used. (The <code>zlib</code> implementation accepts values of 0-9: 0 - means no compression, varying sizes of objects are truncated by their real size; 1 - (default) means the standard compression level.)</li>
                    <li value="2"><code>compression_mask</code>: a bitmap of the kinds of pages to be compressed. (By default only the header page of an object is compressed.)</li>
                    <li value="3"><code>expected_compression_ratio</code>: used to allocate the page map.  The virtual database space cannot be larger than the physical size * the compression ratio. The default value is 10. An element of the page map has a size of 8 bytes, so compression requires extra memory of size <code>mem_size/page_size*expected_compression_ratio*8</code> for the virtual to physical page map. Also <code>mem_size/page_size*4</code> bytes are required for the physical to virtual page map.</li>
                </ul>
                <p>In-memory compression and encryption use the same page hash table, in which parameters are controlled by the <a href="../../../Programming/C/Structures/Database_Parameters.htm"><code>mco_db_params_t.max_active_pages</code></a> and <a href="../../../Programming/C/Structures/Database_Parameters.htm"><code>mco_db_params_t.page_hash_bundles</code></a>. The compressor allocates buffers of size  <code>max_active_pages * page_hash_bundles * db_max_connection * mem_page_size</code> for decompressing accessed pages.</p>
                <p>
                    <img src="../../../Resources/Images/note.png" /><a name="kanchor515"></a> Note that in-memory compression can be used only for pure in-memory databases (i.e. no disk manager is used). So if this mode is specified when the <code>mcovtdsk</code> library is used, the function <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a></code> or <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/load.htm">mco_db_load()</a></code> will return error code <code>MCO_E_ILLEGAL_PARAM</code>.</p>
                <h2>Persistent Database Compression</h2>
            </blockquote>
            <blockquote>
                <p>To enable compression, set the <code>MCO_FILE_OPEN_COMPRESSED</code> flag in the <code>dev.file.flags</code> field of the file device specification. For example:</p>
                <div class="code-block"><pre>&#160;
    dev[2].type       = MCO_MEMORY_FILE;
    dev[2].assignment = MCO_MEMORY_ASSIGN_PERSISTENT;
    sprintf( dev[2].dev.file.name, FILE_PREFIX "%s.dbs", dbName );
    dev[2].dev.file.flags = MCO_FILE_OPEN_COMPRESSED;
            
    &#160;</pre>
                </div>
                <p>If this flag is not set, compression will not be performed and the file will function as a normal file. (Note that it is possible to use compression for some databases / files and not use it for other files).</p>
                <p>Two additional parameters can be used to modify the compression process. These are the <code>compression_level</code> and <code>disk_max_database_size</code> elements of the <code><a href="../../../Programming/C/Structures/Database_Parameters.htm">mco_db_params_t </a></code>structure passed to <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm" style="text-decoration: none;">mco_db_open_dev()</a></code>. The <code>disk_max_database_size</code> value determines the size of the memory allocation bitmap. If it is not set (0 or <code>INFINITE_DATABASE_SIZE</code>), then the file size  limit is 1Tb (which requires a 2Gb bitmap).</p>
                <p>The <code>compression_level</code> is an integer value of 0..9 that specifies the level of compression. A value of 0 disables compression. Values of 1 and above specify different compression strategies as follows:</p>
                <blockquote>
                    <p><b>1</b> : The default strategy; means conditional compression based on the following criteria:</p>
                    <ul>
                        <li value="1">Require 25% compression rate or not worth compressing</li>
                        <li value="2">Stop if no compression in the first 1Kb</li>
                        <li value="3">Stop history lookup if a match of 128 bytes is found</li>
                        <li value="4">Lower the ‘good match’ size by 10% at each iteration</li>
                    </ul>
                    <p><b>2 – 9</b>: Correspond to increasingly complex unconditional compression (always compress) strategies which have the following criteria:</p>
                    <ul>
                        <li value="1">Continue even if there is a low rate of compression</li>
                        <li value="2">Stop history lookup if a match of 128 bytes is found</li>
                        <li value="3">Increasing attempts to find a good match with higher compression level numbers</li>
                    </ul>
                </blockquote>
                <p>Note that <i>e</i>X<i>treme</i>DB implements LZ compression in two special file system libraries: <code>mcofu98zip</code> and <code>mcofu98ziplog</code><i> which are only available on Unix systems like Linux, MacOS and Solaris.</i> The application developer chooses one of these implementations by simply linking one or the other of these file system libraries in place of the standard filesystem library (<code>mcofuni</code>,  or  <code>mcofu98</code>).</p>
                <p>The <code>mcofu98zip</code> implementation uses compression only for random access I/O operations, and consequently is used only for compressing the database file (and not for compressing a transaction log file). It compresses the main database file (<code>dbname.dbs</code>) and creates two additional files. Because the size of an updated page in the database file can be changed, the pages have to be reallocated. So, a page map file (<code>dbname.pagemap</code>) is built to provide indirect access to the pages and a memory allocation bitmap file (<code>dbname.bitmap</code>) to manage the space within the file.</p>
                <p>Instead, the <code>mcofu98ziplog</code> implementation is used for compressing transaction log files. It uses the same compression algorithm as <code>mcofu98zip</code>, but it overrides only the sequential I/O methods. As compression is applied sequentially and pages are not overwritten, it is not necessary to maintain extra page maps and allocation map. So only the compressed log file is produced, no additional files.</p>
                <p><![CDATA[	]]><img src="../../../Resources/Images/note.png" /> Note that it is not possible to provide compression both for database and transaction log files in a single application, because only one compression implementation (either <code>mcofu98zip</code> or <code>mcofu98ziplog</code>) can be linked into the application.</p>
                <p>
                    <img src="../../../Resources/Images/note.png" />Further, note that CRC checking may not be enabled simultaneously with compression because compression implements its own CRC.</p>
            </blockquote>
            <blockquote>
                <h2>Data Compression for IoT Communications</h2>
                <p>Data compression for IoT communications is enabled by setting the <code>compression_level</code> element of structure <code><a href="../../../Programming/C/Structures/IoT_Communicator_Parameters.htm">mco_iot_comm_paramst_t </a></code>. The default level of <code>0</code> means no compression. As explained in the <a href="../Compression.htm">Data Compression</a> page, the communications between each server-device pair will be compressed only if both sides (server and device) have <code>compression_level</code> greater than <code>0<span style="font-family: Arial;">, and all communicating components </span><b style="font-family: Arial;">must use the same compression level value</b><span style="font-family: Arial;">.</span></code></p>
                <p>Also explained in the <a href="../Compression.htm">Data Compression</a> page is the formula used to determine  the <i>compression ratio</i>. The <code><a href="../../../Programming/C/ADR_Functions/conn_get_stat.htm">mco_iot_conn_get_stat()</a></code> API can be called to retrieve the statistics for a connection; elements <code>sent_compression_ratio</code> and <code>recv_compression_ratio</code> of returned structure <code><a href="../../../Programming/C/Structures/IoT_Communicator_Parameters.htm">mco_iot_connection_stat_t</a></code> show the compression efficiency for incoming and outgoing communications.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>