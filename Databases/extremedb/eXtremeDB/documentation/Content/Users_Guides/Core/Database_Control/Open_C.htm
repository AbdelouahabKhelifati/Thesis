<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Create/Open Databases in C</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Create/Open Databases in C</h1>
            <blockquote>
                <p class="BodyParagraph"> To create a database, the application first specifies <a href="Devices_C.htm">memory device(s)</a>, and database parameters that are then passed to the <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a></code> API. For an in-memory database the relevant parameters are described below. For persistent databases there are additional considerations. Please use the following link to view detailed instructions for creating or opening <a href="../Persistent_Databases/Database_Control/Persistent_Open_C.htm">persistent databases</a>.</p>
                <h2>Database Parameters</h2>
                <p>The database parameters are specified in a <code><a href="../../../Programming/C/Structures/Database_Parameters.htm">mco_db_params_t</a></code><a name="kanchor698"></a> structure that consists of many elements to determine runtime behavior. The <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/params_init.htm">mco_db_params_init()</a></code> API is called to initialize the database parameters with default values. For In-Memory databases, apart from the default values, typically the only parameters to specify are <code>mem_page_size</code> and <code>max_connections</code>. For example:</p>
                <div class="code-block"><pre>    &#160;
    int main(int argc, char* argv[])
    {
        ...
        mco_db_params_t       db_params;
        ...
        mco_db_params_init( &amp;db_params );               /* Initialize the params with default values */
        db_params.mem_page_size      = 128; /* Set page size for memory access */
        db_params.db_max_connections = 1;                /* Set total number of connections to the database */
        ...
    }
        &#160;</pre>
                </div>
                <p>The key elements of the <code><a href="../../../Programming/C/Structures/Database_Parameters.htm">mco_db_params_t</a></code> structure for in-memory databases are:</p>
                <table class="TableStyle-FunctionReference" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mem_page_size</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The size in bytes of the database object and index pages</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">disk_page_size</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><i>Set to zero</i> to indicate an in-memory database (and disable disk operations)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">db_max_connections</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The total number of connections allowed to the database</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mode_mask</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The database open mode flags. </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">license_key</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">Normally this is not specified. But, if required, a license key is provided by <i>McObject Support</i></td>
                        </tr>
                    </tbody>
                </table>
                <h2>Memory page size</h2>
                <p>The <code>mem_page_size</code> element of <code>mco_db_params_t</code> defines the size of memory pages for conventional memory.  The <code>mem_page_size</code> can be calculated to optimize performance and will vary depending on the application dynamics, but as a rule of thumb, page size should be between 80 and 512 bytes; a 128 byte page size is good in most situations. </p>
                <p>(Note that for all-in-memory  databases <code>disk_page_size</code> will be set to zero by the call to <code>mco_db_params_init()</code>.)</p>
                <p>(Also note that <code>rtree</code> indexes require larger page sizes. If error codes <code>MCO_ERR_RTREE</code> or <code>MCO_E_DISK_PAGE_POOL_EXHAUSTED</code> are encountered during database transactions, increase the page size in increments until these error codes are remedied.) </p>
                <h2>Max  database connections</h2>
                <p>The <code>db_max_connections</code> element of <code>mco_db_params_t</code> specifies the maximum number of connections that will be managed for this database. A C application connects to the database (creates a database handle) by passing a database name to the <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/connect.htm">mco_db_connect()</a></code> function. The database must have been previously created with <code><a href="../../../Programming/C/Core_Functions/Static/Database_Control/open_dev.htm">mco_db_open_dev()</a></code>, possibly in a different process if the database is in shared memory.  If successful, this function returns a handle to a database connection or session. This handle is used in subsequent calls to database runtime functions, particularly the transaction control functions.</p>
                <p>Note that all applications must create a separate connection for each thread (task) that accesses the database; <i>database connection handles cannot be shared between different threads or tasks.</i></p>
                <h2>Mode mask</h2>
                <p>The <code>mode_mask</code> element is a bitmask used to specify a combination of runtime options that can be used to optimize performance and or memory consumption. Most In-Memory database applications will not need to modify the default values. (Please see <a href="../../../Programming/C/Structures/Database_Open_Modes.htm">Database Open Modes</a> for a detailed description of the possible options). </p>
                <h2>Example</h2>
                <p class="BodyParagraph">Typical application code to create an in-memory database could look like the following:</p>
                <div class="code-block"><pre>    &#160;
    #define  DATABASE_SEGMENT_SIZE 300 * 1024
    #define  MEMORY_PAGE_SIZE 128
    &#160;
    int main(int argc, char* argv[])
    {
        MCO_RET            rc;
        mco_device_t       dev;
        mco_db_params_t    db_params;
        ...
        mco_runtime_start();
        ...
        dev.type       = MCO_MEMORY_CONV;                /* Set the device as a conventional memory device */
        dev.assignment = MCO_MEMORY_ASSIGN_DATABASE;     /* Assign the device as main database memory */
        dev.size       = DATABASE_SEGMENT_SIZE;          /* Set the device size */
        dev.dev.conv.ptr = (void*)malloc( DATABASE_SEGMENT_SIZE ); /* Allocate memory and set device pointer */
        ...
        mco_db_params_init ( &amp;db_params );
        db_params.mem_page_size      = MEMORY_PAGE_SIZE; /* Set page size for the in-memory part */
        db_params.disk_page_size     = 0;                /* Set page size to zero to disable disk operations */
        db_params.db_max_connections = 1;                /* Set total number of connections to the database */
        ...
        rc = mco_db_open_dev(db_name, convdb_get_dictionary(), &amp;dev, 1, &amp;db_params );
            
        if ( MCO_S_OK == rc ) 
        {
            ...
            mco_db_close(db_name);
        }
        ...
        mco_runtime_stop();
    }
    &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>Persistent Databases</h2>
                <p class="BodyParagraph"> Please use the following link to view detailed instructions for creating or opening <a href="../Persistent_Databases/Database_Control/Persistent_Open_C.htm">persistent databases</a>.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>