<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Database Memory Device Specification in C</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Database Memory Device Specification in C</h1>
            <blockquote>
                <p class="BodyParagraph"> The application determines the size and location of the memory devices, the type of memory and how the <i>e</i>X<i>treme</i>DB<a name="kanchor156"></a> runtime will use the device by defining a <a href="../../../Programming/C/Structures/Memory_Devices.htm">mco_device_t</a> structure. This structure is necessarily quite complex in order to accommodate a variety of storage device characteristics. However, for an  in-memory database using conventional memory this definition is very simple: it is simply a matter of specifying a single device, its <i>type</i>,  <i>assignment</i>, <i>size</i> and, after allocating heap memory, its <i>address</i>. For example:</p>
                <div class="code-block"><pre>    &#160;
    int main(int argc, char* argv[])
    {
        ...
        mco_device_t       dev;
        ...
        dev.type       = MCO_MEMORY_CONV;                /* Set the device as a conventional memory device */
        dev.assignment = MCO_MEMORY_ASSIGN_DATABASE;     /* Assign the device as main database memory */
        dev.size       = DATABASE_SEGMENT_SIZE;          /* Set the device size */
        dev.dev.conv.ptr = (void*)malloc( DATABASE_SEGMENT_SIZE ); /* Allocate memory and set device pointer */
        ...
    }
        &#160;</pre>
                </div>
                <p class="BodyParagraph">For a shared memory device, the definition needs to specify the name that will be used by the OS to share this memory segment, possible shared memory flags and a possible "hint" address. (please refer to <code><a href="../../../Programming/C/Structures/Memory_Devices.htm">mco_device_t</a></code> for details). For example the following code snippet defines a shared memory device for a typical Windows application:</p>
                <div class="code-block"><pre>    &#160;
    int main(int argc, char* argv[])
    {
        ...
        mco_device_t       dev;
        ...
        dev.assignment = MCO_MEMORY_ASSIGN_DATABASE;     /* Assign the device as main database memory */
        dev.size       = DATABASE_SEGMENT_SIZE;          /* Set the device size */
        dev.type       = MCO_MEMORY_NAMED;               /* Set the device as a shared named memory device */
        sprintf( dev.dev.named.name, "%s-db", db_name ); /* Set memory name */
        dev.dev.named.flags = 0;                         /* Zero flags */
        dev.dev.named.hint  = 0;                         /* Set mapping address or null it */
        ...
    }
        &#160;</pre>
                </div>
                <h2>Persistent Databases</h2>
                <p class="BodyParagraph">Typically a persistent database application will define an array of at least four memory devices to manage the following distinct memory regions:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" style="width: 218px;" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_MEMORY_ASSIGN_DATABASE</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">For metadata  and database objects, indexes and other database structures</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_MEMORY_ASSIGN_CACHE</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><a name="kanchor157"></a>For the disk manager cache (page pool)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">MCO_MEMORY_ASSIGN_PERSISTENT</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>A persistent storage device (can be file, multi-file or <span class="Param">RAID</span>). Note that if a persistent device is defined and the application does not explicitly assign <code>disk_page_size</code> the runtime will assign it the default value of 4096 bytes. (If multiple applications or tasks attempt to assign different disk page sizes for the same database the runtime returns an error code.)</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">MCO_MEMORY_ASSIGN_LOG</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">A persistent storage device that contains the database log file</td>
                        </tr>
                    </tbody>
                </table>
                <p class="BodyParagraph">For a typical persistent database application the memory devices could be defined as follows:</p>
                <div class="code-block"><pre>    &#160;
    #define  N_DEVICES             4
    #define DATABASE_SIZE 600 * 1024
    #define CACHE_SIZE 300 * 1024
    const char * db_name = "disk_db";
    &#160;
    int main(int argc, char* argv[])
    {
        ...
        mco_device_t       dev[N_DEVICES];
        ...
        &#160;
        /* Configure first memory device as a plain conventional memory region */
        dev[0].type       = MCO_MEMORY_CONV;               
        dev[0].assignment = MCO_MEMORY_ASSIGN_DATABASE;     
        dev[0].size       = DATABASE_SIZE;
        dev[0].dev.conv.ptr = (void*)malloc( DATABASE_SIZE );
        &#160;
        /* Configure conventional memory region for cache */
        dev[1].type       = MCO_MEMORY_CONV;
        dev[1].assignment = MCO_MEMORY_ASSIGN_CACHE;
        dev[1].size       = CACHE_SIZE;
        dev[1].dev.conv.ptr = (void*)malloc( CACHE_SIZE );
        &#160;
        /* Configure FILE memory device for main database storage */
        dev[2].type = MCO_MEMORY_FILE;
        dev[2].assignment = MCO_MEMORY_ASSIGN_PERSISTENT;
        sprintf(dev[2].dev.file.name, FILE_PREFIX "%s.dbs", db_name);
        dev[2].dev.file.flags = MCO_FILE_OPEN_DEFAULT;
        &#160;
        /* Configure FILE memory device for transaction log */
        dev[3].type       = MCO_MEMORY_FILE;
        dev[3].assignment = MCO_MEMORY_ASSIGN_LOG;
        sprintf(dev[3].dev.file.name, FILE_PREFIX "%s.log", db_name);
        dev[3].dev.file.flags = MCO_FILE_OPEN_DEFAULT;
        &#160;
        ...
    }
        &#160;</pre>
                </div>
                <p>Please refer to the definition of the <a href="../../../Programming/C/Structures/Memory_Devices.htm">mco_device_t</a> structure for further details regarding runtime options that can be set for persistent storage devices.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>