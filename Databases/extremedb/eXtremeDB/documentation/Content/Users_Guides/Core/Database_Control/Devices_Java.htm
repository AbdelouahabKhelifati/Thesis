<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Java API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Database Memory Device Specification in Java</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Database Memory Device Specification in Java</h1>
            <blockquote>
                <p>For Java applications using in-memory databases, a single conventional memory device required for all database data, indexes and metadata is automatically defined and initialized in the <i>Database.open()</i> method <i>when no device array is specified</i>. For example, the typical sequence of API calls that uses the <i>default device</i> initialization could look like the following:</p>
                <div class="code-block"><pre>&#160;
    class Obj
    {
        @Indexable(Type=Database.IndexType.BTree, Unique=false) // Declare non-unique tree index by "value" field
        int value;
    }
    &#160;
    public static void main(String[] args)
    {
        static final int PAGE_SIZE = 128;
        static final int DATABASE_SIZE = 16*1024*1024;
        ...
        Database db = new Database();
        Database.Parameters params = new Database.Parameters();
        ...
        params.memPageSize = PAGE_SIZE;
        params.classes = new Class[]{Obj.class};
        ...
        db.open("tree-db", params, DATABASE_SIZE);
        ...
    }
&#160;</pre>
                </div>
                <p>&#160;</p>
                <p>However, Java applications can override the default device initialization by specifying an array of memory devices to pass to the <i>Database.open()</i> method. For example, to define a <i>shared memory</i> device, the application code could look like the following:</p>
                <div class="code-block"><pre>&#160;
    class Obj
    {
        @Indexable(Type=Database.IndexType.BTree, Unique=false) // Declare non-unique tree index by "value" field
        public int value;
    }
    &#160;
    public static void main(String[] args)
    {
        const int PAGE_SIZE = 128;
        const int DATABASE_SIZE = 16*1024*1024;
        ...
        Database db = new Database();
        Database.Device[] devs;
        char * dbName = "openDb";
        char * shareName = "openDb-db";
        long hint = 0;
        Database.Parameters params = new Database.Parameters();
        ...
        parames.memPageSize = PAGE_SIZE;
        parames.classes = new Class[]{Obj.class};
        ...
        devs = new Database.Device[1];
        devs[0] = new Database.SharedMemoryDevice(Database.Device.Kind.Data, shareName, hint, DATABASE_SIZE);
        ...
        db.open(dbName, params, devs);
        ...
    }
&#160;</pre>
                </div>
                <p>Note that a shared memory device must specify the shared memory name, a "hint" address for the shared memory segment and the total database size. </p>
                <h2>Persistent Databases</h2>
                <p>Applications using persistent databases must define an array of at least four memory devices to manage the following distinct memory regions:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Database.Device.Kind.Data</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">For metadata  and database objects, indexes and other database structures</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Database.Device.Kind.DiskCache</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><a name="kanchor365"></a>For the disk manager cache (page pool)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">Database.Device.Kind.Data</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>A persistent storage device (can be file, multi-file or <span class="Param">RAID</span>). Note that if a persistent device is defined and the application does not explicitly assign <code>DiskPageSize</code><a name="kanchor366"></a> the runtime will assign it the default value of 4096 bytes. (If multiple applications or tasks attempt to assign different disk page sizes for the same database the runtime returns an error code.)</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">Database.Device.Kind.TransactionLog</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">A persistent storage device that contains the database log file</td>
                        </tr>
                    </tbody>
                </table>
                <p class="BodyParagraph">For a typical persistent database application the memory devices could be defined as follows:</p>
                <div class="code-block"><pre>    &#160;
    static final int   N_DEVICES             4;
    static final int PAGE_SIZE = 128;
    static final int DISK_PAGE_SIZE = 4096;
    static final int DISK_CACHE_SIZE = 8*1024*1024;
    static final int DATABASE_SIZE = 16*1024*1024;
    &#160;
    Database.Device[] devs = new Database.Device[N_DEVICES];
    &#160;
    devs[0] = new Database.PrivateMemoryDevice(Database.Device.Kind.Data, DATABASE_SIZE);
    devs[1] = new Database.PrivateMemoryDevice(Database.Device.Kind.DiskCache, DISK_CACHE_SIZE);
    devs[2] = new Database.FileDevice(Database.Device.Kind.Data, "opendb.dbs");
    devs[3] = new Database.FileDevice(Database.Device.Kind.TransactionLog, "opendb.log");
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>