<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>KD-Tree Indexes</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>KD-Tree Indexes</h1>
            <blockquote>
                <p>As explained in the <a href="../../../Fundamental_Concepts/Indexes.htm">Indexes</a> page, <i>e</i>X<i>treme</i>DB supports a k-dimensional tree index, called <code>kdtree</code> which are ideal for multi-dimensional key value searches.</p>
                <p>A <code>kdtree</code> is a data structure for organizing points in a k-dimensional space. The <code>kdtree</code> is a binary tree in which every node is a k-dimensional point. Every non-leaf node generates a splitting hyperplane that divides the space into two subspaces. Points left of the hyperplane represent the left sub-tree of that node and the points right of the hyperplane represent the right sub-tree. The hyperplane direction is chosen in the following way: every node split to sub-trees is associated with one of the k-dimensions, such that the hyperplane is perpendicular to that dimension vector.</p>
                <p>The <code>kdtree</code> uses a <i>Query-By-Example</i> approach to locate objects that match a given search condition. The application creates pattern object(s) and assigns values to the fields that are included in the search criteria. The <code>kdtree</code> supports simple exact matches as well as range lookups.  In the latter case, two pattern objects will be specified: one for the lower and one for the upper bounds of the search condition.  If a field value is defined only for one boundary, it is considered an open interval that corresponds to a greater-than-or-equal-to or less-than-or-equal-to search condition.</p>
                <h2>Example KD-Tree Searches</h2>
                <p>To demonstrate <code>kdtree</code> index usage, consider  the following sample schema:</p>
                <div class="code-block"><pre>&#160;
    class Car
    {
        string vendor;
        string model;
        string color;
        uint4 year;
        uint4 mileage;
        boolean automatic;
        boolean ac;
        uint4 price;
        char&lt;3&gt; state;
        string description;
        &#160;
        kdtree &lt;year, mileage, color, model, vendor, automatic, ac, price&gt; index;
    };
    &#160;</pre>
                </div>
                <p>Suppose we populate the database with the following <i>Car</i> objects:</p>
                <div class="code-block"><pre>&#160;
    ("Ford", "Mustang", "grey", 2005, 60000, true, true, 20000, "MT");
    ("Ford", "Explorer", "black", 2000, 80000, true, true, 15000, "MA");
    ("Toyota", "Corolla", "green", 2007, 100000, true, true, 12000, "CA");
    &#160;</pre>
                </div>
                <h3>Exact Match Search</h3>
                <p>To perform a <code>kdtree</code> search, as with other index types, a <code>cursor</code> must first be created. Then, to search the database for all “Ford Mustangs”, we would first create a <i>Car</i> object with <code>vendor="Ford"</code> and <code>model="Mustang"</code>. This <i>Car</i> "pattern object" is then passed to the cursor <b>search</b> operation (using the API of choice) as both the lower and upper bound. Once the search returns, the application can traverse the result set using the standard <code> cursor</code> operations <b>first</b>, <b>last</b>, <b>next</b> and <b>prev</b>.  (Note that the order of objects in the result set is unpredictable, but only objects that match the specified search criteria are returned.)</p>
                <h3>Range Search</h3>
                <p>Range lookups are similar to the above "exact match". In this case we specify "from" and "to" pattern objects. For example we could create <i>Car</i> objects <code>FromCar</code> with <code>vendor="Ford"</code> and <code>Year=2000</code> and <code>ToCar</code> with <code>vendor="Ford"</code> and <code>Year=2006</code>. Passing these two "pattern objects" to the cursor <b>search</b> operation would find both <i>Car</i> objects with <code>vendor="Ford"</code>.</p>
                <h3>Spatial Search</h3>
                <p>To demonstrate another search capability with <code>kdtree</code> indexes, consider the following schema:</p>
                <div class="code-block"><pre>&#160;
    class SpatialObject 
    {
        Int4 left;
        Int4 top;
        int4 right;
        int4 bottom;
        int  type;
        …
        kdtree &lt;left, top, right, bottom, type&gt; index;
    };
    &#160;</pre>
                </div>
                <p>Again, using the Query-By-Example (QBE) approach, we could create "pattern objects" <code>Low</code> with coordinates <code>left=LEFT, top=TOP</code>, and <code>High</code> with coordinates <code>right=RIGHT, bottom=BOTTOM</code>. Then passing Low and High to a cursor <b>search</b> with operation type <b>contains</b> would select objects contained within the specified rectangle. Specifying operation type <b>overlaps</b> would select objects intersecting with the specified rectangle..</p>
                <p>
                    <img src="../../../Resources/Images/note.png" /> Note that <code>kdtree</code> indexes are inherently unbalanced. While they are supported for <code>persistent</code> classes, because they are unbalanced the performance may be sub-optimal and therefore <code>kdtree</code> indexes are most useful for <code>transient</code> (in-memory) classes.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>