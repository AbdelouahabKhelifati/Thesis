<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Direct Structures</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <div class="TopicContent">
                <h1>Direct Structures</h1>
                <blockquote>
                    <p>Direct structures (generated by specifying the optional <code>direct</code> keyword) are an efficient optimization for C and C++ applications that can be applied to <i>fixed sized class layouts</i>; i.e. data  layouts within a <a href="../../../Programming/C/DDL/Class.htm">class</a> without any dynamic objects (i.e. objects with fields of type <code>string</code>, <code>rect</code>, <code>vector</code>, <code>varbinary</code> and <code>sequence</code>), <code><a href="Optional_Structures.htm">optional</a></code> or <code><a href="Nullable_Fields.htm">nullable</a></code> fields, or other <code>struct</code> fields; also <code>direct</code> structures cannot be stored in a <code>vector</code>. Direct structures organize data fields as structure elements and internally store data as a C-language <code>struct</code>.</p>
                    <p>A structure in <i>e</i>X<i>treme</i>DB is a way of combining several data fields together. When a normal structure is defined for a <a href="../../../Programming/C/DDL/Class.htm">class</a>, the elements of that structure are accessed through the generated field-level <code>_get()</code> and <code>_put()</code> APIs. The benefit of using structures is to organize multiple logically related data fields together and map the database structure into the application’s internals (one example is creating a time series of multiple <code>sequences</code>). The overhead incurred by calling separate <code>_get()</code> functions to read or <code>_put()</code> functions to write all structure elements can be quite noticeable, especially when the number of structure elements or data fields is relatively high. In addition the application needs to call the field accessors many times, which is again quite inconvenient for a large number of fields or structure elements. One alternative approach is to use the <code><a href="../../../Programming/C/Core_Functions/Generated/Class/fixed_get.htm">_fixed_get()</a></code> and <code><a href="../../../Programming/C/Core_Functions/Generated/Class/fixed_put.htm">_fixed_put()</a></code> APIs, which allow reading and writing a number of fields (or even all of them) at once, mapping the DDL fields into the generated C structure. However this is a mere convenience, a shortcut for the application developer.</p>
                    <p><a name="kanchor1071"></a>Actually, the DDL compiler generates two structures: one is packed (in the literal C  sense using #pragma pack), the other is aligned to word-boundaries. The first structure is used to store the elements in the database. While interfacing with the application, the database runtime reads / writes each structure element from/to the storage and copies it into the other structure visible from the application.</p>
                    <p>In contrast, when a <code>direct</code> structure declaration is used, the DDL compiler creates a single C-language structure that is already padded so that its elements are aligned to the target word boundaries. The database dictionary references structure elements offsets that correspond to the offsets of the application’s C structure elements. This is achieved by calculating the target word size at the schema compile time.</p>
                    <p>As a result it is possible to keep the original C-language structure in the storage and access the structure as a whole in one read / write (as opposed to via the accessors API). Moreover, the elements of the structure can be indexed as usual, because the runtime refers to the field data through the dictionary specified offsets as if they were normal fields. Really the trick is to figure out the target architecture word size at the DDL compile time and to use it to calculate the structure field offsets.</p>
                </blockquote>
            </div>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>