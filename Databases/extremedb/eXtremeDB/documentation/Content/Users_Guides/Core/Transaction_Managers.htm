<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Choosing the eXtremeDB Transaction Manager</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Choosing the <i>e</i>X<i>treme</i><a name="kanchor727"></a>DB Transaction Manager</h1>
            <blockquote>
                <p>The choice of Transaction Manager can be important for multi-task and/or mutli-process applications, or multi-user environments where more than one thread or process may be updating database tables.  In single-user/single-threaded applications, where only one application thread accesses the database, concurrency is not an issue and the choice is simple: use the <code>EXCLUSIVE</code> Transaction Manager.</p>
                <p>The topic of concurrency control is covered in detail in the <a href="Concurrency_Transaction_Managers.htm">Concurrency</a> page. Please refer to the description there for definitions and explanation of “Transaction Isolation” levels.  Briefly, <i>e</i>X<i>treme</i>DB offers both “pessimistic” and “optimistic” concurrency control depending on the Transaction Manager linked into the application.  The <code><a href="MURSIW_Transaction_Manager.htm" name="kanchor728">MURSIW</a></code> (Multiple Readers Single Writer) implements “pessimistic” concurrency management by effectively enforcing the “Serializable” isolation level.  If a more “optimistic” concurrency management policy is desired, such as isolation level “Read Committed” or “Read Repeatable”, then the application must be linked with the <code><a href="MVCC_Transaction_Manager.htm" name="kanchor729">MVCC</a></code> (Multi-Versioning Concurrency Control) transaction manager.</p>
                <p>There is also the possibility of using a specialized <a href="#PRIORITI">PRIORITIZED READ</a> Transaction Manager that optimizes performance for applications with "mostly read" data access patterns.</p>
                <h2>EXCLUSIVE</h2>
                <p>This is the most efficient Transaction Manager for single-user/single-threaded applications.  It only allows one task at a time to access the database for reading or writing.  To use the <code>EXCLUSIVE</code> Transaction Manager the application must be linked with library <code>mcotexcl</code>.</p>
                <h2>MURSIW</h2>
                <p>As explained above, the MURSIW Transaction Manager enforces the “Serializable” isolation level, which means that an exclusive lock is applied to all write transactions—no other write transactions can run at the same time.  However “readers” can still run in parallel with the “writer” and with each other.</p>
                <p>To choose the <code>MURSIW</code> transaction manager, the application simply links with library <code>mcotmursiw</code>.</p>
                <h2>MVCC</h2>
                <p>The <code>MVCC</code> transaction manager allows the developer to choose one of two “optimistic” isolation levels by specifying <code>MCO_READ_COMMITTED</code> or <code>MCO_REPEATABLE_READ</code>, or the “pessimistic” isolation level by specifying <code>MCO_SERIALIZABLE</code> , when calling <code>beginTransaction()</code>.  To select an isolation level the application must be linked with the <code>MVCC</code> library <code>mcotmvcc</code>.</p>
                <p>The following code snippet demonstrates how the isolation level is specified in an <i>e</i>X<i>treme</i>SQL application:</p>
                <div class="code-block"><pre>&#160;
    void task( McoSqlEngine &amp; engine, _Person* p )
    {
        int rc;
        uint4 i;
        McoSqlSession session( engine );
        Transaction* trans = session.database()-&gt;beginTransaction(Transaction::ReadWrite,
                                0, MCO_READ_REPEATABLE);
        rc = session.executeStatement(trans, "insert into Persons %r", p);
        sample_sleep(nap_duration2);
        trans-&gt;commit();
        trans-&gt;release();
    }
    &#160;</pre>
                </div>
                <p>Some programming points to note in the code snippet above:</p>
                <ul>
                    <li value="1">The class <i>McoSqlSession</i> is used to create a new session (thread) using the current SQL database connection.  This is necessary because a “default” transaction is started in the main thread when the <i>McoSqlEngine</i> is instantiated.</li>
                    <li value="2">An “allocation context” must be instantiated for the session.</li>
                    <li value="3">When calling <code>session.database()-&gt;begnTransaction()</code> the desired isolation level (<code>MCO_READ_REPEATABLE</code> in this case) is specified.</li>
                </ul>
                <p>The isolation level can also be specified in a SQL statement using one of the two following syntax alternatives:</p>
                <div class="code-block"><pre>&#160;
    set default_isolation_level ( read_committed | repeatable_read | serializable )
    &#160;</pre>
                </div>
                <p>or</p>
                <div class="code-block"><pre>&#160;
    set DefaultIsolationLevel ( ReadCommitted | RepeatableRead | Serializable )
    &#160;</pre>
                </div>
                <h2><a name="PRIORITI"></a>PRIORITIZED READ</h2>
                <p>This transaction manager, implemented in library <code>mcotread</code>, significantly reduces the number of context switches when the access pattern is "mostly read". The downside is that write transactions are stalled until all read transactions are processed.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>