<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|Native APIs|Python API|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Managing Network Communications in Python</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Managing Network Communications in Python</h1>
            <blockquote>
                <p>As explained in the <a href="../Network_Communications.htm">Network Communications</a> page, <i>e</i>X<i>treme</i>DB release 7.1.1795 and later allow the IPv6 address protocol for specifying node addresses. The following section describes issues that can be important for developers porting applications that used network communications in prior versions of <i>e</i>X<i>treme</i>DB. The <a href="#Enabling">OpenSSL section</a> describes how to enable SSL security for network communications.</p>
                <h2>IPv4 vs. IPv6 issues</h2>
                <p>For developers porting applications built with versions of <i>e</i>X<i>treme</i>DB prior to release 7.1.1795 the following API changes should be noted: </p>
                <ul>
                    <li value="1">The  <i>MasterConnection</i> method <code>getReplicaAddress()</code> returns a dictionary with elements <code>ip</code> (string) and <code>port</code> (int)</li>
                    <li value="2">The <i>SqlServer</i> constructor allows the new parameter <code>net_interface</code></li>
                </ul>
                <p>&#160;</p>
                <h2><a name="Enabling"></a>OpenSSL support</h2>
                <p>To enable SSL support, the application must first initialize the SSL layer and set verify locations with the following calls:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt;exdb.ssl_init()
    &gt;&gt;&gt;exdb. ssl_load_verify_locations(ca_file, ca_path)
    &#160;</pre>
                </div>
                <p>The SSL layer parameters are defined in a Python dictionary. For example:</p>
                <div class="code-block"><pre>&#160;
    ssl_params=
    {
        'verify_mode'  : self.exdb.SSLVerifyMode.VerifyPeer |
            self.exdb.SSLVerifyMode.VerifyFailIfNoPeerCert,
        'cert_file_pem': "../../thlib/certs/client.crt",
        'pkey_file_pem': "../../thlib/certs/client.key"
    }
    &#160;</pre>
                </div>
                <p>(Please refer to the  <a href="OpenSSL_Parameters.htm">OpenSSL Parameters</a> page for details on setting the values of <code>verify_mode,</code> <code>cert_file_pem</code> and <code>pkey_file_pem</code>).</p>
                <h2>SSL Security with SQL</h2>
                <p>The <code>connect()</code> method accepts arguments <code>sql_login</code>, <code>sql_password</code>, and <code>ssl_params</code> to create a <i>RemoteSQL</i> SSL connection. The <code>connect()</code> method is defined as:</p>
                <div class="code-block"><pre>&#160;
    def connect(	dbname = None, port = 0, nodes = None, nReplicas = 1,
            replType = ReplicationType.SQL_REPLICATION,
            maxConnectAttempts = 10, local = False,
            useConnectionPool=False, recover = False,
            txBufSize = 64*1024,
            connectTimeout=2000L, readTimeout=1200*1000L,
            sql_login=None, sql_password=None, ssl_params=None):
            &#160;</pre>
                </div>
                <p>For SSL connections the <code>ssl_params</code> are required, while <code>sql_login</code> and <code>sql_password</code> are optional. For example, to create an SSL connection to an <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> server the following connection parameters could be specified:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt;conn = exdb.connect('localhost', 5001, sql_login='login',
                    sql_password='password', ssl_params=ssl_params)
                    &#160;</pre>
                </div>
                <p>Similar to the <i>RemoteSQL</i> client connection above, a <i>DistributedSQL</i> client connection could be created as follows:</p>
                <div class="code-block"><pre>&#160;
    &gt;&gt;&gt;conn = exdb.connect( nodes=('localhost:5010', 'localhost:5011'),
                    sql_login='login', sql_password='password',
                    ssl_params=ssl_params)
                    &#160;</pre>
                </div>
                <p>An SSL enabled SQL server can be instantiated by specifying <i>SqlServer</i> constructor parameters <code>ssl_params</code> and <code>auth_required</code>. The <i>SqlServer</i> constructor is defined as follows:</p>
                <div class="code-block"><pre>&#160;
    exdb.SqlServer(engine, port, bufsize, nThreads, listen_queue_size, 
            local_domain, ssl_params, auth_required, interrupt_timeout)
            &#160;</pre>
                </div>
                <p>In order to use authentication with <i>SqlServer</i>, the application must create a table called <i>Users</i> and insert user names (<code>login</code>) and their respective passwords (<code>password</code>). For example:</p>
                <div class="code-block"><pre>&#160;
    sql_statements = 
    [
        "create table Users (login string primary key, password string)",
        "insert into Users values ('user1', 'mypass')",
        "insert into Users values ('user2', 'hYfjdKK2')"
    ]
    server = exdb.SqlServer(engine, port,ssl_params=ssl_params, auth_required=True)
    for stmt in sql_statements:
        self.engine.execute(stmt)
        &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>