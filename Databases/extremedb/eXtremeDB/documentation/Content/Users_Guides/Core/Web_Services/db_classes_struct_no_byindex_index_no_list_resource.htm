<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The api/db/&lt;dbname&gt;/classes/&lt;struct_no&gt;/byindex/&lt;index_no&gt;/list Resource</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The <code>api/db/&lt;dbname&gt;/classes/&lt;struct_no&gt;/byindex/&lt;index_no&gt;/list</code> Resource</h1>
            <blockquote>
                <p>The <code>api/db/&lt;dbname&gt;/classes/&lt;struct_no&gt;/byindex/&lt;index_no&gt;/list</code> resource executes the following operations for HTTP <code>GET</code> and <code>DELETE</code>:</p>
                <ul>
                    <li value="1"><code>GET</code>: Returns record(s) of the specified class using the index specified by <code>index_no</code></li>
                    <li value="2"><code>DELETE</code>: Deletes individual objects, as specified by the query arguments</li>
                </ul>
                <h3>For an overview see page <a href="McoREST_Resources_Responses.htm"><i>e</i>X<i>treme</i>DB Web Service Resources</a></h3>
                <h1>GET</h1>
                <p>The <code>GET</code> request returns record(s) of the specified class using the index specified by <code>index_no</code>. This endpoint supports the following query parameters:</p>
                <ul>
                    <li value="1"><code>count</code>: the number of objects to return; default: 1.</li>
                    <li value="2"><code>skip</code>: the number of objects to skip before returning the result; default: 0.</li>
                    <li value="3"><code>max_array</code>: the maximum number of entries in returned arrays; default: 10.</li>
                    <li value="4"><code>max_vector</code>: the maximum number of entries in returned vectors; default: 10.</li>
                    <li value="5"><code>max_seq</code>: the maximum number of entries in returned sequences; default: 10.</li>
                    <li value="6"><code>max_blob</code>: the maximum size of the returned blobs; default: 1024.</li>
                </ul>
                <p>When this endpoint is invoked, the web service creates a cursor using the <code>index_no</code> index, iterates over it <code>skip</code> times, and returns <code>count</code> records in a JSON array.</p>
                <p>The response is a JSON object with two keys, <code>"header"</code> and <code>"resultset"</code>.</p>
                <p>The header contains the array of field descriptors <code>"fields"</code>. The format of the descriptors is the same as that in the database schema (see page <code><a href="db_schema_resource.htm">/api/db/&lt;dbname&gt;/schema</a></code> for details). The only difference is that structure fields' descriptors are recursively expanded, that is, every structure field descriptor will also include the array of that structure's fields' descriptors.</p>
                <p>The result set is an array of JSON objects representing database records. The <i>e</i>X<i>treme</i>DB record field values are encoded as JSON values using the following rules:</p>
                <ul>
                    <li value="1">Scalar values: JSON numerics</li>
                    <li value="2">Date and time values: timestamps as JSON numerics</li>
                    <li value="3">Boolean values: JSON literals (<code>true</code>, <code>false</code>)</li>
                    <li value="4">ASCII strings: JSON strings</li>
                    <li value="5">2-byte and wide character strings: JSON hex-encoded strings (e.g. <code>"7400650073007400"</code> for string <code>"test"</code> when encoded using the <code>UTF-16-LE</code> encoding)</li>
                    <li value="6">Fixed- and variable-size binary fields: JSON hex-encoded strings</li>
                    <li value="7">Blobs: JSON hex-encoded strings</li>
                    <li value="8">Arrays, vectors and sequences: JSON arrays</li>
                    <li value="9">Structures: JSON objects</li>
                </ul>
                <p>Furthermore, <code>string</code>, <code>binary</code>, <code>blob</code>, <code>array</code>, <code>vector</code>, and <code><a href="../Sequences.htm">sequence</a></code> values are sent inside JSON objects containing two fields: <code>"len"</code> and <code>"val"</code>. The <code>"val"</code> field contains the value encoded as described above. The <code>"len"</code> field specifies the size of the value in the database. This is done to provide actual field size when the value is truncated for some reason, e.g. if limited by the <code>max_array</code>/<code>max_vector</code>/... threshold, or due to memory constraints. The interpretation of the <code>"len"</code> field depends on the data type:</p>
                <ul>
                    <li value="1">Strings (ASCII, 2-byte and wide characters): size of the string in bytes (not characters).</li>
                    <li value="2">Binary values: size of the value in bytes.</li>
                    <li value="3">Blobs: size of the blob in bytes.</li>
                    <li value="4">Arrays, vectors, and sequences: number of elements in the value.</li>
                </ul>
                <p>When the value is transmitted as a hex-encoded string, which is the case for <code>binary</code> values, <code>blobs</code>, and non-ASCII <code>strings</code>, <code>"len"</code> reflects the size of the value, not its hex representation. That is, for a hex-encoded string <code>"0a0b0c0d"</code>, <code>"len"</code> will be equal to <code>4</code>.</p>
                <p>For example, consider the following table and its fields:</p>
                <div class="code-block"><pre>&#160;
    CREATE TABLE T4(pk INTEGER PRIMARY KEY, str STRING, bin BINARY(3), 
        arr ARRAY(INTEGER), seq SEQUENCE(CHAR(4)), b BOOLEAN);
        &#160;</pre>
                </div>
                <p>If the table contains the following data:</p>
                <div class="code-block"><pre>&#160;
    XSQL&gt;SELECT * FROM T4;
    pk  str      bin     arr           seq                 b
    ------------------------------------------------------------
    1   string1  010203  [1, 2, 3, 4]  {AAAA, BBB, CC, D}  false
    2   string2  null    null          null                true
    &#160;</pre>
                </div>
                <p>The data could be retrieved from the web service with the following request:</p>
                <div class="code-block"><pre>&#160;
    GET http://localhost:8083/api/db/xsqldb/classes/3/byindex/0/list?count=2
    &#160;</pre>
                </div>
                <p>The following JSON response would be returned:</p>
                <div class="code-block"><pre>&#160;
    {
        "header":
        {
            "fields":
            [
                {
                    "field_no": 0,
                    "name": "pk",
                    "type": 6,
                    "type_s": "MCO_DD_INT4"
                },
                {
                    "field_no": 1,
                    "name": "str",
                    "type": 16,
                    "type_s": "MCO_DD_STRING",
                    "flags": 64,
                    "flags_s": [ "MCO_DICT_FI_NULLABLE" ]
                },
                {
                    "field_no": 2,
                    "name": "bin",
                    "type": 38,
                    "type_s": "MCO_DD_BINARY",
                    "flags": 64,
                    "flags_s": [ "MCO_DICT_FI_NULLABLE" ],
                    "size": 3
                },
                {
                    "field_no": 3,
                    "name": "arr",
                    "type": 6,
                    "type_s": "MCO_DD_INT4",
                    "flags": 68,
                    "flags_s": [ "MCO_DICT_FI_VECTOR", "MCO_DICT_FI_NULLABLE" ]
                },
                {
                    "field_no": 4,
                    "name": "seq",
                    "type": 36,
                    "type_s": "MCO_DD_SEQUENCE_CHAR",
                    "flags": 1088,
                    "flags_s": [ "MCO_DICT_FI_NULLABLE", "MCO_DICT_FI_SEQUENCE" ],
                    "size": 4
                },
                {
                    "field_no": 5,
                    "name": "b",
                    "type": 25,
                    "type_s": "MCO_DD_BOOL",
                    "flags": 64,
                    "flags_s": [ "MCO_DICT_FI_NULLABLE" ]
                }
            ]
        },
        "resultset":
        [
            [
                1,
                { "len": 7, "val": "string1" },
                { "len": 3, "val": "010203" },
                { "len": 4, "val": [ 1, 2, 3, 4 ] },
                { "len": 4,
                    "val":
                    [
                        { "len": 4, "val": "AAAA" },
                        { "len": 4, "val": "BBB" },
                        { "len": 4, "val": "CC" },
                        { "len": 4, "val": "D" }
                    ]
                },
                false
            ],
            [
                2,
                { "len": 7, "val": "string2" },
                null,
                null,
                null,
                true
            ]
        ]
    }
    &#160;</pre>
                </div>
                <h1>DELETE</h1>
                <p>The <code>DELETE</code> request deletes individual objects, as specified by the query arguments. This method supports the same <code>count</code> and <code>skip</code> query arguments as <code>GET</code>.</p>
                <p>Only the HTTP result code is returned.</p>
                <p>For example the following request delete the first object in the index:</p>
                <div class="code-block"><pre>&#160;
    DELETE http://localhost:8083/api/db/xsqldb/classes/3/byindex/0/list
    &#160;</pre>
                </div>
                <p>The following request deletes the second and the third objects: </p>
                <div class="code-block"><pre>&#160;
    DELETE http://localhost:8083/api/db/xsqldb/classes/3/byindex/0/list?skip=1&amp;count=2
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>