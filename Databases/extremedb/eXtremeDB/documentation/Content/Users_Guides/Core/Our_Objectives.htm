<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>eXtremeDB  Objectives</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>e</i>X<i>treme</i>DB  Objectives</h1>
            <blockquote>
                <p>The primary design objective for <i>e</i>X<i>treme</i>DB is to provide extremely high performance, low latency, and the efficient use of storage space for the kinds of applications to which it is targeted.  These applications are different from ordinary database business applications such as payroll or inventory programs. 
</p>
                <p>First of all, <i>e</i>X<i>treme</i>DB-based applications and embedded systems may run on inexpensive processing equipment with small amounts of memory and often without any permanent storage device.  Secondly, in-memory data access must be fast (i.e. low latency) and predictable; simple queries and transactions should take at most a few microseconds, even when using slow processors; the amount of data that needs to be stored is relatively small compared to enterprise databases, and transactions are usually short.  On the other hand, the data that needs to be stored can be complex.</p>
                <p>With respect to high performance and low latency, <i>e</i>X<i>treme</i>DB is a relatively compact set of libraries (relative to other DBMS).  There are two implications of this: </p>
                <blockquote>
                    <p> 1) A short code path means that the entire execution path can be loaded in L1 cache so that the instructions execute at CPU clock speed, versus multiple fetches from RAM across the much slower front-side bus.  </p>
                    <p>2) As a set of libraries, <i>e</i>X<i>treme</i>DB is an embedded database; the database functionality exists in the same address space as your applications, thereby eliminating inter-process communication with a separate database server from the execution path.</p>
                </blockquote>
                <p>With respect to efficient use of storage space, <i>e</i>X<i>treme</i>DB was designed from the start to be an in-memory database system, which has design goals that are diametrically opposed to disk-based database systems.  Whereas an on-disk database will consume extra storage space (which is assumed to be cheap and abundant) to avoid file I/O (which is an expensive operation), an in-memory database is designed to use storage space as efficiently as possible because RAM is the storage space and is not cheap, or abundant.  The result is that <i>e</i>X<i>treme</i>DB can store more data in a given amount of memory than its competition.</p>
                <p>Representative application domains are military / aerospace systems, process control, network / telephony infrastructure equipment, and consumer electronics. So the <i>e</i>X<i>treme</i>DB design goals were derived from the requirements of these target applications, which are typically high transaction rate programs with,</p>
                <blockquote>
                    <p>a)   soft or hard real-time requirements,</p>
                    <p>b)   dynamic data streams, and</p>
                    <p>c)   cost-effective (limited) hardware resources.</p>
                </blockquote>
                <p>An important constraint is to fully support the conventional DBMS ACID transaction properties to assure database integrity and durability in the case of application and system failures.</p>
                <p><a name="kanchor688"></a>To these goals was added the need to provide an easy-to-use approach to database application development and to give the developer the maximum possible configurability and control over the performance and impact of the database runtime within their applications.  So, with these overriding requirements, the guiding principles in the design of the <i>e</i>X<i>treme</i>DB include:</p>
                <ul>
                    <li value="1">Minimize resource requirements — essentially memory. Object sizes are kept small—the overhead that <i>e</i>X<i>treme</i>DB introduces is low and, to a degree, controllable from the application
</li>
                    <li value="2">Keep code size low
</li>
                    <li value="3">Eliminate extra layers of code by closely integrating database storage and the host application language. Target applications often have many very small database transactions rather than large ones. That means that the operation to obtain data from an object, given a pointer or reference to the object, has to be very fast, otherwise the overhead cost (such as the cost of sending a “message”) could become prohibitive. The <i>e</i>X<i>treme</i>DB data access methods make it possible to reference database objects at nearly the same speed as that of program variables
</li>
                    <li value="4">Provide native support for dynamic data structures such as time series, variable-length strings, lists and trees. <i>e</i>X<i>treme</i>DB “extends” the C/C++ language by supporting dynamic data in a very efficient (fast), safe (transactional), and compact (memory) way. Likewise, the Python extension module provides convenient Python database navigation classes, the Java API provides native Java language “data-enabling” and the <i>e</i>X<i>treme</i>DB C# API integrates with the C# language and enhances <span class="Param">LINQ</span> query performance.
</li>
                </ul>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>