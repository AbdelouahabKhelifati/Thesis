<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>High Availability Parameters</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>xSQL</i> High Availability Parameters</h1>
            <blockquote>
                <p>The <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> configuration file can be used to define <i>e</i>X<i>treme</i>DB<i> High Availability</i> parameters corresponding to the C API <code><a href="../../../../Programming/C/Structures/HA_Parameters.htm"><code>mco_ha_params_t</code></a></code> structure. </p>
                <h3>For an overview see page <a href="../xSQL_Config_File_Options.htm">Configuration File Parameters</a></h3>
                <p>The <code>ha_params</code> section consists of a set of "name : value" pairs enclosed within braces. For example: </p>
                <div class="code-block"><pre>&#160;
    ha_params : {
        master_ports : [ ":tcp:6100", ":udp:6100"],
        master_params : {
            ...
        }
        ...
        connection_strings: [ "192.168.1.100:5000", "192.168.1.102:5000" ],
        connect_interval : 1000,
        connect_attempts : 5,
        ...
        replica_params : {
            mode_flags : [ force_sync ],
            ...
        }
    }
    &#160;</pre>
                </div>
                <p> The master side <code>master_ports</code><a name="kanchor869"></a> parameter defines one or more listener ports, thus supporting the multi-channel runtime configuration. The replica side <code>connection_strings</code> parameter defines a list of IP addresses to connect to the master in the replica mode. If the connection strings are present, <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> initializes itself in replica mode and attempts to connect to the list of master nodes defined by this parameter. The number of connect attempts is defined through the <code>connect_attempts</code> parameter and the time interval between the attempts is defined by the value of the <code>connect_interval</code> parameter. If <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> is unable to connect to either of the master nodes listed in the <code>connection_strings</code> list and the <code>master_ports</code> are present, then <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> turns into master mode. If the <code>master_ports</code> are undefined, then <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> quits. Consequently, if the <code>connection_strings</code> are undefined, but the <code>master_ports</code> are, then <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> runs as a master.</p>
                <p>The following table lists the possible options for the <code>ha_params</code> section with the corresponding C API structures and values specified in the comment:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <thead>
                        <tr class="TableStyle-FunctionReference-Head-Header1">
                            <th class="TableStyle-FunctionReference-HeadE-Column2-Header1" style="text-align: left;">Option name : example value</th>
                            <th class="TableStyle-FunctionReference-HeadD-Column2-Header1" style="text-align: left;">Comment</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">master_ports : [ ":tcp:6100", ":udp:6100" ],</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>        Address(es) of master(s). Transport-dependend, ":tcp:5000" (or just "5000"), 
        ":udp:5000" or ":pipe:/tmp/test00"
       </p>
                                <p>(See also <a href="../../../../Programming/C/HA_Functions/attach_replica.htm">mco_HA_attach_replica()</a> )</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">master_params : {...}</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">        Master parameters. Corresponds to <a href="../../../../Programming/C/Structures/HA_Parameters.htm"><code>mco_HA_master_params_t</code></a> structure (See below <a href="#Master_P">Master_Params</a>)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">        keep_alive_interval : 1000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Interval between keep-alive messages in milliseconds</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">        trans_window_size : 10,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">        Transaction window size (See also <code><a href="../../../../Programming/C/HA_Functions/set_trans_window_size.htm">mco_HA_set_trans_window_size()</a></code>)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">        connect_timeout : 2000,

</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>        Connection timeout period in milliseconds, used on both master and replica sides. 
        </p>
                                <p>(See <code><a href="../../../../Programming/C/HA_Functions/attach_master.htm">mco_HA_attach_master()</a></code> and <a href="../../../../Programming/C/HA_Functions/attach_replica.htm"><code>mco_HA_attach_replica()</code></a>
)</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">        connection_strings: [ "192.168.1.100:5000", "192.168.1.102:5000" ],</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>        Connection string(s). Transport-dependent, ":tcp:192.168.1.100:5000" (or just 
        # "192.168.1.100:5000"), ":udp:192.168.1.100:5000" or ":pipe:/tmp/test00"
        </p>
                                <p><span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> will try to connect to addresses in a round-robin manner
</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">connect_interval : 1000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">        Interval between connection attempts in milliseconds, unsigned</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">        connect_attempts : 5,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Maximum number of connect rounds, unsigned</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">cancel_port : 4321,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">        Number of port used for cancel socket. If 0, cancellation will be disabled. Default value is 9990</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">replica_params : {...}</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Replica parameters. Corresponds to <code><a href="../../../../Programming/C/Structures/HA_Parameters.htm">mco_HA_replica_params_t</a></code> structure
(See below <a href="#Replica_">Replica_Params</a>)      
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">switch_mode : "master",</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">
                                <p>Defines the initial HA switch mode. Possible values are "auto" (default), "master", "replica" or "standalone". </p>
                                <p>In the "auto" mode, if the <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span>configuration file specifies master and replica side parameters, the HA runtime runs <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> in a replica mode and makes several attempts to connect to the master node. If those attempts are unsuccessful, then <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span>is runs as a master.</p>
                                <p>In the "master" mode <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> will only be run s a master, regardless of the replica parameters in its configuration file; in the "replica" mode <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> only runs as a replica, again regardless of the master parameters in the config file. In the "standalone" mode the <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> server temporarily ignores HA all together.</p>
                                <p> (function <a href="../../../../Programming/C_API.htm"><code><a href="../../../../Programming/SQL/Functions/HA/xsql_ha_set_switch_mode.htm">xsql_ha_set_switch_mode()</a></code></a> can be called to change the <code>switch_mode</code> at runtime)</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <h2><a name="Master_P"></a>Master_Params</h2>
                <p>The <code>ha_params::master_params</code> section is defined as follows:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <thead>
                        <tr class="TableStyle-FunctionReference-Head-Header1">
                            <th class="TableStyle-FunctionReference-HeadE-Column2-Header1" style="text-align: left;">Option name : example value</th>
                            <th class="TableStyle-FunctionReference-HeadD-Column2-Header1" style="text-align: left;">Comment</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mode_flags : hotsync,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>Master modes &amp; options flags (<code>mco_HA_master_params_t::mode_flags</code>). Combination of</p>
                                <p><code>mcast_reliable</code> (<code>MCO_HAMODE_MCAST_RELIABLE</code>), </p>
                                <p><code>hotsync</code> (<code>MCO_HAMODE_HOTSYNCH</code>) and</p>
                                <p><code>binevolution</code> (<code>MCO_HAMODE_BINEVOLUTION</code>)</p>
                                <p>(Other modes are enabled automatically - see below)</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">max_number_of_replicas : 10,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Maximum number of replicas that can connect to master
             <code>(mco_HA_master_params_t::max_number_of_replicas</code>), unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">quorum : 1</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Initial value for the HA quorum</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">async_databuf_size : 100m,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>            Size of buffer for asynchronous replication in bytes 
            (<code>mco_HA_master_params_t::async_databuf::size</code>), unsigned
            </p>
                                <p>(If not 0, enables async replication mode (<code>MCO_HAMODE_ASYNC</code>)
)</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">trans_log_length : 100,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>            Maximum number of transactions stored on master side
            (<code>mco_HA_master_params_t::trans_log_length</code>), unsigned
            </p>
                                <p>(If not 0, enables stateful replication (<code>MCO_HAMODE_STATEFUL_REPLICATION</code>))
</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">commit_timeout : 2000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Timeout to send transaction in milliseconds (<code>mco_HA_master_params_t::commit_timeout</code>), 
            unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">            initial_timeout : 60000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Initial synchronization timeout in milliseconds (<code>mco_HA_master_params_t::initial_timeout</code>), 
            unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">synch_timeout : 2000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Timeout for waiting replica's ACK in milliseconds (<code>mco_HA_master_params_t::synch_timeout</code>), 
            unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">detach_timeout : 1000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Timeout for detaching replica in milliseconds (<code>mco_HA_master_params_t::detach_timeout</code>), 
            unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mcast_address : "224.0.0.1:12345",</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>            Multicast address in form "&lt;IP/hostname&gt;:&lt;port&gt;" or "&lt;port&gt;" 
            (<code>mco_HA_master_params_t::mcast_addr</code> and <code>mco_HA_master_params_t::mcast_port</code>), string
            </p>
                                <p>( Enables multicast replication mode (<code>MCO_HAMODE_MCAST</code>))
</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">            hotsync_msg_objects : 100,
            
</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>            Number of objects to send at once during hot-synchronization 
            (<code>mco_HA_master_params_t::hotsync_msg_objects</code>), unsigned
</p>
                                <p>           (Makes sense only if <code>hotsync</code> mode)
</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">
                                <p>hotsync_msg_size : 100k</p>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>Max message size during hot-synchronization in bytes (<code>mco_HA_master_params_t::hotsync_msg_size</code>), unsigned</p>
                                <p>(Makes sense only if <code>hotsync</code> mode)
</p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">compression_level : 9,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The level of compression: 0 = no compression; 1 = best speed, 9 - best compression. Default value is 0</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">ssl_params : {...}</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">Master-specific SSL settings. See the global <code><a href="SSL_Params.htm">ssl_params</a></code> section
            for the description of the parameters and their default values.
            These parameters override the global settings.
            To inherit the    global <code><a href="SSL_Params.htm">ssl_params</a></code> settings, leave the <code>ssl_params</code> section empty. (They have the same parameters and default values as the global section, except for <code>ca_path</code> and <code>ca_file</code>, which are <i>only allowed in the global section</i>.) </td>
                        </tr>
                    </tbody>
                </table>
                <h2><a name="Replica_"></a>Replica_Params</h2>
                <p>The <code>ha_params::relica_params</code> section is defined as follows:</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <col class="TableStyle-FunctionReference-Column-Column2" />
                    <thead>
                        <tr class="TableStyle-FunctionReference-Head-Header1">
                            <th class="TableStyle-FunctionReference-HeadE-Column2-Header1" style="text-align: left;">Option name : example value</th>
                            <th class="TableStyle-FunctionReference-HeadD-Column2-Header1" style="text-align: left;">Comment</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mode_flags : [ force_sync ],</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>Modes &amp; options flags (mco_HA_replica_params_t::mode_flags). Combination of</p>
                                <p><code>force_master</code> (<code>MCO_HAMODE_FORCE_MASTER</code>) and</p>
                                <p><code>force_sync</code> (<code>MCO_HAMODE_FORCE_SYNC</code>)</p>
                                <p><code>MCO_HAMODE_EXPLICIT_WRITE_ACCESS</code>
                                </p>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">initial_timeout : 60000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Initial synchronization timeout in milliseconds (<code>mco_HA_replica_params_t::initial_timeout</code>), 
            unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">commit_timeout : 2000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Timeout to receive transaction data from master in milliseconds 
           (<code>mco_HA_replica_params_t::commit_timeout</code>), unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">wait_data_timeout : 5000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Max time between two consecutive transactions in milliseconds 
            (<code>mco_HA_replica_params_t::wait_data_timeout</code>), unsigned 
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">            repeat_counter : 3,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Max number of attempts to repeat commit for reliable multicast 
            (<code>mco_HA_replica_params_t::repeat_counter</code>), unsigned
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">mcast_address : "224.0.0.1:12345",</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            # Multicast address in form "&lt;IP/hostname&gt;:&lt;port&gt;" or 
           "&lt;port&gt;" (<code>mco_HA_replica_params_t::mcast_addr</code> and <code>mco_HA_replica_params_t::mcast_port</code>), 
            string
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">initial_commit_policy : no_sync, </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">
                                <p>            Disk commit policy during initial synchronization 
            (<code>mco_HA_replica_params_t::initial_commit_policy</code>)
            One of :</p>
                                <ul>
                                    <li value="1"><code>sync_flush</code> (<code>MCO_COMMIT_SYNC_FLUSH</code>), </li>
                                    <li value="2"><code>buffered</code> (<code>MCO_COMMIT_BUFFERED</code>),
            </li>
                                    <li value="3"><code>delayed</code> (<code>MCO_COMMIT_DELAYED</code>) or </li>
                                    <li value="4"><code>no_sync</code> (<code>MCO_COMMIT_NO_SYNC</code>)
</li>
                                </ul>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">            initial_objs_in_trans : 100</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">            Number of objects per transaction during initial synchronization 
            (<code>mco_HA_replica_params_t::initial_objs_in_trans</code>), unsigned</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">ssl_params : {...}</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Replica-specific SSL settings. See the global <code><a href="SSL_Params.htm"><code>ssl_params</code></a></code> section
            for the description of the parameters and their default values.
            These parameters override the global settings.
To inherit the    global <code><a href="SSL_Params.htm">ssl_params</a></code> settings, leave the <code>ssl_params</code> section empty. (They have the same parameters and default values as the global section, except for <code>ca_path</code> and <code>ca_file</code>, which are <i>only allowed in the global section</i>.) </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">batch_commit_length :    10,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The maximum number of the transactions (coming from master) that can be merged on the replica side. Default value is 0 (no limit) (See C structure <code><a href="../../../../Programming/C/Structures/HA_Parameters.htm">HA_Params</a></code> for further details)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">batch_commit_bsize :   100k,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The maximum total size of the serialized transactions (in bytes) that can be merged on the replica side. This parameter can be used to prevent merging a very large transactions. Default value is 0 (no limit) (See C structure <code><a href="../../../../Programming/C/Structures/HA_Parameters.htm">HA_Params</a></code> for further details)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">batch_commit_period :  1000,</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">The maximum period of time (in milliseconds) that the commit on the replica can be delayed. This parameter helps in cases where master sends some number of transactions and then becomes idle, but <code>batch_commit_length</code> and/or <code>batch_commit_bsize</code> has not been reached. The <code>batch_commit_period</code> ensures that such batch transactions will eventually be commited during the specified period of time. Default value is 1000 (1 second) (See C structure <code><a href="../../../../Programming/C/Structures/HA_Parameters.htm">HA_Params</a></code> for further details)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">compression_level : 9,</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">The level of compression: 0 = no compression; 1 = best speed, 9 - best compression. Default value is 0</td>
                        </tr>
                    </tbody>
                </table>
                <h2>Note on Batch Commit Parameters</h2>
                <p>If both <code>batch_commit_length</code> and <code>batch_commit_bsize</code> are 0, the batch commit is not used (regardless of <code>batch_commit_period</code> value). This is the default behavior.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>