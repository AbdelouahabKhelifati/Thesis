<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|High Availability User's Guide|Cluster User's Guide|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>eXtremeDB Cluster Applications in C#</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>e</i>X<i>treme</i>DB Cluster Applications in C#</h1>
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <blockquote>
                <p>To implement a cluster with C#, first an array of Cluster nodes is initialized and passed to the <code>ClusterDatabase.Open()</code> method, then a <i>ClusterConnection</i> is instantiated for this database and a Listener thread is created. Finally the <code>ClusterConnection.Stop()</code> method is called to terminate the Cluster session. The following code snippet demonstrates how a simple Cluster C# application performs these steps:</p>
                <div class="code-block"><pre><a name="kanchor258"></a>    &#160;
    public class Cluster
    {
        Database db;
        // listen thread
        public void ClusterListen() 
        {
            ClusterConnection con = new ClusterConnection(db);
            con.Listen();
            
            con.Disconnect();
        }
    &#160;
        public static long msec()
        {
            return DateTime.Now.Ticks / 10000;
        }
    &#160;
        private bool checkQuorum(int[] neighbourIds)
        {
            Console.Write("Checking quorum. Neighbours are:");
            foreach (int nid in neighbourIds) 
            {
                Console.Write("{0} ", nid);
            }
            Console.WriteLine("Return {0}", true);
            return true;
        }
        &#160;
        public bool CheckFunc(int[] neighbourIds) // for delegate call
        {
            bool result = true;
            // logic to determine if nodes can access my_data
            return result;
        }
    &#160;
        public static void Main(String[] args)
        {
            new Cluster(Int32.Parse(args[0]), Int32.Parse(args[1]));
        }
    &#160;
        Cluster(int n_nodes, int node_id)
        {
            Database.Parameters parameters = new Database.Parameters();
            parameters.MemPageSize = PAGE_SIZE;
            parameters.Classes = new Type[]{typeof(Record)};
            Database.ClusterNodeParams[] node_params = new
            Database.ClusterNodeParams[n_nodes];
        &#160;
            for (int i = 0; i &lt; n_nodes; ++i) 
            {
                //use different ports on the localhost
                node_params[i].Addr = "127.0.0.1:200" + (10 + i * 10);
                node_params[i].QRank = 1;
            }
        &#160;
            // set cluster parameters - nodes and window length
            parameters.ClusterParameters = new Database.ClusterParams( node_params,
            
                                            node_id );
            
            parameters.ClusterParameters.Window.Length = WINDOW_LENGTH;
    &#160;
            // create delegate and assign the member function
            CheckQuorum checkQ = new CheckQuorum();
            checkQ.my_data = 119; // set user context
            parameters.ClusterParameters.QuorumDelegate = new
            Database.ClusterQuorumDelegate(checkQ.CheckFunc);
        &#160;
            db = new Database(new ExtremedbWrapper(), Database.Mode.ClusterSupport);
            
            db.Open("cluster-db", parameters, DATABASE_SIZE);
            
        &#160;
            //start cluster listener thread
            Thread listenThread = new Thread(new ThreadStart(ClusterListen));
            listenThread.Start();
            // connect to the database using ClusterConnection
        &#160;
            ClusterConnection con = new ClusterConnection(db);
            
            // do operations on the database
    &#160;
            con.Stop(); // stop cluster runtime. Returns after ALL nodes call Stop()
            listenThread.Join();  // wait for listener thread
        &#160;
            con.Disconnect();
            db.Close();
        }
    }
    &#160;</pre>
                </div>
                <p>Note that the Cluster runtime is started in the <i>Database</i> constructor. Note also the use of <code>CheckQuorum</code> delegate that allows the application to validate the collection of nodes online to determine if the cluster can begin processing.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>