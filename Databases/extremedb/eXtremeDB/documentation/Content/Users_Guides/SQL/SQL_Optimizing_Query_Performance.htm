<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Optimizing eXtremeSQL Query Performance</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Optimizing <i>e</i>X<i>treme</i>SQL Query Performance</h1>
            <blockquote>
                <p>Query performance with <i>e</i>X<i>treme</i>SQL can be improved by the proper use of indexes and understanding how the Query Optimizer works. Please use the following link for a detailed description of the <a href="SQL_Optimizer.htm"><i>e</i>X<i>treme</i>SQL Query Optimizer</a>. </p>
                <h2>Covering and Inclusive indexes</h2>
                <p>In many cases, query performance on in-memory (<code>transient</code>) database classes can also be optimized by use of a <i>covering index</i>. If all the columns requested in the select list of query are available in the index, then the query engine doesn't have to look up the table again which can significantly increase the performance of the query. Since all the requested columns are available within the index, the index is "covering" the query. Hence, the query is called a covering query and the index is a covering index.</p>
                <p>The <i>e</i>X<i>treme</i>DB DDL compiler supports syntax to define the covering index for the class using the <code>&lt;*&gt;</code> syntax. For example:</p>
                <div class="code-block"><pre>&#160;
    class Tab
    {
        string name;
        int4   code;
        string body;
        &#160;
        tree&lt;*&gt; pk;
    };
    &#160;</pre>
                </div>
                <p>Here the covering index includes all fields in the class <i>Tab</i>. If, for example, only the <code>name</code> and <code>code</code> fields were relevant for queries, then the covering index could be defined as follows:</p>
                <div class="code-block"><pre>&#160;
    class Tab
    {
        string name;
        int4   code;
        string body;
        &#160;
        tree&lt;name, code&gt; pk;
    };
    &#160;</pre>
                </div>
                <p>To define a covering index in SQL, the “<code>(*)</code>” syntax can be used:</p>
                <div class="code-block"><pre>&#160;
    create index pk on Tab(*);
    &#160;</pre>
                </div>
                <p>Or, again to cover only fields <code>name</code> and <code>code</code>:</p>
                <div class="code-block"><pre>&#160;
    create index pk on Tab(name,code);
    &#160;</pre>
                </div>
                <h3>Key-Value-Inclusive</h3>
                <p>Further performance optimization may be possible by using a “key-value-inclusive” index to leverage CPU cache memory which is much faster than normal RAM. (See the <a href="../Core/Indexes_Cursors/Inclusive_Covering_Indexes.htm">Key-Value-Inclusive and Covering Indexes</a> page for a detailed explanation.) A “key-value-inclusive” index is defined in <i>e</i>X<i>treme</i>DB DDL using the keyword <code>inclusive</code> as follows:</p>
                <div class="code-block"><pre>&#160;
    class Tab
    {
        string name;
        int4   code;
        string body;
        &#160;
        inclusive tree&lt;name,code&gt; pk;
    };
    &#160;</pre>
                </div>
                <p>or in SQL:</p>
                <div class="code-block"><pre>    &#160;
    create index pk on Tab(name,code) using INCLUSIVE;
    &#160;</pre>
                </div>
                <p>(Note that these “Covering” and “key-value-inclusive” index optimizations only makes sense for, and should be used in conjunction with, the <code><a href="../Core/MURSIW_Transaction_Manager.htm" name="kanchor801">MURSIW</a></code><a name="kanchor802"></a> transaction manager because, even if the field values are present in the index, the <code><a href="../Core/MVCC_Transaction_Manager.htm" name="kanchor803">MVCC</a></code> transaction manager still requires access to the object header in order to determine the right version of the value.)</p>
                <p>&#160;</p>
                <h2>External Sort</h2>
                <p>Sometimes the SQL engine consumes excessive amount of memory or simply runs out of available memory while sorting large datasets. To address this, the SQL engine implements an <i>external sort</i> capability through temporary files. To adjust this external sort operation, the memory limits are set either via the <code>workMemLimit</code> parameter of the <i>SqlOptimizerParameters</i> structure, or by passing the limit value to the SQL function <code>setworkmem()</code>. For example:</p>
                <div class="code-block"><pre>    &#160;
    select setworkmem(4*1024*1024*1024);
&#160;</pre>
                </div>
                <p>Once the set limit is reached, the pre-sorted temporary array is written (serialized) into a file. Hence there can be a number of files. When all the sort files have been created, the "reader" opens all of them at the same time and reads the content back record-by-record.</p>
                <p>After the query has been completed all temporary files are removed. The files are created in the current server's directory, the file names are formed as follows:</p>
                <div class="code-block"><pre><a name="kanchor804"></a>    &#160;
    sprint( "sort-%p-%p.%d", mco_get_pid(), runtime-&gt;engine, (int)++nFiles);
    &#160;</pre>
                </div>
                <p>If the files for any reason are left behind when the server is no longer running , they can be deleted manually.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>