<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Miscellaneous C# Details</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Miscellaneous C# Details</h1>
            <blockquote>
                <h2>Free Memory Threshold</h2>
                <p>An <code>update</code> operation on a <code>transient</code> database can run out of memory in the middle of a transaction, and in this case it is quite possible that the transaction won’t be able to be rolled back. To address this, the <code>McoSqlEngine::setFreeMemoryThreshold()</code> method is used in the C++ API. However, in the C# API this memory limit is managed by setting the <code>Database::Parameter</code> <code>sqlWorkspaceLimit</code> passed to the <code>Database::open()</code> call. For example:</p>
                <div class="code-block"><pre>    &#160;
    parameters.sqlWorkspaceLimit = 2 * 1024*1024;
    ...
    db.open("quotadb", parameters, devs);
    &#160;</pre>
                </div>
                <p>(Note that the default value for <code>sqlWorkspaceLimit</code> is 0 which means unlimited memory.)</p>
                <h2>Managing Transactions</h2>
                <p>Whereas the C++ API  uses <code>implicit</code> transactions by default, where each call of <code>executeStatement()</code> or <code>executeQuery()</code> internally performs a transaction <code>start</code> and <code>commit</code>, C#  applications need to perform <code>explicit</code> transaction blocking. This is done by explicitly starting and committing (or rolling back) the transaction as demonstrated in the code snippet below:</p>
                <div class="code-block"><pre>    &#160;
    SqlLocalConnection con = db.ConnectSql();
    con.StartTransaction(Database.TransactionType.ReadWrite);
    con.ExecuteStatement("insert into MyTable (pk,value) values (?,?)", 2012, "Good bye");
    con.ExecuteStatement("insert into MyTable (pk,value) values (?,?)", 2013, "Hello");
    con.CommitTransaction();
    &#160;</pre>
                </div>
                <p>(Note also that you can use the <code>Connection::CheckpointTransaction()</code> method to update indexes and make objects visible to queries while the transaction is still open.)</p>
                <h2>Using the C# SqlAggregator</h2>
                <p>The <i>SqlAggregator</i> class acts like a distributed connection, but within a single process. In order to use the <i>SqlAggregator</i> the C# application creates an array of <i>SqlLocalConnection</i> objects to run as shards. Then it starts all of the  <i>SqlLocalConnection</i> objects and passes the array to the <i>SqlAggregator</i> constructor. For example:</p>
                <div class="code-block"><pre>&#160;
    SqlLocalConnection [] shards = new SqlLocalConnection[NSHARDS];
    for (int i = 0; i &lt; NSHARDS; i++) 
    {
        shards[i] = create_database("aggg" + Convert.ToString(i), config, is_dptr);
    }
    SqlAggregator agg = db.ConnectSqlAggregator(shards);
    &#160;</pre>
                </div>
                <p>Once the aggregator has been created and initialized it can be used exactly as the <i>SqlLocalConnection</i>. For example to perform queries:</p>
                <div class="code-block"><pre>    &#160;
    agg.executeStatement("2:insert into MyTable (pk,value) values (?,?)", 2013, "Hello"));
&#160;</pre>
                </div>
                <p>When no longer required, the aggregator must be closed through the <code>SqlAgregator.Disconnect()</code> method, and after that close the <i>SqlLocalConnection</i> objects:</p>
                <div class="code-block"><pre>    &#160;
    agg.Disconnect();
    for (int i = 0; i &lt; NSHARDS; i++) 
    {
        shards[i].Disconnect();
    }
    &#160;</pre>
                </div>
                <h2>SQL String Length</h2>
                <p>Whereas for the <code>ExecuteStatement()</code> and the <code>ExecuteQuery()</code> methods of the <i>SqlLocalConnection</i> class, there is no limit to the length of the statement string argument, for the <i>Sql<i>RemoteConnection</i></i>class the statement string length is limited by the <code>bufferSize</code> argument passed to the constructor. The default value is 64 Kb. (This applies as well to the <i>SqlAggregator</i> class). Please refer to the <a href="../SQL_Implementation_Details/SQL_Statement_Strings.htm">SQL Statement Strings</a> page for further details.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>