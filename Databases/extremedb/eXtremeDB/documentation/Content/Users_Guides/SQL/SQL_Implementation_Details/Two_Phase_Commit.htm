<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using the eXtremeSQL Two-Phase Commit</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Using the <i>e</i>X<i>treme</i>SQL Two-Phase Commit</h1>
            <blockquote>
                <p>Some applications require a more elaborate control of the transaction commit processing; specifically, committing the transaction in two steps (phases).  The first phase writes the data into the database, inserts new data into indexes and checks index restrictions (uniqueness) (altogether, the “pre-commit”) and returns control to the application.  The second phase finalizes the commit.</p>
                <p>One example of such an application is the case where multiple <i>e</i>X<i>treme</i>DB databases need to synchronize the updates performed within a single transaction.  Another example could be that the <i>e</i>X<i>treme</i>DB transaction commit is included in a global transaction that involves other database systems or external storage.  In this case, the application coordinates the <i>e</i>X<i>treme</i>DB transaction with the global transaction between the first phase and the second phase.</p>
                <p>The essential feature of a two-phase commit is that the second phase of the commit succeeds only if no error condition is detected.  The following sample code demonstrates how a multi-task application that inserts records into a single database manages a duplicate key situation by rolling back the transaction when the error is detected:</p>
                <div class="code-block"><pre><a name="kanchor478"></a>    &#160;
    char * dbName1 = "ph2_1";
    char * dbName2 = "ph2_2";
    using namespace McoSql;
    McoSqlEngine engine1, engine2;
    McoSqlOpenParameters params;
    &#160;
    // Define the structure correponding to database table T
    struct _T
    {
        uint4       IntKey;
    };
&#160;
    int main()
    {
        uint4 i, key;
        int nCommitsAttempted = 0;
        int nCommitsSucceded = 0;
        params.databaseName            = dbName1;
        params.dictionary              = ph2commitdb_get_dictionary();
        params.mainMemoryDatabaseSize  = DATABASE_SIZE;
        params.mainMemoryPageSize      = MEMORY_PAGE_SIZE;
        engine1.open(params);
&#160;
        params.databaseName = dbName2;
        params.flags &amp;= ~(McoSqlOpenParameters::START_MCO_RUNTIME); // don't restart runtime
        engine2.open(params);
&#160;
        /* fill database 1 */
        printf("\n\tFill database ph2_%d ...\n", 1 );
        for (i = 0; i &lt; nRecords; i++)
        {
            key = i * 3 + 1;
            engine1.executeStatement("insert into T (intKey) values (%u)", key);
            printf("\t\tInsert into T key = %u\n", key );
        }
&#160;
        /* fill database 2 */
        printf("\n\tFill database ph2_%d ...\n", 2 );
        for (i = 0; i &lt; nRecords; i++)
        {
            key = i * 3 + 2;
            engine2.executeStatement("insert into T (intKey) values (%u)", key);
            printf("\t\tInsert into T key = %u\n", key );
        }
        &#160;
        printf("\n\n\tBegin 2-phase commits for key values %d to %d ...\n\n", 0,
                nRecords*3-1 );
        for (i = 0; i &lt; nRecords * 3; ++i)
        {
            Transaction* trans1 = engine1.database()-&gt;beginTransaction(Transaction::ReadWrite);
            Transaction* trans2 = engine2.database()-&gt;beginTransaction(Transaction::ReadWrite);
            key = i;
            engine1.executeStatement(trans1, "INSERT INTO T (intKey) VALUES(%u)", key);
            engine2.executeStatement(trans2, "INSERT INTO T (intKey) VALUES(%u)", key);
            printf("\t  key = %u\n", key );
            &#160;
            try 
            {
                nCommitsAttempted++;
                printf("\t\tCommit phase 1 to ph2_1 for key = %u\n", key );
                trans1-&gt;commit(1);
                nCommitsSucceded++;
                nCommitsAttempted++;
                printf("\t\tCommit phase 1 to ph2_2 for key = %u\n", key );
                trans2-&gt;commit(1);
                nCommitsSucceded++;
                &#160;
                // Both phase-1 commits succeded, Commit phase 2 of both transactions
                nCommitsAttempted++;
                printf("\t\tCommit phase 2 to ph2_1 for key = %u\n", key );
                trans1-&gt;commit(2);
                nCommitsSucceded++;
                nCommitsAttempted++;
                printf("\t\tCommit phase 2 to ph2_2 for key = %u\n", key );
                trans2-&gt;commit(2);
                nCommitsSucceded++;
            } 
            catch (NotUnique &amp;) 
            {
                printf("\tError committing transactions for key = %u ...\n", key );
                trans1-&gt;rollback();
                trans2-&gt;rollback();
            }
&#160;
            // Release the transactions
            trans1-&gt;release();
            trans2-&gt;release();
        }
        &#160;
        printf("\t%d 2-phase commits attempted, %d succeded\n\n\tFinal results:\n",
            nCommitsAttempted, nCommitsSucceded );
        showRecords( 1 );
        showRecords( 2 );
        engine2.close();
        engine1.close();
        sample_pause_end("\n\nPress any key to continue . . . ");
        return 0;
    }
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>