<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>The eXtremeSQL Memory Allocator in C++</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>The <i>e</i>X<i>treme</i>SQL Memory Allocator in C++</h1>
            <blockquote>
                <p>For class <i>McoSqlEngine</i>, the class <i>StdAllocator</i> is used for all memory allocation. Applications that need to replace the built-in <code>malloc()/free()</code>-based allocator can explicitly create an allocator. Such a custom allocator must instantiate an object of the <i>StdAllocator</i> class passing the custom <code>alloc()/free()</code> functions to its constructor (or alternatively, one may subclass the <i>SystemAllocator</i> class). This must be done after the static construction of the default <i>StdAllocator</i> is finished.</p>
                <p>Note that <i>e</i>X<i>treme</i>SQL versions prior to 6.5 required the instantiation of a <i>DynamicAllocator</i> object to substitute a custom memory allocator. Version 6.5 and later do not contain this class. So applications built with a previous version of <i>e</i>X<i>treme</i>SQL will need to be modified. For example, instead of</p>
                <div class="code-block"><pre>    &#160;
    DynamicAllocator allocator(mem_alloc, mem_free,
                    ALLOC_QUANTUM, ALLOC_RETAIN);
    engine.setAllocator(&amp;allocator);
    &#160;</pre>
                </div>
                <p>the custom allocator is simply instantiated in <code>main()</code> as follows:</p>
                <div class="code-block"><pre>    &#160;
    int main(int argc, char** argv)
    {
        ...
        StdAllocator allocator( mem_alloc, mem_free );
    …
    }
    &#160;</pre>
                </div>
                <p>It is possible to limit the amount of memory that the SQL engine can use during the execution of a query, preventing the engine from drawing all available memory from the machine running the query.</p>
                <p>The abstract class <i>SystemAllocator</i> used by all SQL allocators to allocate memory blocks, is defined as follows:</p>
                <div class="code-block"><pre>    &#160;
    class SystemAllocator
    {
        public:
        virtual void* allocate(size_t size) = 0;
        virtual void free(void* ptr) = 0;
        virtual size_t allocated() 
        {
            return 0;
        }
    &#160;
        SystemAllocator() 
        {
            implementation = this;
        }
        static SystemAllocator* implementation;
    };
    &#160;</pre>
                </div>
                <p>The default implementation of the abstract class, <i>StdAllocator</i>, allows specifying the <code>alloc()</code> and <code>free()</code><a name="kanchor740"></a> interfaces and otherwise utilizes the standard C runtime <code>malloc()/free()</code> API. A new <i>QuotaSysAllocator</i> class extends the <i>StdAllocator</i> by keeping track of the allocated space. This class can be used to limit the amount of allocated memory, by use of the constructor as follows:</p>
                <div class="code-block"><pre>    &#160;
    QuotaSysAllocator(size_t quota, malloc_t malloc, free_t free) :
    StdAllocator(malloc,free), limit(quota), total(0){}
    &#160;</pre>
                </div>
                <p>Here the quota is the size in bytes limiting the amount of allocated memory. If the limit is reached, the allocator's <code>malloc()</code> returns null. The second parameter is the function to get memory from the system and the third is the function to release the memory block. The signatures of these functions are:</p>
                <div class="code-block"><pre>    &#160;
    typedef void* (*malloc_t)(size_t size);
    typedef void  (*free_t)(void* ptr);
    &#160;</pre>
                </div>
                <p>In order to redefine the system allocator the application creates an instance of <i>QuotaSysAllocator</i>. For example:</p>
                <div class="code-block"><pre>    &#160;
    main() 
    {
        new QuotaSysAllocator(10*1024*1024, malloc, free);
        ....
    }
    &#160;</pre>
                </div>
                <p>Note that only one instance of the system allocator can be used by the application. If / when a query exceeds the memory limit, the following happens:</p>
                <ol>
                    <li value="1"><![CDATA[	]]><code>QuotaSysAllocator::allocate()</code> returns <code>NULL</code>;</li>
                    <li value="2">	The engine's allocator detects the <code>NULL</code> and throws a <code>NotEnoughMemory</code> exception;</li>
                    <li value="3">	The exception breaks the current SQL statement and the current transaction is rolled back (freeing all memory allocated by the transaction).</li>
                </ol>
                <p>In addition to limiting the amount of memory used by the query, the <i>QuotaSysAllocator</i> can also be used by applications to request the used-memory statistics through the <code>get_total_heap_size()</code> SQL function.</p>
                <p>Note that the <i>QuotaSysAllocator</i> is used implicitly when the <code>sql_workspace_limit</code> parameter is set in an <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> configuration file (by default the limit is set to 0 indicating that there is no limit).</p>
                <p>The <i>QuotaSysAllocator</i> functionality is not currently available as a part of the Java, C# or Python APIs.</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>