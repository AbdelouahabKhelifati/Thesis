<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using eXtremeSQL String, Math and User-defined Functions</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Using <i>e</i>X<i>treme</i>SQL String, Math and User-defined Functions</h1>
            <blockquote>
                <p><i>String</i> and <i>math</i> functions are often used to modify, convert or compute derived values in the result set returned from a SQL query or to assign values in a SQL <code>insert</code> or <code>update</code>.  The following table lists the <i>e</i>X<i>treme</i>SQL built-in functions:</p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');" class="TableStyle-FunctionReference" cellspacing="0">
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><b>Name</b>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><b>Argument Type</b>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><b>Return Type</b>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><b>Description</b>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>abs(i)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">absolute value of the argument</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>abs(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">absolute value of the argument</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>sin(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">sin (rad)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>cos(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">cos (rad)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>tan(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">tan (rad)</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>asin(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">arcsin</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>acos(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">arcos</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>atan(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">arctan</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>exp(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">exponent</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>log(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">natural logarithm</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>ceil(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">the smallest integer value that is not less than r</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>floor(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">the largest integer value that is not less than r</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>integer(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of real to integer</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>integer(s)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of string to integer</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>length(a)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">array</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">number of elements in array</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>length(s)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">length of string</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>lower(s)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">lowercase string</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>real(i)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of integer to real</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>real(s)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of string to real</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>string(i)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">integer</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of integer to string</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>string(r)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">real</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">conversion of real to string</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>substr(s,m[,n])</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string,integer[,integer]</td>
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">substring of s, beginning at character m,
n characters long
(if n is omitted, to the end of string)
</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1"><code>upper</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1">string</td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">uppercase string</td>
                        </tr>
                    </tbody>
                </table>
                <p>The built-in functions can be called from normal SQL <code>select</code> statements as follows:</p>
                <div class="code-block"><pre>    &#160;
    select string(age) from Persons;
    select upper(name) from Persons;
    select abs(amount) from Contributions;
    &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>User-defined functions</h2>
                <p><i>e</i>X<i>treme</i>SQL also allows developers to create their own user-defined functions.  The user-defined function (UDF) must be defined as returning type “<code>static String*</code>” and can accept arguments of type “<code>Value*</code>”.  Then it must be “registered” with the <i>e</i>X<i>treme</i>SQL<a name="kanchor895"></a> runtime by declaring a function of type “<code>static SqlFunctionDeclaration udf()</code>” with arguments specifying the type returned, the name used to call it, a pointer to the function and the number of arguments required.</p>
                <p>The following code snippet defines then registers a UDF:</p>
                <div class="code-block"><pre>    &#160;
    // Delcare and instantiate the user-defined DateFormat function
    static String* dateformat( McoSql::Value* date)
    {
        char str[64];
        int date_val = (int)date-&gt;intValue();
        int yy = date_val / 10000;
        int mm = date_val / 100 % 100;
        int dd = date_val % 100;
        &#160;
        // Format dd.mm.yyyy assuming all dates are after 2000
        sprintf( str, "%d.%d.20%02d", dd, mm, yy );
        return String::create( str );
    }
    &#160;
    static SqlFunctionDeclaration udf
    (
        tpString,          // tpInt is the return value of the UDF
        "dateformat",      // the name of the function as we’ll use it in a query
        (void*)dateformat, // the function pointer
        1                  // the number of arguments to the UDF
    );
    &#160;</pre>
                </div>
                <p>The UDF can then be called in a normal SQL <code>select</code> statement.  For example, the following statement formats the date values in the result set by calling the UDF:</p>
                <div class="code-block"><pre>    &#160;
    select dateformat(date_val) from Contributions;
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>