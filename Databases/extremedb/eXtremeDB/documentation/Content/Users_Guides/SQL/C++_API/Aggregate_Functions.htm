<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using eXtremeSQL  Aggregate functions in C++</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/FunctionReference.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Using <i>e</i>X<i>treme</i>SQL  Aggregate functions in C++</h1>
            <blockquote>
                <p>Aggregate functions are often used to perform operations on a column of a result set.  The standard aggregate functions supplied by <i>e</i>X<i>treme</i>SQL are listed in the following table.  Note that all aggregate functions return the type of the value stored in that table column.</p>
                <table class="TableStyle-FunctionReference" style="mc-table-style: url('../../../Resources/TableStyles/FunctionReference.css');margin-left: 0;margin-right: auto;" cellspacing="0">
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <col style="width: 10px;" class="TableStyle-FunctionReference-Column-Column2" />
                    <tbody>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><b>Aggregate Function</b>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1"><b>Description</b>
                            </td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>avg(column_name)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Returns the average of all values in the specified column.</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>count(*)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Returns the count of rows in the result set.</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>max(column_name)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">max(column_name)	Returns the maximum value in the specified column.</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyE-Column2-Body1"><code>min(column_name)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyD-Column2-Body1">Returns the minimum value in the specified column.</td>
                        </tr>
                        <tr class="TableStyle-FunctionReference-Body-Body1">
                            <td class="TableStyle-FunctionReference-BodyB-Column2-Body1"><code>sum(column_name)</code>
                            </td>
                            <td class="TableStyle-FunctionReference-BodyA-Column2-Body1">Returns the sum of all values in the specified column.</td>
                        </tr>
                    </tbody>
                </table>
                <p>The following code snippet demonstrates the use of  built-in aggregate functions:</p>
                <div class="code-block"><pre>    &#160;
    void queryContributions()
    {
        // Execute query calculating average age of all persons
        QueryResult result(engine.executeQuery("select avg(amount), min(amount),
        max(amount), sum(amount) from Contributions"));
    &#160;
        // Get cursor
        Cursor* cursor = result-&gt;records();
        &#160;
        // Result data source consists of one record with single column.
        // Indices of columns starts from 0
        Record* rec = cursor-&gt;next();
        Value* avg = rec-&gt;get(0);
        Value* min = rec-&gt;get(1);
        Value* max = rec-&gt;get(2);
        Value* sum = rec-&gt;get(3);
        &#160;
        printf("\n\tAverage Contribution: %f\n", (float)avg-&gt;realValue());
        printf("\n\tMinimum Contribution: %f\n", (float)min-&gt;realValue());
        printf("\n\tMaximum Contribution: %f\n", (float)max-&gt;realValue());
        printf("\n\tTotal of Contributions: %f\n", (float)sum-&gt;realValue());
    }
    &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>User-defined aggregate functions</h2>
                <p><i>e</i>X<i>treme</i>SQL also allows developers to create their own user-defined aggregate functions.  The <a href="../SQL_Implementation_Details/Stored_Procedures.htm">user-defined function</a> (UDF) must be defined as returning type <code>static Value*</code> and can accept arguments of type <code>Value*</code>.  Then it must be “registered” with the <i>e</i>X<i>treme</i>SQL<a name="kanchor697"></a> runtime by declaring a function of type <code>static SqlFunctionDeclaration udf ()</code> with arguments specifying the type returned, the name used to call it, a pointer to the function and the number of arguments required.</p>
                <p>The following code snippet defines then registers a UDF:</p>
                <div class="code-block"><pre>    &#160;
    // here is the implementation of the UDF:
    static Value* mod(Value* a, Value* b) 
    {
        if (a-&gt;isNull() || b-&gt;isNull()) 
        {
            return NULL;
        }
        return new IntValue(a-&gt;intValue() % b-&gt;intValue());
    }
    &#160;
    // below, f1 is an instance of the SqlFunctionDeclaration class.  The
    // constructor links this declaration of a UDF named “mod” to the list
    // of all UDFs maintained internally by eXtremeSQL:
    &#160;
    static SqlFunctionDeclaration f1
    (
        tpInt,      // tpInt is the return value of the UDF
        "mod",      // the name of the function as we’ll use it in a query
        (void*)mod, // the function pointer
        2          // the number of arguments to the UDF
    );
    &#160;</pre>
                </div>
                <p>The UDF can then be called in a normal SQL <code>select</code> statement.  For example, the following statement selects records where the value of the column named code is divisible by 3.</p>
                <div class="code-block"><pre>    &#160;
    select * from T where mod(code,3) = 0;
    &#160;</pre>
                </div>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>