<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using the eXtremeSQL  Group By Clause</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1>Using the <i>e</i>X<i>treme</i>SQL  Group By Clause</h1>
            <blockquote>
                <h2>Standard Group By</h2>
                <p><i>e</i>X<i>treme</i>SQL allows standard group by clauses like the following:</p>
                <div class="code-block"><pre>    &#160;
    -- show items in P with average quantity &gt; 320
    SELECT DISTINCT SP.pid FROM SP GROUP BY SP.pid, SP.jid HAVING avg(SP.qty) &gt; 320;
    &#160;
    -- show items in S with links to P2
    SELECT DISTINCT S.sname FROM S,SP WHERE S.sid = SP.sid AND SP.pid = 'P2' GROUP BY S.sname;
    &#160;
    -- show Weight in Grams for red and blue items in P with quantity &gt; 200 and sum &gt; 350 with text in output
    SELECT P.pid, 'Grams = ' AS TEXT1, P.weight * 454 AS GMWET, P.color, 'Max Qty = ' AS TEXT2,
    max(qty) as MQY FROM P,SP WHERE P.pid = SP.pid AND (P.color = 'Red' OR P.color = 'Blue') AND SP.qty &gt; 200
    GROUP BY P.pid, P.weight, P.color HAVING sum(SP.qty) &gt; 350;
    &#160;</pre>
                </div>
                <p>and more complex clauses using a <code>having</code> condition like the following:</p>
                <div class="code-block"><pre>    &#160;
    -- show items in S grouped by city with count &gt; 1
    SELECT count(*) AS c,sid FROM S GROUP BY city HAVING c&gt;1;
    &#160;
    -- show items in S grouped by city with count &gt; 1
    SELECT count(*),sid FROM S GROUP BY city HAVING count(*)&gt;1;
    &#160;</pre>
                </div>
                <p>Aggregate functions can be also used with the <code>group by</code> clause:</p>
                <div class="code-block"><pre>    &#160;
    -- show count of rows having the same 'city'
    SELECT city, COUNT(sid) "Count" FROM S GROUP BY city;
    &#160;
    -- show count of rows having the same 'status'
    SELECT status, COUNT(sid) "Count" FROM S GROUP BY status;
    &#160;
    -- use HAVING clause to show count of rows having the 'status' = 30
    SELECT status, COUNT(sid) "Count" FROM S GROUP BY status HAVING status = 30;
    &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>Tips on Group By usage</h2>
                <p>Note that the <code>group by</code> clause requires an aggregation function for target values not included in the group by list to be able to show only one row for each grouped value. Or alternatively it is necessary to specify all of the target values in the group by list.</p>
                <p>For instance suppose we define and fill a table <i>Cities</i> as follows:</p>
                <div class="code-block"><pre>    &#160;
    create table Cities(city string, jid string);
    insert into Cities values('Paris','J1');
    insert into Cities values('Rome','J2');
    insert into Cities values('Athens','J3');
    insert into Cities values('Athens','J4');
    insert into Cities values('London','J5');
    insert into Cities values('Oslo','J6');
    insert into Cities values('London','J7');
    &#160;</pre>
                </div>
                <p>Now if we query the table with <span style="color: #000000; font-style: italic; font-weight: normal;">xSQL</span> we see that ‘<code>Athens</code>’ and ‘<code>London</code>’ have multiple objects:</p>
                <div class="code-block"><pre>    &#160;
    XSQL&gt;select * from Cities;
    city    jid
    ------------------------------------------------------------------------------
    Paris   J1
    Rome    J2
    Athens  J3
    Athens  J4
    London  J5
    Oslo    J6
    London  J7
    &#160;
    Selected records: 7
    &#160;</pre>
                </div>
                <p>So if we attempt to <code>group by</code> the <code>city</code> column we get the following error:</p>
                <div class="code-block"><pre>    &#160;
    XSQL&gt;select * from Cities group by city;
    ERROR: Compiler error at position 25: No aggregates are specified for GROUP BY
    select * from Cities group by city
    &#160;</pre>
                </div>
                <p>Instead we need to use an aggregate function to reduce the number of results for a column that may have multiple values. For example:</p>
                <div class="code-block"><pre>    &#160;
    XSQL&gt;select city, max(jid) from Cities group by city;
    city    #2
    ------------------------------------------------------------------------------
    Athens  J4
    London  J7
    Paris   J1
    Rome    J2
    Oslo    J6
    &#160;
    Selected records: 5
    &#160;</pre>
                </div>
                <p>Alternatively, to select all target values it is necessary to list all columns that may have multiple duplicate values in the select list and in the <code>group by</code> list. For example:</p>
                <div class="code-block"><pre>    &#160;
    XSQL&gt;select city,jid from Cities group by city,jid;
    city    jid
    ------------------------------------------------------------------------------
    Athens  J3
    Athens  J4
    London  J5
    London  J7
    Oslo    J6
    Paris   J1
    Rome    J2
    &#160;
    Selected records: 7
    &#160;</pre>
                </div>
                <p>&#160;</p>
                <h2>UDF Function-Based Group By</h2>
                <p>To use a UDF in a <code>group by</code> clause, the UDF must be defined and registered as described in the <span><a href="../SQL_Implementation_Details/Stored_Procedures.htm"><span>user-defined functions</span></a></span> page.  The following example code demonstrates how to use a UDF named “<code>dateformat</code>” to custom format date field output:</p>
                <div class="code-block"><pre>    &#160;
    const char * db_name = "groupbydb";
    &#160;
    // Define global SQL engine
    using namespace McoSql;
    McoSqlEngine engine;
    &#160;
    // Define the structure correponding to database table Object
    struct _Contribution
    {
        char const * name;
        uint4        date_val;
        uint4        amount;
    };
    &#160;
    _Contribution contributions[] = 
    {
        { "Michael", 91224, 250 },
        { "Sharon", 91224, 50 },
        { "George", 100101, 100 },
        { "Sharon", 100101, 150 },
        { "Michael", 100321, 300 },
        { "Liz", 100321, 20 },
        { "Bob", 100322, 25 }
    };
    &#160;
    // Declare and instantiate the user-defined DateFormat function
    static String* dateformat( McoSql::Value* date)
    {
        char str[64];
        int date_val = (int)date-&gt;intValue();
        int yy = date_val / 10000;
        int mm = date_val / 100 % 100;
        int dd = date_val % 100;
        &#160;
        // Format dd.mm.yyyy assuming all dates are after 2000
        sprintf( str, "%d.%d.20%02d", dd, mm, yy );
        return String::create( str );
    }
    &#160;
    static SqlFunctionDeclaration udf
    (
        tpString,          // tpInt is the return value of the UDF
        "dateformat",      // the name of the function as we’ll use it in a query
        (void*)dateformat, // the function pointer
        1                  // the number of arguments to the UDF
    );
    &#160;
    int main()
    {
        ...
        engine.open( db_name, groupbydb_get_dictionary(), DATABASE_SIZE, MEMORY_PAGE_SIZE);
    &#160;
        // Fill database
        for ( int i=0; i &lt; (int)(sizeof( contributions ) / sizeof( contributions[0] )); i++ ) 
        {
            addContribution( &amp;contributions[i] );
        }
        &#160;
        // Show all objects
        queryContributions( "Select * from Contributions" );
        &#160;
        // Show sub-totals by contibutor
        showGroup1();
        &#160;
        // Show sub-totals by date using user-defined DateFormat
        showGroup2();
        engine.close();
        sample_pause_end("\n\nPress any key to continue . . . ");
        return 0;
    }
    &#160;
    int addContribution( _Contribution* c)
    {
        int ret = engine.executeStatement("insert into Contributions %r", c);
        if ( 0 == ret )
        {
            printf("\t\tError inserting Contributions %s\n", c-&gt;name );
        }
        return ret;
    }
    &#160;
    int queryContributions( char * sql )
    {
        printf( "\n%s\n", sql);
        QueryResult result( engine.executeQuery( sql ) );
        int count = 0;
        Cursor* cursor = result-&gt;records();
        while ( cursor-&gt;hasNext() )
        {
            Record* rec = cursor-&gt;next();
            _Contribution c;
            result-&gt;extract( rec, &amp;c, sizeof(c) );
            printContribution( count+1, c );
            count++;
        }
        return count;
    }
    &#160;
    void showGroup1()
    {
        sprintf( sql, "Select name, sum(amount) from Contributions group by name" );
        printf( "\n%s\n", sql );
        QueryResult result( engine.executeQuery( sql ) );
        Cursor* cursor = result-&gt;records();
        for (int i = 1; cursor-&gt;hasNext(); i++)
        {
            Record* rec = cursor-&gt;next();
            printf( "\n\t%d)\t%s\t%f", i, ((String*)rec-&gt;get(0))-&gt;body(), rec-&gt;get(1)-&gt;realValue() );
        }
    }
    &#160;
    void showGroup2()
    {
        sprintf( sql, "Select dateformat(date_val), sum(amount) from Contributions group by date_val" );
        printf( "\n\n%s\n", sql );
        QueryResult result( engine.executeQuery( sql ) );
        Cursor* cursor = result-&gt;records();
        for (int i = 1; cursor-&gt;hasNext(); i++)
        {
            Record* rec = cursor-&gt;next();
            printf( "\n\t%d)\t%s\t%f", i, ((String*)rec-&gt;get(0))-&gt;body(), rec-&gt;get(1)-&gt;realValue() );
        }
    }
    &#160;</pre>
                </div>
                <p style="text-indent: 0.5in;">&#160;</p>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>