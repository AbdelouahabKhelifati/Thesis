<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="extremedb.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Programming with eXtremeDB|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]|[%=System.LinkedTitle%]">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>eXtremeSQL Runtime Initialization in C</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/KB_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="TopicContent">
            <div class="nocontent">
                <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="7" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">ToC path: </span>
                </div>
            </div>
            <h1><i>e</i>X<i>treme</i><a name="kanchor188"></a>SQL Runtime Initialization in C</h1>
            <blockquote>
                <p>The SQL interface to an <i>e</i>X<i>treme</i>DB database in <i>e</i>X<i>treme</i>SQL embedded C applications, typically called the SQL <i>engine</i>, is of type <code>database_t</code> and is created by calling <code>mcoapi_create_engine()</code>. But first, as with all <i>e</i>X<i>treme</i>DB applications using the C API, the runtime is initialized and error handler registered (optional but recommended), then the memory device(s) and database parameters are specified before opening and connecting to the database. Please refer to the <a href="../../Core/Database_Control/Devices_C.htm">Memory Devices</a> and <a href="../../Core/Database_Control/Open_C.htm">Open Parameters</a> page for a more detailed explanation of how to define memory devices and the database parameters. The following code snippet demonstrates these steps for a single-user application using a memory-only database:</p>
                <blockquote>
                    <div class="code-block"><pre>    &#160;
    int main(int argc, char** argv)
    {
        MCO_RET           rc;
        mco_db_h          db;
        mco_device_t      dev;
        mco_db_params_t   db_params;
        database_t        engine;
        &#160;
        /* set fatal error handler */
        mco_error_set_handler(extremedb_error_handler);
        &#160;
        /* start eXtremeDB runtime */
        mco_runtime_start();
    &#160;
        /* setup memory device as a plain conventional memory region */
        dev.type       = MCO_MEMORY_CONV;           /* set the device as a conventional memory device */
        dev.assignment = MCO_MEMORY_ASSIGN_DATABASE;     /* assign the device as main database memory */
        dev.size       = DATABASE_SIZE;                  /* set the device size */
        dev.dev.conv.ptr = (void*)malloc( DATABASE_SIZE );  /* allocate database memory */
        &#160;
        if ( !dev.dev.conv.ptr ) 
        {
            extremedb_error_handler(MCO_E_NOMEM);
        }
    &#160;
        /* initialize and customize the database parameters */
        mco_db_params_init ( &amp;db_params );               /* initialize the params with default values */
        db_params.mem_page_size      = MEMORY_PAGE_SIZE; /* set page size for the in memory part */
        db_params.disk_page_size     = 0;                /* set page size to zero to disable disk use */
        db_params.db_max_connections = 1;                /* set total number of database connections */
        db_params.db_log_type        = REDO_LOG;         /* set transaction log type */
    &#160;
        /* open a database on the device with given params */
        rc = mco_db_open_dev(db_name, c_apidb_get_dictionary(), &amp;dev, 1, &amp;db_params );
        if ( MCO_S_OK == rc ) 
        {
            /* connect to the database by name */
            rc = mco_db_connect( db_name, &amp;db );
            if ( MCO_S_OK == rc ) 
            {
                ...
            }
        }
        /* Close the database, stop the eXtremeDB runtime and free the database memory */
        rc = mco_db_close(db_name);
        mco_runtime_stop();
        free( dev.dev.conv.ptr );
    }
    &#160;</pre>
                    </div>
                    <p>Once the <i>e</i>X<i>treme</i>DB runtime is initialized and a database connection is established, a SQL interface to the database (of type <code>database_t</code>) is created by calling <code>mcoapi_create_engine()</code>:</p>
                    <div class="code-block"><pre>&#160;
        rc = mco_db_connect( db_name, &amp;db );
        if ( MCO_S_OK == rc ) 
        {
            database_t        engine;
            rc = (MCO_RET)mcoapi_create_engine(db, &amp;engine);
            if ( MCO_S_OK == rc ) {
                add_person( engine, "John Smith", "unknown", "Team leader", 75000, 80.3f, "Steve Smith");
                show_persons( engine, "John Smith");
            }
        }
        &#160;</pre>
                    </div>
                    <p>Then SQL statements can be executed by calling <code>mcosql_execute_query()</code> and <code>mcosql_execute_statement()</code> as demonstrated in the following code snippet from functions <code>add_person()</code> and <code>show_persons()</code>:</p>
                    <div class="code-block"><pre>                &#160;
    MCO_RET add_person(database_t engine, char const* name, char const* address, char const* position,
                uint4 salary, float rating, char const* manager)
    {
        MCO_RET rc = MCO_S_OK;
        ...
        rc = (MCO_RET)mcosql_execute_statement(engine, NULL, NULL,
            "insert into Person (name,address,position,salary,rating,manager) values (%s,%s,%s,%u,%f,%p)",
            name, address, position, salary, rating, manager );
        ...
    }
    &#160;
    MCO_RET show_persons( database_t engine, char* name_pattern )
    {
        MCO_RET rc = MCO_S_OK;
        data_source_t data_source = NULL;
        ...
        rc = (MCO_RET)mcosql_execute_query(engine, NULL, &amp;data_source, 
            "select name,position,salary,rating,manager,address from Person where name like %s",
            name_pattern );
        ...
    }
            &#160;</pre>
                    </div>
                    <p>For further information about initializing and destroying the SQL engine see the <a href="Engine_Initialization.htm">C&#160;API SQL Engine Initialization</a> page.</p>
                </blockquote>
            </blockquote>
            <p style="font-size: 6pt;margin-top: 0;margin-bottom: 0;">&#160;</p>
            <hr width="100%" size="0" align="center" />
            <p class="copyright" style="font-size: 8pt;"><a href="../../../Copyright_Notice.htm" title="Copyright Notice" alt="Copyright Notice">Â© 2001-2019 McObject LLC. All rights reserved</a>.</p>
            <p class="copyright" style="font-size: 8pt;">&#160;</p>
            <p class="copyrightFeedback" style="font-size: 8pt;"><a href="mailto:Support@McObject.com?subject=Online Documentation feedback">Send feedback</a> <span style="color: #000000;">on this topic to McObject. </span></p>
        </div>
    </body>
    <script id="MCO-LINKS">/* <![CDATA[ */
		(function(){
		var isFramed = false;
		try {
		isFramed = window != window.top || document != top.document || self.location != top.location;
		} catch (e) {
		isFramed = true;
		}
		if (!isFramed) {
		var link1 = document.createElement('a');
		link1.setAttribute('href','#');
		link1.setAttribute('id','back-id');
		link1.setAttribute('title','Go back');
		link1.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M0 0h24v24H0z" fill="none" /><path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" /></svg>';
		var link2 = document.createElement('a');
		link2.setAttribute('href','/');
		link2.setAttribute('title','Go to mcobject.com');
		link2.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var link3 = document.createElement('a');
		link3.setAttribute('href','/docs/extremedb.htm');
		link3.setAttribute('title','Go to table of content');
		link3.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="#555555"><path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z" /><path d="M0 0h24v24H0z" fill="none" /></svg>';
		var el = document.createElement('div');
		el.style.cssText = 'position:fixed;display:flex;flex-direction:column;right:16px;top:8px;background:#f7f7f7;box-shadow:4px 4px 4px #777777;padding:4px 8px;';
		el.appendChild(link1);
		el.appendChild(link2);
		el.appendChild(link3);
		document.body.append(el);
		document.querySelector('#back-id').addEventListener('click',function(e){e.preventDefault(); window.history.back();});
		}
		})();
	/* ]]> */</script>
</html>