DROP TABLE IF EXISTS datapoints;
DROP TABLE IF EXISTS result;

CREATE TABLE datapoints (time TIMESTAMP, d0 DOUBLE PRECISION, d1 DOUBLE PRECISION, d2 DOUBLE PRECISION, d3 DOUBLE PRECISION, d4 DOUBLE PRECISION, d5 DOUBLE PRECISION, d6 DOUBLE PRECISION, d7 DOUBLE PRECISION, d8 DOUBLE PRECISION, d9 DOUBLE PRECISION, d10 DOUBLE PRECISION, d11 DOUBLE PRECISION, d12 DOUBLE PRECISION, d13 DOUBLE PRECISION, d14 DOUBLE PRECISION, d15 DOUBLE PRECISION, d16 DOUBLE PRECISION, d17 DOUBLE PRECISION, d18 DOUBLE PRECISION, d19 DOUBLE PRECISION, d20 DOUBLE PRECISION, d21 DOUBLE PRECISION, d22 DOUBLE PRECISION, d23 DOUBLE PRECISION, d24 DOUBLE PRECISION, d25 DOUBLE PRECISION, d26 DOUBLE PRECISION, d27 DOUBLE PRECISION, d28 DOUBLE PRECISION, d29 DOUBLE PRECISION, d30 DOUBLE PRECISION, d31 DOUBLE PRECISION, d32 DOUBLE PRECISION, d33 DOUBLE PRECISION, d34 DOUBLE PRECISION, d35 DOUBLE PRECISION, d36 DOUBLE PRECISION, d37 DOUBLE PRECISION, d38 DOUBLE PRECISION, d39 DOUBLE PRECISION, d40 DOUBLE PRECISION, d41 DOUBLE PRECISION, d42 DOUBLE PRECISION, d43 DOUBLE PRECISION, d44 DOUBLE PRECISION, d45 DOUBLE PRECISION, d46 DOUBLE PRECISION, d47 DOUBLE PRECISION, d48 DOUBLE PRECISION, d49 DOUBLE PRECISION, d50 DOUBLE PRECISION, d51 DOUBLE PRECISION, d52 DOUBLE PRECISION, d53 DOUBLE PRECISION, d54 DOUBLE PRECISION, d55 DOUBLE PRECISION, d56 DOUBLE PRECISION, d57 DOUBLE PRECISION, d58 DOUBLE PRECISION, d59 DOUBLE PRECISION, d60 DOUBLE PRECISION, d61 DOUBLE PRECISION, d62 DOUBLE PRECISION, d63 DOUBLE PRECISION, d64 DOUBLE PRECISION, d65 DOUBLE PRECISION, d66 DOUBLE PRECISION, d67 DOUBLE PRECISION, d68 DOUBLE PRECISION, d69 DOUBLE PRECISION, d70 DOUBLE PRECISION, d71 DOUBLE PRECISION, d72 DOUBLE PRECISION, d73 DOUBLE PRECISION, d74 DOUBLE PRECISION, d75 DOUBLE PRECISION, d76 DOUBLE PRECISION, d77 DOUBLE PRECISION, d78 DOUBLE PRECISION, d79 DOUBLE PRECISION, d80 DOUBLE PRECISION, d81 DOUBLE PRECISION, d82 DOUBLE PRECISION, d83 DOUBLE PRECISION, d84 DOUBLE PRECISION, d85 DOUBLE PRECISION, d86 DOUBLE PRECISION, d87 DOUBLE PRECISION, d88 DOUBLE PRECISION, d89 DOUBLE PRECISION, d90 DOUBLE PRECISION, d91 DOUBLE PRECISION, d92 DOUBLE PRECISION, d93 DOUBLE PRECISION, d94 DOUBLE PRECISION, d95 DOUBLE PRECISION, d96 DOUBLE PRECISION, d97 DOUBLE PRECISION, d98 DOUBLE PRECISION, d99 DOUBLE PRECISION, l0 DOUBLE PRECISION, l1 DOUBLE PRECISION, l2 DOUBLE PRECISION, l3 DOUBLE PRECISION, l4 DOUBLE PRECISION, l5 DOUBLE PRECISION, l6 DOUBLE PRECISION, l7 DOUBLE PRECISION, l8 DOUBLE PRECISION, l9 DOUBLE PRECISION, l10 DOUBLE PRECISION, l11 DOUBLE PRECISION, l12 DOUBLE PRECISION, l13 DOUBLE PRECISION, l14 DOUBLE PRECISION, l15 DOUBLE PRECISION, l16 DOUBLE PRECISION, l17 DOUBLE PRECISION, l18 DOUBLE PRECISION, l19 DOUBLE PRECISION, l20 DOUBLE PRECISION, l21 DOUBLE PRECISION, l22 DOUBLE PRECISION, l23 DOUBLE PRECISION, l24 DOUBLE PRECISION, l25 DOUBLE PRECISION, l26 DOUBLE PRECISION, l27 DOUBLE PRECISION, l28 DOUBLE PRECISION, l29 DOUBLE PRECISION, l30 DOUBLE PRECISION, l31 DOUBLE PRECISION, l32 DOUBLE PRECISION, l33 DOUBLE PRECISION, l34 DOUBLE PRECISION, l35 DOUBLE PRECISION, l36 DOUBLE PRECISION, l37 DOUBLE PRECISION, l38 DOUBLE PRECISION, l39 DOUBLE PRECISION, l40 DOUBLE PRECISION, l41 DOUBLE PRECISION, l42 DOUBLE PRECISION, l43 DOUBLE PRECISION, l44 DOUBLE PRECISION, l45 DOUBLE PRECISION, l46 DOUBLE PRECISION, l47 DOUBLE PRECISION, l48 DOUBLE PRECISION, l49 DOUBLE PRECISION, l50 DOUBLE PRECISION, l51 DOUBLE PRECISION, l52 DOUBLE PRECISION, l53 DOUBLE PRECISION, l54 DOUBLE PRECISION, l55 DOUBLE PRECISION, l56 DOUBLE PRECISION, l57 DOUBLE PRECISION, l58 DOUBLE PRECISION, l59 DOUBLE PRECISION, l60 DOUBLE PRECISION, l61 DOUBLE PRECISION, l62 DOUBLE PRECISION, l63 DOUBLE PRECISION, l64 DOUBLE PRECISION, l65 DOUBLE PRECISION, l66 DOUBLE PRECISION, l67 DOUBLE PRECISION, l68 DOUBLE PRECISION, l69 DOUBLE PRECISION, l70 DOUBLE PRECISION, l71 DOUBLE PRECISION, l72 DOUBLE PRECISION, l73 DOUBLE PRECISION, l74 DOUBLE PRECISION, l75 DOUBLE PRECISION, l76 DOUBLE PRECISION, l77 DOUBLE PRECISION, l78 DOUBLE PRECISION, l79 DOUBLE PRECISION, l80 DOUBLE PRECISION, l81 DOUBLE PRECISION, l82 DOUBLE PRECISION, l83 DOUBLE PRECISION, l84 DOUBLE PRECISION, l85 DOUBLE PRECISION, l86 DOUBLE PRECISION, l87 DOUBLE PRECISION, l88 DOUBLE PRECISION, l89 DOUBLE PRECISION, l90 DOUBLE PRECISION, l91 DOUBLE PRECISION, l92 DOUBLE PRECISION, l93 DOUBLE PRECISION, l94 DOUBLE PRECISION, l95 DOUBLE PRECISION, l96 DOUBLE PRECISION, l97 DOUBLE PRECISION, l98 DOUBLE PRECISION, l99 DOUBLE PRECISION, l INTEGER);
CREATE TABLE result (l INTEGER);

CREATE OR REPLACE FUNCTION get_time() RETURNS FLOAT
LANGUAGE PYTHON
{
        from datetime import datetime
        return (datetime.now() - datetime(1970, 1, 1)).total_seconds()
};

CREATE OR REPLACE FUNCTION knn_alg(time TIMESTAMP, d0 DOUBLE PRECISION, d1 DOUBLE PRECISION, d2 DOUBLE PRECISION, d3 DOUBLE PRECISION, d4 DOUBLE PRECISION, d5 DOUBLE PRECISION, d6 DOUBLE PRECISION, d7 DOUBLE PRECISION, d8 DOUBLE PRECISION, d9 DOUBLE PRECISION, d10 DOUBLE PRECISION, d11 DOUBLE PRECISION, d12 DOUBLE PRECISION, d13 DOUBLE PRECISION, d14 DOUBLE PRECISION, d15 DOUBLE PRECISION, d16 DOUBLE PRECISION, d17 DOUBLE PRECISION, d18 DOUBLE PRECISION, d19 DOUBLE PRECISION, d20 DOUBLE PRECISION, d21 DOUBLE PRECISION, d22 DOUBLE PRECISION, d23 DOUBLE PRECISION, d24 DOUBLE PRECISION, d25 DOUBLE PRECISION, d26 DOUBLE PRECISION, d27 DOUBLE PRECISION, d28 DOUBLE PRECISION, d29 DOUBLE PRECISION, d30 DOUBLE PRECISION, d31 DOUBLE PRECISION, d32 DOUBLE PRECISION, d33 DOUBLE PRECISION, d34 DOUBLE PRECISION, d35 DOUBLE PRECISION, d36 DOUBLE PRECISION, d37 DOUBLE PRECISION, d38 DOUBLE PRECISION, d39 DOUBLE PRECISION, d40 DOUBLE PRECISION, d41 DOUBLE PRECISION, d42 DOUBLE PRECISION, d43 DOUBLE PRECISION, d44 DOUBLE PRECISION, d45 DOUBLE PRECISION, d46 DOUBLE PRECISION, d47 DOUBLE PRECISION, d48 DOUBLE PRECISION, d49 DOUBLE PRECISION, d50 DOUBLE PRECISION, d51 DOUBLE PRECISION, d52 DOUBLE PRECISION, d53 DOUBLE PRECISION, d54 DOUBLE PRECISION, d55 DOUBLE PRECISION, d56 DOUBLE PRECISION, d57 DOUBLE PRECISION, d58 DOUBLE PRECISION, d59 DOUBLE PRECISION, d60 DOUBLE PRECISION, d61 DOUBLE PRECISION, d62 DOUBLE PRECISION, d63 DOUBLE PRECISION, d64 DOUBLE PRECISION, d65 DOUBLE PRECISION, d66 DOUBLE PRECISION, d67 DOUBLE PRECISION, d68 DOUBLE PRECISION, d69 DOUBLE PRECISION, d70 DOUBLE PRECISION, d71 DOUBLE PRECISION, d72 DOUBLE PRECISION, d73 DOUBLE PRECISION, d74 DOUBLE PRECISION, d75 DOUBLE PRECISION, d76 DOUBLE PRECISION, d77 DOUBLE PRECISION, d78 DOUBLE PRECISION, d79 DOUBLE PRECISION, d80 DOUBLE PRECISION, d81 DOUBLE PRECISION, d82 DOUBLE PRECISION, d83 DOUBLE PRECISION, d84 DOUBLE PRECISION, d85 DOUBLE PRECISION, d86 DOUBLE PRECISION, d87 DOUBLE PRECISION, d88 DOUBLE PRECISION, d89 DOUBLE PRECISION, d90 DOUBLE PRECISION, d91 DOUBLE PRECISION, d92 DOUBLE PRECISION, d93 DOUBLE PRECISION, d94 DOUBLE PRECISION, d95 DOUBLE PRECISION, d96 DOUBLE PRECISION, d97 DOUBLE PRECISION, d98 DOUBLE PRECISION, d99 DOUBLE PRECISION, l0 DOUBLE PRECISION, l1 DOUBLE PRECISION, l2 DOUBLE PRECISION, l3 DOUBLE PRECISION, l4 DOUBLE PRECISION, l5 DOUBLE PRECISION, l6 DOUBLE PRECISION, l7 DOUBLE PRECISION, l8 DOUBLE PRECISION, l9 DOUBLE PRECISION, l10 DOUBLE PRECISION, l11 DOUBLE PRECISION, l12 DOUBLE PRECISION, l13 DOUBLE PRECISION, l14 DOUBLE PRECISION, l15 DOUBLE PRECISION, l16 DOUBLE PRECISION, l17 DOUBLE PRECISION, l18 DOUBLE PRECISION, l19 DOUBLE PRECISION, l20 DOUBLE PRECISION, l21 DOUBLE PRECISION, l22 DOUBLE PRECISION, l23 DOUBLE PRECISION, l24 DOUBLE PRECISION, l25 DOUBLE PRECISION, l26 DOUBLE PRECISION, l27 DOUBLE PRECISION, l28 DOUBLE PRECISION, l29 DOUBLE PRECISION, l30 DOUBLE PRECISION, l31 DOUBLE PRECISION, l32 DOUBLE PRECISION, l33 DOUBLE PRECISION, l34 DOUBLE PRECISION, l35 DOUBLE PRECISION, l36 DOUBLE PRECISION, l37 DOUBLE PRECISION, l38 DOUBLE PRECISION, l39 DOUBLE PRECISION, l40 DOUBLE PRECISION, l41 DOUBLE PRECISION, l42 DOUBLE PRECISION, l43 DOUBLE PRECISION, l44 DOUBLE PRECISION, l45 DOUBLE PRECISION, l46 DOUBLE PRECISION, l47 DOUBLE PRECISION, l48 DOUBLE PRECISION, l49 DOUBLE PRECISION, l50 DOUBLE PRECISION, l51 DOUBLE PRECISION, l52 DOUBLE PRECISION, l53 DOUBLE PRECISION, l54 DOUBLE PRECISION, l55 DOUBLE PRECISION, l56 DOUBLE PRECISION, l57 DOUBLE PRECISION, l58 DOUBLE PRECISION, l59 DOUBLE PRECISION, l60 DOUBLE PRECISION, l61 DOUBLE PRECISION, l62 DOUBLE PRECISION, l63 DOUBLE PRECISION, l64 DOUBLE PRECISION, l65 DOUBLE PRECISION, l66 DOUBLE PRECISION, l67 DOUBLE PRECISION, l68 DOUBLE PRECISION, l69 DOUBLE PRECISION, l70 DOUBLE PRECISION, l71 DOUBLE PRECISION, l72 DOUBLE PRECISION, l73 DOUBLE PRECISION, l74 DOUBLE PRECISION, l75 DOUBLE PRECISION, l76 DOUBLE PRECISION, l77 DOUBLE PRECISION, l78 DOUBLE PRECISION, l79 DOUBLE PRECISION, l80 DOUBLE PRECISION, l81 DOUBLE PRECISION, l82 DOUBLE PRECISION, l83 DOUBLE PRECISION, l84 DOUBLE PRECISION, l85 DOUBLE PRECISION, l86 DOUBLE PRECISION, l87 DOUBLE PRECISION, l88 DOUBLE PRECISION, l89 DOUBLE PRECISION, l90 DOUBLE PRECISION, l91 DOUBLE PRECISION, l92 DOUBLE PRECISION, l93 DOUBLE PRECISION, l94 DOUBLE PRECISION, l95 DOUBLE PRECISION, l96 DOUBLE PRECISION, l97 DOUBLE PRECISION, l98 DOUBLE PRECISION, l99 DOUBLE PRECISION, l INTEGER) RETURNS TABLE(l INTEGER)
LANGUAGE PYTHON
{
        import sys
        import numpy as np
        sys.path.append('/home/gabi/Thesis-master/Algorithms/knn')
        import knn

        cluster_count = 10

        matrix = np.array([d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31, d32, d33, d34, d35, d36, d37, d38, d39, d40, d41, d42, d43, d44, d45, d46, d47, d48, d49, d50, d51, d52, d53, d54, d55, d56, d57, d58, d59, d60, d61, d62, d63, d64, d65, d66, d67, d68, d69, d70, d71, d72, d73, d74, d75, d76, d77, d78, d79, d80, d81, d82, d83, d84, d85, d86, d87, d88, d89, d90, d91, d92, d93, d94, d95, d96, d97, d98, d99]).T
        label_matrix = np.array([l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22, l23, l24, l25, l26, l27, l28, l29, l30, l31, l32, l33, l34, l35, l36, l37, l38, l39, l40, l41, l42, l43, l44, l45, l46, l47, l48, l49, l50, l51, l52, l53, l54, l55, l56, l57, l58, l59, l60, l61, l62, l63, l64, l65, l66, l67, l68, l69, l70, l71, l72, l73, l74, l75, l76, l77, l78, l79, l80, l81, l82, l83, l84, l85, l86, l87, l88, l89, l90, l91, l92, l93, l94, l95, l96, l97, l98, l99]).T

        result = knn.knn(label_matrix, l, matrix, 3)

        return [result]
};

DECLARE lines INTEGER;
DECLARE columns INTEGER;
SET lines=100;
SET columns=100;

-- Writing data *************************************************************************************
DECLARE initial_time FLOAT;
DECLARE final_time FLOAT;
DECLARE total_size INTEGER;

SET initial_time = get_time();
COPY INTO datapoints FROM '/home/gabi/Thesis-master/Datasets/synthetic.txt.csv' USING DELIMITERS ',','\n';
SET final_time = get_time();
SET total_size = ( SELECT SUM(columnsize) FROM storage() WHERE table='datapoints' );

SELECT
	total_size as Total_size_bytes,
        CAST( total_size  as FLOAT) / 1024.0 / 1024.0 as Total_size_megabytes,
        final_time - initial_time as Total_time_seconds,
        CAST(lines as FLOAT) / (final_time - initial_time) AS Throughput_inserts_per_second,
        CAST(lines * columns as FLOAT) / (final_time - initial_time) AS Throughput_values_per_second;
-- Writing data *************************************************************************************


-- KNN *******************************************************************************************
DECLARE initial_time_knn FLOAT;
DECLARE final_time_knn FLOAT;

SET initial_time_knn = get_time();
INSERT INTO result SELECT * FROM knn_alg( (SELECT * FROM datapoints) );
SET final_time_knn = get_time();

SELECT final_time_knn - initial_time_knn as Time_seconds;
-- KNN *******************************************************************************************

