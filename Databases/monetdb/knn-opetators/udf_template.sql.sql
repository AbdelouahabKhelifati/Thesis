DROP TABLE IF EXISTS ldatapoints;
DROP TABLE IF EXISTS udatapoints;
DROP TABLE IF EXISTS result;

CREATE TABLE ldatapoints (time TIMESTAMP, d0 DOUBLE PRECISION, d1 DOUBLE PRECISION, d2 DOUBLE PRECISION, d3 DOUBLE PRECISION, d4 DOUBLE PRECISION, d5 DOUBLE PRECISION, d6 DOUBLE PRECISION, d7 DOUBLE PRECISION, d8 DOUBLE PRECISION, d9 DOUBLE PRECISION, d10 DOUBLE PRECISION, d11 DOUBLE PRECISION, d12 DOUBLE PRECISION, d13 DOUBLE PRECISION, d14 DOUBLE PRECISION, d15 DOUBLE PRECISION, d16 DOUBLE PRECISION, d17 DOUBLE PRECISION, d18 DOUBLE PRECISION, d19 DOUBLE PRECISION, d20 DOUBLE PRECISION, d21 DOUBLE PRECISION, d22 DOUBLE PRECISION, d23 DOUBLE PRECISION, d24 DOUBLE PRECISION, d25 DOUBLE PRECISION, d26 DOUBLE PRECISION, d27 DOUBLE PRECISION, d28 DOUBLE PRECISION, d29 DOUBLE PRECISION, d30 DOUBLE PRECISION, d31 DOUBLE PRECISION, d32 DOUBLE PRECISION, d33 DOUBLE PRECISION, d34 DOUBLE PRECISION, d35 DOUBLE PRECISION, d36 DOUBLE PRECISION, d37 DOUBLE PRECISION, d38 DOUBLE PRECISION, d39 DOUBLE PRECISION, d40 DOUBLE PRECISION, d41 DOUBLE PRECISION, d42 DOUBLE PRECISION, d43 DOUBLE PRECISION, d44 DOUBLE PRECISION, d45 DOUBLE PRECISION, d46 DOUBLE PRECISION, d47 DOUBLE PRECISION, d48 DOUBLE PRECISION, d49 DOUBLE PRECISION, d50 DOUBLE PRECISION, d51 DOUBLE PRECISION, d52 DOUBLE PRECISION, d53 DOUBLE PRECISION, d54 DOUBLE PRECISION, d55 DOUBLE PRECISION, d56 DOUBLE PRECISION, d57 DOUBLE PRECISION, d58 DOUBLE PRECISION, d59 DOUBLE PRECISION, d60 DOUBLE PRECISION, d61 DOUBLE PRECISION, d62 DOUBLE PRECISION, d63 DOUBLE PRECISION, d64 DOUBLE PRECISION, d65 DOUBLE PRECISION, d66 DOUBLE PRECISION, d67 DOUBLE PRECISION, d68 DOUBLE PRECISION, d69 DOUBLE PRECISION, d70 DOUBLE PRECISION, d71 DOUBLE PRECISION, d72 DOUBLE PRECISION, d73 DOUBLE PRECISION, d74 DOUBLE PRECISION, d75 DOUBLE PRECISION, d76 DOUBLE PRECISION, d77 DOUBLE PRECISION, d78 DOUBLE PRECISION, d79 DOUBLE PRECISION, d80 DOUBLE PRECISION, d81 DOUBLE PRECISION, d82 DOUBLE PRECISION, d83 DOUBLE PRECISION, d84 DOUBLE PRECISION, d85 DOUBLE PRECISION, d86 DOUBLE PRECISION, d87 DOUBLE PRECISION, d88 DOUBLE PRECISION, d89 DOUBLE PRECISION, d90 DOUBLE PRECISION, d91 DOUBLE PRECISION, d92 DOUBLE PRECISION, d93 DOUBLE PRECISION, d94 DOUBLE PRECISION, d95 DOUBLE PRECISION, d96 DOUBLE PRECISION, d97 DOUBLE PRECISION, d98 DOUBLE PRECISION, d99 DOUBLE PRECISION, l INTEGER);
CREATE TABLE udatapoints (time TIMESTAMP, d0 DOUBLE PRECISION, d1 DOUBLE PRECISION, d2 DOUBLE PRECISION, d3 DOUBLE PRECISION, d4 DOUBLE PRECISION, d5 DOUBLE PRECISION, d6 DOUBLE PRECISION, d7 DOUBLE PRECISION, d8 DOUBLE PRECISION, d9 DOUBLE PRECISION, d10 DOUBLE PRECISION, d11 DOUBLE PRECISION, d12 DOUBLE PRECISION, d13 DOUBLE PRECISION, d14 DOUBLE PRECISION, d15 DOUBLE PRECISION, d16 DOUBLE PRECISION, d17 DOUBLE PRECISION, d18 DOUBLE PRECISION, d19 DOUBLE PRECISION, d20 DOUBLE PRECISION, d21 DOUBLE PRECISION, d22 DOUBLE PRECISION, d23 DOUBLE PRECISION, d24 DOUBLE PRECISION, d25 DOUBLE PRECISION, d26 DOUBLE PRECISION, d27 DOUBLE PRECISION, d28 DOUBLE PRECISION, d29 DOUBLE PRECISION, d30 DOUBLE PRECISION, d31 DOUBLE PRECISION, d32 DOUBLE PRECISION, d33 DOUBLE PRECISION, d34 DOUBLE PRECISION, d35 DOUBLE PRECISION, d36 DOUBLE PRECISION, d37 DOUBLE PRECISION, d38 DOUBLE PRECISION, d39 DOUBLE PRECISION, d40 DOUBLE PRECISION, d41 DOUBLE PRECISION, d42 DOUBLE PRECISION, d43 DOUBLE PRECISION, d44 DOUBLE PRECISION, d45 DOUBLE PRECISION, d46 DOUBLE PRECISION, d47 DOUBLE PRECISION, d48 DOUBLE PRECISION, d49 DOUBLE PRECISION, d50 DOUBLE PRECISION, d51 DOUBLE PRECISION, d52 DOUBLE PRECISION, d53 DOUBLE PRECISION, d54 DOUBLE PRECISION, d55 DOUBLE PRECISION, d56 DOUBLE PRECISION, d57 DOUBLE PRECISION, d58 DOUBLE PRECISION, d59 DOUBLE PRECISION, d60 DOUBLE PRECISION, d61 DOUBLE PRECISION, d62 DOUBLE PRECISION, d63 DOUBLE PRECISION, d64 DOUBLE PRECISION, d65 DOUBLE PRECISION, d66 DOUBLE PRECISION, d67 DOUBLE PRECISION, d68 DOUBLE PRECISION, d69 DOUBLE PRECISION, d70 DOUBLE PRECISION, d71 DOUBLE PRECISION, d72 DOUBLE PRECISION, d73 DOUBLE PRECISION, d74 DOUBLE PRECISION, d75 DOUBLE PRECISION, d76 DOUBLE PRECISION, d77 DOUBLE PRECISION, d78 DOUBLE PRECISION, d79 DOUBLE PRECISION, d80 DOUBLE PRECISION, d81 DOUBLE PRECISION, d82 DOUBLE PRECISION, d83 DOUBLE PRECISION, d84 DOUBLE PRECISION, d85 DOUBLE PRECISION, d86 DOUBLE PRECISION, d87 DOUBLE PRECISION, d88 DOUBLE PRECISION, d89 DOUBLE PRECISION, d90 DOUBLE PRECISION, d91 DOUBLE PRECISION, d92 DOUBLE PRECISION, d93 DOUBLE PRECISION, d94 DOUBLE PRECISION, d95 DOUBLE PRECISION, d96 DOUBLE PRECISION, d97 DOUBLE PRECISION, d98 DOUBLE PRECISION, d99 DOUBLE PRECISION);
CREATE TABLE result (time TIMESTAMP, l INTEGER);


CREATE OR REPLACE FUNCTION DIST(a0 DOUBLE PRECISION, b0 DOUBLE PRECISION, a1 DOUBLE PRECISION, b1 DOUBLE PRECISION, a2 DOUBLE PRECISION, b2 DOUBLE PRECISION, a3 DOUBLE PRECISION, b3 DOUBLE PRECISION, a4 DOUBLE PRECISION, b4 DOUBLE PRECISION, a5 DOUBLE PRECISION, b5 DOUBLE PRECISION, a6 DOUBLE PRECISION, b6 DOUBLE PRECISION, a7 DOUBLE PRECISION, b7 DOUBLE PRECISION, a8 DOUBLE PRECISION, b8 DOUBLE PRECISION, a9 DOUBLE PRECISION, b9 DOUBLE PRECISION, a10 DOUBLE PRECISION, b10 DOUBLE PRECISION, a11 DOUBLE PRECISION, b11 DOUBLE PRECISION, a12 DOUBLE PRECISION, b12 DOUBLE PRECISION, a13 DOUBLE PRECISION, b13 DOUBLE PRECISION, a14 DOUBLE PRECISION, b14 DOUBLE PRECISION, a15 DOUBLE PRECISION, b15 DOUBLE PRECISION, a16 DOUBLE PRECISION, b16 DOUBLE PRECISION, a17 DOUBLE PRECISION, b17 DOUBLE PRECISION, a18 DOUBLE PRECISION, b18 DOUBLE PRECISION, a19 DOUBLE PRECISION, b19 DOUBLE PRECISION, a20 DOUBLE PRECISION, b20 DOUBLE PRECISION, a21 DOUBLE PRECISION, b21 DOUBLE PRECISION, a22 DOUBLE PRECISION, b22 DOUBLE PRECISION, a23 DOUBLE PRECISION, b23 DOUBLE PRECISION, a24 DOUBLE PRECISION, b24 DOUBLE PRECISION, a25 DOUBLE PRECISION, b25 DOUBLE PRECISION, a26 DOUBLE PRECISION, b26 DOUBLE PRECISION, a27 DOUBLE PRECISION, b27 DOUBLE PRECISION, a28 DOUBLE PRECISION, b28 DOUBLE PRECISION, a29 DOUBLE PRECISION, b29 DOUBLE PRECISION, a30 DOUBLE PRECISION, b30 DOUBLE PRECISION, a31 DOUBLE PRECISION, b31 DOUBLE PRECISION, a32 DOUBLE PRECISION, b32 DOUBLE PRECISION, a33 DOUBLE PRECISION, b33 DOUBLE PRECISION, a34 DOUBLE PRECISION, b34 DOUBLE PRECISION, a35 DOUBLE PRECISION, b35 DOUBLE PRECISION, a36 DOUBLE PRECISION, b36 DOUBLE PRECISION, a37 DOUBLE PRECISION, b37 DOUBLE PRECISION, a38 DOUBLE PRECISION, b38 DOUBLE PRECISION, a39 DOUBLE PRECISION, b39 DOUBLE PRECISION, a40 DOUBLE PRECISION, b40 DOUBLE PRECISION, a41 DOUBLE PRECISION, b41 DOUBLE PRECISION, a42 DOUBLE PRECISION, b42 DOUBLE PRECISION, a43 DOUBLE PRECISION, b43 DOUBLE PRECISION, a44 DOUBLE PRECISION, b44 DOUBLE PRECISION, a45 DOUBLE PRECISION, b45 DOUBLE PRECISION, a46 DOUBLE PRECISION, b46 DOUBLE PRECISION, a47 DOUBLE PRECISION, b47 DOUBLE PRECISION, a48 DOUBLE PRECISION, b48 DOUBLE PRECISION, a49 DOUBLE PRECISION, b49 DOUBLE PRECISION, a50 DOUBLE PRECISION, b50 DOUBLE PRECISION, a51 DOUBLE PRECISION, b51 DOUBLE PRECISION, a52 DOUBLE PRECISION, b52 DOUBLE PRECISION, a53 DOUBLE PRECISION, b53 DOUBLE PRECISION, a54 DOUBLE PRECISION, b54 DOUBLE PRECISION, a55 DOUBLE PRECISION, b55 DOUBLE PRECISION, a56 DOUBLE PRECISION, b56 DOUBLE PRECISION, a57 DOUBLE PRECISION, b57 DOUBLE PRECISION, a58 DOUBLE PRECISION, b58 DOUBLE PRECISION, a59 DOUBLE PRECISION, b59 DOUBLE PRECISION, a60 DOUBLE PRECISION, b60 DOUBLE PRECISION, a61 DOUBLE PRECISION, b61 DOUBLE PRECISION, a62 DOUBLE PRECISION, b62 DOUBLE PRECISION, a63 DOUBLE PRECISION, b63 DOUBLE PRECISION, a64 DOUBLE PRECISION, b64 DOUBLE PRECISION, a65 DOUBLE PRECISION, b65 DOUBLE PRECISION, a66 DOUBLE PRECISION, b66 DOUBLE PRECISION, a67 DOUBLE PRECISION, b67 DOUBLE PRECISION, a68 DOUBLE PRECISION, b68 DOUBLE PRECISION, a69 DOUBLE PRECISION, b69 DOUBLE PRECISION, a70 DOUBLE PRECISION, b70 DOUBLE PRECISION, a71 DOUBLE PRECISION, b71 DOUBLE PRECISION, a72 DOUBLE PRECISION, b72 DOUBLE PRECISION, a73 DOUBLE PRECISION, b73 DOUBLE PRECISION, a74 DOUBLE PRECISION, b74 DOUBLE PRECISION, a75 DOUBLE PRECISION, b75 DOUBLE PRECISION, a76 DOUBLE PRECISION, b76 DOUBLE PRECISION, a77 DOUBLE PRECISION, b77 DOUBLE PRECISION, a78 DOUBLE PRECISION, b78 DOUBLE PRECISION, a79 DOUBLE PRECISION, b79 DOUBLE PRECISION, a80 DOUBLE PRECISION, b80 DOUBLE PRECISION, a81 DOUBLE PRECISION, b81 DOUBLE PRECISION, a82 DOUBLE PRECISION, b82 DOUBLE PRECISION, a83 DOUBLE PRECISION, b83 DOUBLE PRECISION, a84 DOUBLE PRECISION, b84 DOUBLE PRECISION, a85 DOUBLE PRECISION, b85 DOUBLE PRECISION, a86 DOUBLE PRECISION, b86 DOUBLE PRECISION, a87 DOUBLE PRECISION, b87 DOUBLE PRECISION, a88 DOUBLE PRECISION, b88 DOUBLE PRECISION, a89 DOUBLE PRECISION, b89 DOUBLE PRECISION, a90 DOUBLE PRECISION, b90 DOUBLE PRECISION, a91 DOUBLE PRECISION, b91 DOUBLE PRECISION, a92 DOUBLE PRECISION, b92 DOUBLE PRECISION, a93 DOUBLE PRECISION, b93 DOUBLE PRECISION, a94 DOUBLE PRECISION, b94 DOUBLE PRECISION, a95 DOUBLE PRECISION, b95 DOUBLE PRECISION, a96 DOUBLE PRECISION, b96 DOUBLE PRECISION, a97 DOUBLE PRECISION, b97 DOUBLE PRECISION, a98 DOUBLE PRECISION, b98 DOUBLE PRECISION, a99 DOUBLE PRECISION, b99 DOUBLE PRECISION) RETURNS DOUBLE PRECISION
BEGIN
	RETURN SQRT( POWER(a0 - b0, 2) ) + SQRT( POWER(a1 - b1, 2) ) + SQRT( POWER(a2 - b2, 2) ) + SQRT( POWER(a3 - b3, 2) ) + SQRT( POWER(a4 - b4, 2) ) + SQRT( POWER(a5 - b5, 2) ) + SQRT( POWER(a6 - b6, 2) ) + SQRT( POWER(a7 - b7, 2) ) + SQRT( POWER(a8 - b8, 2) ) + SQRT( POWER(a9 - b9, 2) ) + SQRT( POWER(a10 - b10, 2) ) + SQRT( POWER(a11 - b11, 2) ) + SQRT( POWER(a12 - b12, 2) ) + SQRT( POWER(a13 - b13, 2) ) + SQRT( POWER(a14 - b14, 2) ) + SQRT( POWER(a15 - b15, 2) ) + SQRT( POWER(a16 - b16, 2) ) + SQRT( POWER(a17 - b17, 2) ) + SQRT( POWER(a18 - b18, 2) ) + SQRT( POWER(a19 - b19, 2) ) + SQRT( POWER(a20 - b20, 2) ) + SQRT( POWER(a21 - b21, 2) ) + SQRT( POWER(a22 - b22, 2) ) + SQRT( POWER(a23 - b23, 2) ) + SQRT( POWER(a24 - b24, 2) ) + SQRT( POWER(a25 - b25, 2) ) + SQRT( POWER(a26 - b26, 2) ) + SQRT( POWER(a27 - b27, 2) ) + SQRT( POWER(a28 - b28, 2) ) + SQRT( POWER(a29 - b29, 2) ) + SQRT( POWER(a30 - b30, 2) ) + SQRT( POWER(a31 - b31, 2) ) + SQRT( POWER(a32 - b32, 2) ) + SQRT( POWER(a33 - b33, 2) ) + SQRT( POWER(a34 - b34, 2) ) + SQRT( POWER(a35 - b35, 2) ) + SQRT( POWER(a36 - b36, 2) ) + SQRT( POWER(a37 - b37, 2) ) + SQRT( POWER(a38 - b38, 2) ) + SQRT( POWER(a39 - b39, 2) ) + SQRT( POWER(a40 - b40, 2) ) + SQRT( POWER(a41 - b41, 2) ) + SQRT( POWER(a42 - b42, 2) ) + SQRT( POWER(a43 - b43, 2) ) + SQRT( POWER(a44 - b44, 2) ) + SQRT( POWER(a45 - b45, 2) ) + SQRT( POWER(a46 - b46, 2) ) + SQRT( POWER(a47 - b47, 2) ) + SQRT( POWER(a48 - b48, 2) ) + SQRT( POWER(a49 - b49, 2) ) + SQRT( POWER(a50 - b50, 2) ) + SQRT( POWER(a51 - b51, 2) ) + SQRT( POWER(a52 - b52, 2) ) + SQRT( POWER(a53 - b53, 2) ) + SQRT( POWER(a54 - b54, 2) ) + SQRT( POWER(a55 - b55, 2) ) + SQRT( POWER(a56 - b56, 2) ) + SQRT( POWER(a57 - b57, 2) ) + SQRT( POWER(a58 - b58, 2) ) + SQRT( POWER(a59 - b59, 2) ) + SQRT( POWER(a60 - b60, 2) ) + SQRT( POWER(a61 - b61, 2) ) + SQRT( POWER(a62 - b62, 2) ) + SQRT( POWER(a63 - b63, 2) ) + SQRT( POWER(a64 - b64, 2) ) + SQRT( POWER(a65 - b65, 2) ) + SQRT( POWER(a66 - b66, 2) ) + SQRT( POWER(a67 - b67, 2) ) + SQRT( POWER(a68 - b68, 2) ) + SQRT( POWER(a69 - b69, 2) ) + SQRT( POWER(a70 - b70, 2) ) + SQRT( POWER(a71 - b71, 2) ) + SQRT( POWER(a72 - b72, 2) ) + SQRT( POWER(a73 - b73, 2) ) + SQRT( POWER(a74 - b74, 2) ) + SQRT( POWER(a75 - b75, 2) ) + SQRT( POWER(a76 - b76, 2) ) + SQRT( POWER(a77 - b77, 2) ) + SQRT( POWER(a78 - b78, 2) ) + SQRT( POWER(a79 - b79, 2) ) + SQRT( POWER(a80 - b80, 2) ) + SQRT( POWER(a81 - b81, 2) ) + SQRT( POWER(a82 - b82, 2) ) + SQRT( POWER(a83 - b83, 2) ) + SQRT( POWER(a84 - b84, 2) ) + SQRT( POWER(a85 - b85, 2) ) + SQRT( POWER(a86 - b86, 2) ) + SQRT( POWER(a87 - b87, 2) ) + SQRT( POWER(a88 - b88, 2) ) + SQRT( POWER(a89 - b89, 2) ) + SQRT( POWER(a90 - b90, 2) ) + SQRT( POWER(a91 - b91, 2) ) + SQRT( POWER(a92 - b92, 2) ) + SQRT( POWER(a93 - b93, 2) ) + SQRT( POWER(a94 - b94, 2) ) + SQRT( POWER(a95 - b95, 2) ) + SQRT( POWER(a96 - b96, 2) ) + SQRT( POWER(a97 - b97, 2) ) + SQRT( POWER(a98 - b98, 2) ) + SQRT( POWER(a99 - b99, 2) );
END;

CREATE OR REPLACE FUNCTION knn_alg(time TIMESTAMP, l INTEGER, dist DOUBLE PRECISION) RETURNS TABLE(time TIMESTAMP, l INTEGER)
LANGUAGE PYTHON
{
	from Queue import PriorityQueue
	
	q = {}
	for i in range(len(time)):
		current_time = time[i]
		if not(current_time in q):
			q[current_time] = PriorityQueue()
		q[current_time].put( (-dist[i], l[i]) )
		while q[current_time].qsize() > 3:
			q[current_time].get()
	
	result_time = []
	result_label = []	
	for t in q:
		a = q[t]
		l_size = a.qsize()
		l = [0] * l_size
		for i in range(l_size):
			l[i] = a.get()[1]
		result_time.append(t)
		result_label.append( max(set(l), key = l.count) )
	return [result_time, result_label]
};

DECLARE lines INTEGER;
DECLARE columns INTEGER;
SET lines=100;
SET columns=100;

-- Writing data *************************************************************************************
DECLARE initial_time FLOAT;
DECLARE final_time FLOAT;
DECLARE total_size INTEGER;

SET initial_time = get_time();
COPY INTO ldatapoints FROM '/home/gabi/Thesis-master/Datasets/synthetic.txt_labeled.csv' USING DELIMITERS ',','\n';
COPY INTO udatapoints FROM '/home/gabi/Thesis-master/Datasets/synthetic.txt_unlabeled.csv' USING DELIMITERS ',','\n';
SET final_time = get_time();

SELECT
        final_time - initial_time as Total_time_seconds,
        CAST(lines as FLOAT) / (final_time - initial_time) AS Throughput_inserts_per_second,
        CAST(lines * columns as FLOAT) / (final_time - initial_time) AS Throughput_values_per_second;
-- Writing data *************************************************************************************

-- KNN *******************************************************************************************
DECLARE initial_time_knn FLOAT;
DECLARE final_time_knn FLOAT;

SET initial_time_knn = get_time();
INSERT INTO result 
SELECT * FROM knn_alg( 
	(SELECT udatapoints.time, ldatapoints.l,
		DIST(ldatapoints.d0, udatapoints.d0, ldatapoints.d1, udatapoints.d1, ldatapoints.d2, udatapoints.d2, ldatapoints.d3, udatapoints.d3, ldatapoints.d4, udatapoints.d4, ldatapoints.d5, udatapoints.d5, ldatapoints.d6, udatapoints.d6, ldatapoints.d7, udatapoints.d7, ldatapoints.d8, udatapoints.d8, ldatapoints.d9, udatapoints.d9, ldatapoints.d10, udatapoints.d10, ldatapoints.d11, udatapoints.d11, ldatapoints.d12, udatapoints.d12, ldatapoints.d13, udatapoints.d13, ldatapoints.d14, udatapoints.d14, ldatapoints.d15, udatapoints.d15, ldatapoints.d16, udatapoints.d16, ldatapoints.d17, udatapoints.d17, ldatapoints.d18, udatapoints.d18, ldatapoints.d19, udatapoints.d19, ldatapoints.d20, udatapoints.d20, ldatapoints.d21, udatapoints.d21, ldatapoints.d22, udatapoints.d22, ldatapoints.d23, udatapoints.d23, ldatapoints.d24, udatapoints.d24, ldatapoints.d25, udatapoints.d25, ldatapoints.d26, udatapoints.d26, ldatapoints.d27, udatapoints.d27, ldatapoints.d28, udatapoints.d28, ldatapoints.d29, udatapoints.d29, ldatapoints.d30, udatapoints.d30, ldatapoints.d31, udatapoints.d31, ldatapoints.d32, udatapoints.d32, ldatapoints.d33, udatapoints.d33, ldatapoints.d34, udatapoints.d34, ldatapoints.d35, udatapoints.d35, ldatapoints.d36, udatapoints.d36, ldatapoints.d37, udatapoints.d37, ldatapoints.d38, udatapoints.d38, ldatapoints.d39, udatapoints.d39, ldatapoints.d40, udatapoints.d40, ldatapoints.d41, udatapoints.d41, ldatapoints.d42, udatapoints.d42, ldatapoints.d43, udatapoints.d43, ldatapoints.d44, udatapoints.d44, ldatapoints.d45, udatapoints.d45, ldatapoints.d46, udatapoints.d46, ldatapoints.d47, udatapoints.d47, ldatapoints.d48, udatapoints.d48, ldatapoints.d49, udatapoints.d49, ldatapoints.d50, udatapoints.d50, ldatapoints.d51, udatapoints.d51, ldatapoints.d52, udatapoints.d52, ldatapoints.d53, udatapoints.d53, ldatapoints.d54, udatapoints.d54, ldatapoints.d55, udatapoints.d55, ldatapoints.d56, udatapoints.d56, ldatapoints.d57, udatapoints.d57, ldatapoints.d58, udatapoints.d58, ldatapoints.d59, udatapoints.d59, ldatapoints.d60, udatapoints.d60, ldatapoints.d61, udatapoints.d61, ldatapoints.d62, udatapoints.d62, ldatapoints.d63, udatapoints.d63, ldatapoints.d64, udatapoints.d64, ldatapoints.d65, udatapoints.d65, ldatapoints.d66, udatapoints.d66, ldatapoints.d67, udatapoints.d67, ldatapoints.d68, udatapoints.d68, ldatapoints.d69, udatapoints.d69, ldatapoints.d70, udatapoints.d70, ldatapoints.d71, udatapoints.d71, ldatapoints.d72, udatapoints.d72, ldatapoints.d73, udatapoints.d73, ldatapoints.d74, udatapoints.d74, ldatapoints.d75, udatapoints.d75, ldatapoints.d76, udatapoints.d76, ldatapoints.d77, udatapoints.d77, ldatapoints.d78, udatapoints.d78, ldatapoints.d79, udatapoints.d79, ldatapoints.d80, udatapoints.d80, ldatapoints.d81, udatapoints.d81, ldatapoints.d82, udatapoints.d82, ldatapoints.d83, udatapoints.d83, ldatapoints.d84, udatapoints.d84, ldatapoints.d85, udatapoints.d85, ldatapoints.d86, udatapoints.d86, ldatapoints.d87, udatapoints.d87, ldatapoints.d88, udatapoints.d88, ldatapoints.d89, udatapoints.d89, ldatapoints.d90, udatapoints.d90, ldatapoints.d91, udatapoints.d91, ldatapoints.d92, udatapoints.d92, ldatapoints.d93, udatapoints.d93, ldatapoints.d94, udatapoints.d94, ldatapoints.d95, udatapoints.d95, ldatapoints.d96, udatapoints.d96, ldatapoints.d97, udatapoints.d97, ldatapoints.d98, udatapoints.d98, ldatapoints.d99, udatapoints.d99)
	FROM ldatapoints, udatapoints) );
SET final_time_knn = get_time();

SELECT final_time_knn - initial_time_knn as Time_seconds;
-- KNN *******************************************************************************************

